主讲人：熊曾刚第 1 章  概  述
1.1                     计算机网络在信息时代中的作用1.2                                                  互联网概述1.3                                               互联网的组成1.4                              计算机网络在我国的发展1.5                                        计算机网络的类别1.6                                        计算机网络的性能1.7                                 计算机网络的体系结构
1.1.1                                    计算机网络的定义1.1.2                                    计算机网络的特点1.1计算机网络在信息时代中的作用
万物联网人人用网万物联网人人用网
提供电话、电报及传真等服务。向用户传送各种电视节目。使用户能在计算机之间传送数据文件。万物联网人人用网
万物联网人人用网
万物联网人人用网如何称呼 Internet？因特网：推荐，但却长期未得到推广。互联网：目前流行最广，事实上的标准译名。互联网 ≠互连网。互连网：局部范围互连起来的计算机网络。思考：它们说的是哪个网？上网，联网，网民，网吧，网银，网购，网管，知网。
万物联网人人用网
万物联网人人用网是 Internet 提供许多服务的基础。
万物联网人人用网
万物联网人人用网指“互联网+各个传统行业”。把互联网的创新成果深度融合于经济社会各领域。
万物联网人人用网需要加强对互联网的管理。
1.2.1                                              网络的网络1.2.2                互联网基础结构发展的三个阶段1.2.3                                 互联网的标准化工作1.2互联网概述
1.2.1  网络的网络计算机网络：由若干节点(node)和连接这些节点的链路(link)组成。节点可以是计算机、集线器、交换机或路由器等。图1-1 (a) 简单的网络节点链路
1.2.1  网络的网络互连网 (internetwork 或 internet)：多个网络通过一些路由器相互连接起来，构成了一个覆盖范围更大的计算机网络。“网络的网络”(network of networks)。图1-1 (b) 由网络构成的互连网
用“云”表示网络：主机在“云”里
主机用“云”表示网络：主机在“云”外
网络：把许多计算机连接在一起。互连网：把许多网络通过一些路由器连接在一起。与网络相连的计算机常称为主机。互连网 (internet) ≠ 互联网 (Internet)网络与互连网
1.2.2  互联网基础结构发展的三个阶段
ARPANET：最初只是一个单个的分组交换网，不是一个互连网。 1983 年，TCP/IP 协议成为 ARPANET 上的标准协议，使得所有使用 TCP/IP 协议的计算机都能利用互连网相互通信。人们把 1983 年作为互联网的诞生时间。1990 年，ARPANET 正式宣布关闭。第一阶段：1969 – 1990 1969 年的 ARPANET 
国家科学基金网 NSFNET。三级结构：主干网、地区网和校园网（或企业网）。覆盖了全美国主要的大学和研究所，并且成为互联网中的主要组成部分。第二阶段：1985 – 1993 
出现了互联网服务提供者 ISP (Internet Service Provider)：提供接入到互联网的服务。需要收取一定的费用。多层次 ISP 结构：主干 ISP、地区 ISP 和本地 ISP。覆盖面积大小和所拥有的 IP 地址数目的不同第三阶段：1993 – 现在 
第三阶段：1993 – 现在 
互联网交换点 IXP (Internet eXchange Point)：允许两个网络直接相连并快速交换分组。常采用工作在数据链路层的网络交换机。世界上较大的 IXP 的峰值吞吐量都在 Tbit/s 量级。内容提供者 (Content Provider)：在互联网上向所有用户提供视频等内容的公司。不向用户提供互联网的转接服务。第三阶段：1993 – 现在 
万维网 WWW  (World Wide Web)：20 世纪 90 年代：万维网 WWW 的问世由欧洲原子核研究组织 CERN 开发。成为互联网指数级增长的主要驱动力。2019 年 3 月底，互联网的用户数已超过了 43.8亿。
互联网研究部 IRTF 互联网工程部 IETF …RGWG……RG…领域领域WGWGWG互联网体系结构研究委员会 IAB 互联网研究指导小组IRSG 互联网工程指导小组IESG 互联网协会 ISOC1.2.3  互联网的标准化工作互联网的标准化工作对互联网的发展起到了非常重要的作用。组织架构
RFC：Request For Comments （请求评论）。所有的 RFC 文档都可从互联网上免费下载。任何人都可以用电子邮件随时发表对某个文档的意见或建议。但并非所有的 RFC 文档都是互联网标准。只有很少部分的 RFC 文档最后才能变成互联网标准。RFC 文档按发表时间的先后编上序号（即 RFCxxxx，xxxx 是阿拉伯数字）。标准发表：以 RFC 的形式
标准化过程
1.3互联网的组成1.3.1                                    互联网的边缘部分1.3.2                                    互联网的核心部分
1.3  互联网的组成从互联网的工作方式上看，可以划分为两大块：边缘部分： 由所有连接在互联网上的主机组成，由用户直接使用，用来进行通信（传送数据、音频或视频）和资源共享。核心部分：由大量网络和连接这些网络的路由器组成，为边缘部分提供服务（提供连通性和交换）。
1.3  互联网的组成
1.3.1  互联网的边缘部分处在互联网边缘部分的就是连接在互联网上的所有的主机。这些主机又称为端系统 (end system)。端系统在功能上可能有很大差别：小的端系统：普通个人电脑、智能手机、网络摄像头等。大的端系统：非常昂贵的大型计算机或服务器。端系统的拥有者：可以是个人、单位、或某个 ISP。
1.3.1  互联网的边缘部分互联网的核心部分互联网的边缘部分端系统大型或超级计算机服务器
实际上是指：主机 A 的某个进程和主机 B 上的另一个进程进行通信。“计算机之间通信”的含义
端系统之间的两种通信方式
客户/服务器方式所描述的是进程之间服务和被服务的关系。客户是服务的请求方，服务器是服务的提供方。1.  客户-服务器方式（C/S 方式）运行客户程序网络边缘网络核心运行服务器程序AB客户服务器客户 A 向服务器 B 发出请求服务，服务器 B 向客户 A 提供服务。客户与服务器的通信关系建立后，通信可以是双向的，客户和服务器都可发送和接收数据。
客户程序被用户调用后运行，需主动向远地服务器发起通信（请求服务）。必须知道服务器程序的地址。不需要特殊的硬件和很复杂的操作系统。服务器程序专门用来提供某种服务的程序，可同时处理多个客户请求。一直不断地运行着，被动地等待并接受来自各地的客户的通信请求。不需要知道客户程序的地址。一般需要强大的硬件和高级的操作系统支持。客户程序和服务器程序主要特点
两台主机在通信时不区分服务请求方和服务提供方。只要都运行了 P2P 软件，就可以进行平等的、对等连接通信。2. 对等连接方式（P2P 方式）对等连接方式从本质上看仍然是使用客户服务器方式，只是对等连接中的每一个主机既是客户又是服务器。网络边缘网络核心运行P2P 程序运行P2P 程序DCEF运行P2P 程序运行P2P 程序
1.3.2  互联网的核心部分是互联网中最复杂的部分。向网络边缘中的主机提供连通性，使任何一台主机都能够向其他主机通信。在网络核心部分起特殊作用的是路由器 (router)。路由器是实现分组交换 (packet switching) 的关键构件，其任务是转发收到的分组。分组转发是网络核心部分最重要的功能。
1.3.2  互联网的核心部分典型交换技术包括：电路交换分组交换报文交换 等。互联网的核心部分采用分组交换技术。
电线对的数量与电话机数量的平方（N2）成正比。1. 电路交换的主要特点5 部电话机两两直接相连，需 10 对电线。N 部电话机两两直接相连，需 N(N –1)/2  对电线。
当电话机的数量增多时，使用电话交换机将这些电话连接起来。使用交换机
“交换 (switching)”的含义转接：把一条电话线转接到另一条电话线，使它们连通起来。从通信资源的分配角度来看，就是按照某种方式动态地分配传输线路的资源。
分为三个阶段：建立连接：建立一条专用的物理通路（占用通信资源）。通话：主叫和被叫双方互相通电话（一直占用通信资源）。释放连接：释放刚才使用的专用的物理通路（归还通信资源）。电路交换特点这种必须经过“建立连接（占用通信资源）、通话（一直占用通信资源）、释放连接（归还通信资源）”三个步骤的交换方式称为电路交换。
AB电信网交换机交换机交换机交换机中继线用户线用户线CDEF计算机数据具有突发性，这导致在传送数据时，通信线路的利用率很低，真正用来传送数据的时间往往不到 10%，甚至不到 1%，已被用户占用的通信线路资源在绝大部分时间里都是空闲的。电路交换特点：通话的两个用户始终占用端到端的通信资源
采用存储转发技术。2. 分组交换的主要特点报文110100011010101011010101110001001101001011在发送端，先把较长的报文划分成更小的等长数据段。 
数     据数     据数     据首部首部首部注意：左边是“前面”分组又称为“包”，而分组的首部也可称为“包头”。数据段前面添加首部就构成了分组 (packet)
互联网采用分组交换技术。分组是在互联网中传送的数据单元。发送端依次把各分组发送到接收端。分组交换以“分组”作为数据传输单元
数     据首部数     据首部数     据首部假定分组在传输过程中没有出现差错，在转发时也没有被丢弃。接收端收到分组后剥去首部，还原成原来的报文
根据首部中包含的目的地址、源地址等重要控制信息进行转发。每一个分组在互联网中独立选择传输路径。位于网络核心部分的路由器负责转发分组，即进行分组交换。路由器要创建和动态维护转发表。分组在互联网中的转发
(a) 核心部分的路由器把网络互连起来
(b) 核心部分中的网络可用一条链路表示
注意分组路径的变化！H1 向 H5 发送分组H2 向 H6 发送分组ABDEC路由器H2H4H6H5H3H1互联网主机每个分组独立选择传输路径
H1ABDECH5H6H2H3路由器最后到达目的主机 H5互联网H1 向 H5 发送分组H4在路由器 A 暂存查找转发表找到转发的端口转发在路由器 C 暂存查找转发表找到转发的端口转发在路由器 E 暂存查找转发表找到转发的端口转发主机分组的存储转发过程
分组交换的优点
排队延迟：分组在各路由器存储转发时需要排队。不保证带宽：动态分配。增加开销：各分组必须携带控制信息；路由器要暂存分组，维护转发表等。分组交换带来的问题
在 20 世纪 40 年代，电报通信就采用了基于存储转发原理的报文交换 (message switching)。 但报文交换的时延较长，从几分钟到几小时不等。现在报文交换已经很少有人使用了。 报文交换
A    B    C     D A    B    C    DA    B    C    D报文交换电路交换分组交换t数据传送特点比特流直达终点报文报文报文分组分组分组存储转发存储转发存储转发存储转发电路交换、报文交换和分组交换的主要区别
若要连续传送大量的数据，且其传送时间远大于连接建立时间，则电路交换的传输速率较快。报文交换和分组交换不需要预先分配传输带宽，在传送突发数据时可提高整个网络的信道利用率。由于一个分组的长度往往远小于整个报文的长度，因此分组交换比报文交换的时延小，同时也具有更好的灵活性。三种交换方式的比较
1.4  计算机网络在我国的发展1980 年，铁道部开始进行计算机联网实验。1989 年 11 月，我国第一个公用分组交换网 CNPAC 建成运行。 1994 年 4 月 20 日，我国用 64 kbit/s 专线正式连入互联网，我国被国际上正式承认为接入互联网的国家。1994 年 5 月，中国科学院高能物理研究所设立了我国的第一个万维网服务器。1994 年 9 月，中国公用计算机互联网 CHINANET 正式启动。
1.4  计算机网络在我国的发展到目前为止，我国陆续建造了基于互联网技术的并能够和互联网互连的多个全国范围的公用计算机网络，其中规模最大的就是下面这五个：中国电信互联网 CHINANET（也就是原来的中国公用计算机互联网）中国联通互联网 UNINET中国移动互联网 CMNET中国教育和科研计算机网 CERNET中国科学技术网 CSTNET
1.4  计算机网络在我国的发展                 1994 年，中国教育和科研计算机网 CERNET (China Education and Research NETwork) 是我国第一个 IPv4 互联网主干网。2004 年 2 月，我国的第一个下一代互联网 CNGI 的主干网 CERNET2 试验网正式开通，并提供服务。试验网以 2.5~10 Gbit/s 的速率连接北京、上海和广州三个 CERNET 核心节点，并与国际下一代互联网相连接。               中国互联网络信息中心 CNNIC (ChiNa Network Information Center)  每年两次公布我国互联网的发展情况。到 2019 年底，我国的国际出口带宽已超过 8.8 Tbit/s （1 Tbit/s = 103 Gbit/s）。
             1996 年，张朝阳创立了中国第一家以风险投资资金建立的互联网公司—爱特信公司。两年后，爱特信公司推出“搜狐”产品，并更名为搜狐公司(Sohu)。搜狐网站(Sohu.com) 是中国首家大型分类查询搜索引擎。                  1997 年，丁磊创立了网易公司(NetEase)，推出了中国第一家中文全文搜索引擎，开发的超大容量免费邮箱（如163和126等）。                  1998 年，王志东创立新浪网站(Sina.com ) 。      新浪的微博是全球使用最多的微博之一。对我国互联网事业发展影响较大的人物和事件
                    1998 年，马化腾、张志东创立了腾讯公司 (Tencent) 。    1999 年，腾讯就推出了用在 PC 上的即时通信软件 OICQ，后改名为 QQ。     2011 年，腾讯推出了专门供智能手机使用的即时通信软件“微信”。          2000 年，李彦宏和徐勇创建了百度网站 (Baidu.com)，现在已成为全球最大的中文搜索引擎。         1999 年，马云创建了阿里巴巴网站 (Alibaba.com)。     2003 年，马云创立了个人网上贸易市场平台—淘宝网 (Taobao.com)。            2004 年，阿里巴巴集团创立了第三方支付平台—支付宝(Alipay.com)。对我国互联网事业发展影响较大的人物和事件
1.5计算机网络的类别1.5.1                                 计算机网络的定义1.5.2                     几种不同类别的计算机网络
1.5.1  计算机网络的定义计算机网络的精确定义并未统一。较好的定义：计算机网络主要是由一些通用的、可编程的硬件互连而成的，而这些硬件并非专门用来实现某一特定目的（例如，传送数据或视频信号）。这些可编程的硬件能够用来传送多种不同类型的数据，并能支持广泛的和日益增长的应用。
“可编程的硬件”表明：这种硬件一定包含有中央处理器 CPU。计算机网络所连接的硬件包括：一般的计算机；智能手机、电视 等。计算机网络可以：传送数据；支持多种应用（包括今后可能出现的各种应用）。如何理解？
1.5.2  几种不同类别的计算机网络计算机网络有多种类别。可以按以下方法分类：按照网络的作用范围进行分类；按照网络的使用者进行分类；用来把用户接入到互联网的网络。
1. 按照网络的作用范围进行分类若中央处理机之间的距离非常近（如仅 1 米甚至更小些），则一般就称之为多处理机系统，而不称它为计算机网络。 
2. 按照网络的使用者进行分类公用网和专用网都可以传送多种业务。如传送的是计算机数据，则分别是公用计算机网络和专用计算机网络。 
接入网 AN (Access Network)又称为本地接入网或居民接入网。用于将用户接入互联网。实际上就是本地 ISP 所拥有的网络，它既不是互联网的核心部分，也不是互联网的边缘部分。是从某个用户端系统到本地 ISP 的第一个路由器（也称为边缘路由器）之间的一种网络。从覆盖的范围看，很多接入网还是属于局域网。3. 用来把用户接入到互联网的网络
1.6计算机网络的性能1.6.1                           计算机网络的性能指标1.6.2                        计算机网络的非性能特征
1.6.1  计算机网络的性能指标性能指标：从不同的方面来度量计算机网络的性能。
最重要的一个性能指标。指的是数据的传送速率，也称为数据率 (data rate) 或比特率 (bit rate)。单位：bit/s，或 kbit/s、Mbit/s、 Gbit/s 等。    例如 4  1010  bit/s 的数据率就记为 40 Gbit/s。速率往往是指额定速率或标称速率，非实际运行速率。1. 速率千 = K = 210 = 1024，兆 = M = 220 = 1024 K，吉 = G = 230 = 1024 M1 字节 (Byte) =  8 比特 (bit）
2. 带宽 (bandwidth)两者本质相同。一条通信链路的“带宽”越宽，其所能传输的“最高数据率”也越高。
单位时间内通过某个网络（或信道、接口）的实际数据量。受网络的带宽或网络的额定速率的限制。额定速率是绝对上限值。可能会远小于额定速率，甚至下降到零！有时可用每秒传送的字节数或帧数来表示。3. 吞吐量 (throughput)
指数据（一个报文或分组，甚至比特）从网络（或链路）的一端传送到另一端所需的时间。有时也称为延迟或迟延。组成：（1）发送时延（2）传播时延（3）处理时延（4）排队时延4. 时延 (delay 或 latency)
也称为传输时延。是主机或路由器发送数据帧所需要的时间，也就是从发送数据帧的第一个比特算起，到该帧的最后一个比特发送完毕所需的时间。（1）发送时延
是电磁波在信道中传播一定的距离需要花费的时间。电磁波传播速率：自由空间的传播速率是光速 = 3.0 ⅹ 105 km/s在铜线电缆中的传播速率约 = 2.3 ⅹ 105 km/s在光纤中的传播速率约 = 2.0 ⅹ 105 km/s（2）传播时延
注意：发送时延与传播时延有本质上的不同。发送时延发生在机器内部的发送器中，与传输信道的长度（或信号传送的距离）没有任何关系。传播时延则发生在机器外部的传输信道媒体上，而与信号的发送速率无关。信号传送的距离越远，传播时延就越大。（2）传播时延
（3）处理时延主机或路由器在收到分组时，为处理分组（例如分析首部、提取数据、差错检验或查找路由）所花费的时间。 （4）排队时延分组在路由器输入输出队列中排队等待处理和转发所经历的时延。排队时延的长短往往取决于网络中当时的通信量。当网络的通信量很大时会发生队列溢出，使分组丢失，这相当于排队时延为无穷大。（3）处理时延 和（4）排队时延
一般说来，小时延的网络要优于大时延的网络。在某些情况下，一个低速率、小时延的网络很可能要优于一个高速率但大时延的网络。4. 时延 (delay 或 latency)总时延  = 发送时延 + 传播时延 + 处理时延 + 排队时延必须指出，在总时延中，究竟是哪一种时延占主导地位，必须具体分析。
…发送器队列结点 B结点 A数据假设从结点 A 向结点 B 发送数据链路四种时延产生的地方不一样四种时延产生的地方
对于高速网络链路，我们提高的仅仅是数据的发送速率，而不是比特在链路上的传播速率。提高数据的发送速率只是减小了数据的发送时延。容易产生的错误概念以下说法是错误的：“在高速链路（或高带宽链路）上，比特会传送得更快些”。
结点 A 要将一个数据块通过 1000 km 的光纤链路发送给结点 B。假设忽略处理时延和排队时延。请分别计算下列情况时的总时延，并验证“数据的发送速率越高，其传送的总时延就越小”的说法是否正确。（1）数据块大小为 100 MB，信道带宽为 1 Mbit/s （2）数据块大小为 100 MB，信道带宽为 100 Mbit/s（3）数据块大小为 1 B，信道带宽为 1 Mbit/s （4）数据块大小为 1 B，信道带宽为 1 Gbit/s分析举例
分析举例解：     传播时延 = 1000 km / 2.0 ⅹ 105 km/s = 5 ms。（1）发送时延 = 100  220  8  106 = 838.9 s，        总时延 = 838.9 + 0.005 ≈ 838.9 s。（2）发送时延 = 100  220  8  108 = 8.389 s        总时延 = 8.389 + 0.005 = 8.394 s。缩小到（1）的近 1/100。（3）发送时延 = 1  8  106 = 8  10–6 s = 8 s,          总时延 = 0.008 + 5 = 5.008 ms。（4）发送时延 = 1  8  109 = 8  10–9 s = 0.008 s        总时延 = 0.000008 + 5 = 5.000008 ms。与（3）相比没有明显减小。不能笼统地认为：“数据的发送速率越高，其传送的总时延就越小”。
（传播）时延（管道长度）链 路带宽（管道截面积）时延带宽积 = 传播时延  带宽链路的时延带宽积又称为以比特为单位的链路长度。管道中的比特数表示从发送端发出但尚未到达接收端的比特数。只有在代表链路的管道都充满比特时，链路才得到了充分利用。链路像一条空心管道5. 时延带宽积
表示从发送方发送完数据，到发送方收到来自接收方的确认总共经历的时间。 6. 往返时间 RTT (Round-Trip Time)往返时间 RTT =    结点 A 到 B 的传播时延 tP                          + 结点 B 处理和排队时延 tPQB                          + 结点 B 发送时延 tTB                          + 结点 B 到 A 的传播时延 tP                       =    2 x 传播时延 tP                          + 结点 B 处理和排队时延 tPQB                          + 结点 B 发送时延 tTB 
结点 A 要将一个 100 MB 数据以 100 Mbit/s 的速率发送给结点 B，B 正确收完该数据后，就立即向 A 发送确认。假定 A 只有在收到 B 的确认信息后，才能继续向 B 发送数据，且确认信息很短。计算 A 向 B 发送数据的有效数据率。分析举例
解：分析举例
在互联网中，往返时间还包括各中间结点的处理时延、排队时延以及转发数据时的发送时延。当使用卫星通信时，往返时间 RTT 相对较长，此时，RTT 是很重要的一个性能指标。6. 往返时间 RTT (Round-Trip Time)
问题：信道利用率越高越好吗？7. 利用率
根据排队论，当某信道的利用率增大时，时延会迅速增加。时延与网络利用率的关系其中：D0：网络空闲时的时延。D：网络在当前的时延。U：网络当前的利用率，数值在 0 到 1 之间。当信道的利用率增大时，该信道引起的时延迅速增加。
1.6.2  计算机网络的非性能特征这些非性能特征与性能指标有很大的关系。
1.7.1                     计算机网络体系结构的形成1.7.2                                     协议与划分层次1.7.3                        具有五层协议的体系结构1.7.4              实体、协议、服务和服务访问点1.7.5                                TCP/IP 的体系结构1.7计算机网络体系结构
1.7.1  计算机网络体系结构的形成计算机网络是一个非常复杂的系统。两台计算机要互相传送文件需解决很多问题计算机 A计算机 B
最初的 ARPANET 设计时提出了分层的设计方法。分层：将庞大而复杂的问题，转化为若干较小的局部问题。1974 年，IBM 按照分层的方法制定并提出了系统网络体系结构 SNA (System Network Architecture) 。此后，其他一些公司也相继推出了具有不同名称的体系结构。提出了不同体系结构但由于网络体系结构的不同，不同公司的设备很难互相连通。
ISO (国际标准化组织) 提出的 OSI/RM (Open Systems Interconnection Reference Model) 是使各种计算机在世界范围内互连成网的标准框架。OSI/RM 是个抽象的概念。1983年，形成了著名的 ISO 7498 国际标准，即七层协议的体系结构。国际标准：开放系统互连参考模型 OSI/RM
基于 TCP/IP 的互联网已抢先在全球相当大的范围成功地运行了。OSI 的专家们在完成 OSI 标准时没有商业驱动力；OSI 的协议实现起来过分复杂，且运行效率很低；OSI 标准的制定周期太长，使得按 OSI 标准生产的设备无法及时进入市场；OSI 的层次划分也不太合理，有些功能在多个层次中重复出现。 但 ISO/OSI 失败了
存在两种国际标准
1.7.2  协议与划分层次网络协议 (network protocol)，简称为协议，是为进行网络中的数据交换而建立的规则、标准或约定。三个组成要素：语法：数据与控制信息的结构或格式 。 语义：需要发出何种控制信息，完成何种动作以及做出何种响应。 同步：事件实现顺序的详细说明。 
协议的两种形式不论什么形式，都必须能够对网络上信息交换过程做出精确的解释。
层次式协议结构
文件传送模块主机 1主机 2文件传送模块文件及传送命令好像是按照水平方向的虚线直接传送的把文件交给下层模块进行发送把收到的文件交给上层模块1，将文件传送模块作为最高的一层划分层次的概念举例：两台主机通过网络传送文件
文件传送模块主机 1主机 2文件传送模块2，再设计一个通信服务模块层好像可直接把文件可靠地传送到对方把文件交给下层模块进行发送把收到的文件交给上层模块通信服务模块通信服务模块文件及传送命令好像是按照水平方向的虚线直接传送的划分层次的概念举例：两台主机通过网络传送文件
文件传送模块主机 1主机 2文件传送模块3，再设计一个网络接入模块层好像可直接把文件可靠地传送到对方通信服务模块通信服务模块网络接入模块网络接入模块网络接口网络接口文件及传送命令好像是按照水平方向的虚线直接传送的通信网络网络接入模块负责做与网络接口细节有关的工作，并向上层提供接入和通信服务。划分层次的概念举例：两台主机通过网络传送文件
分层的优点与缺点
差错控制：使相应层次对等方的通信更加可靠。流量控制：发送端的发送速率必须使接收端来得及接收，不要太快。分段和重装：发送端将要发送的数据块划分为更小的单位，在接收端将其还原。复用和分用：发送端几个高层会话复用一条低层的连接，在接收端再进行分用。连接建立和释放：交换数据前先建立一条逻辑连接，数据传送结束后释放连接。各层完成的主要功能
网络的体系结构 (Network Architecture) 是计算机网络的各层及其协议的集合，就是这个计算机网络及其构件所应完成的功能的精确定义（不涉及实现）。实现 (implementation) 是遵循这种体系结构的前提下，用何种硬件或软件完成这些功能的问题。计算机网络的体系结构
1.7.3  具有五层协议的体系结构OSI 的七层协议体系结构TCP/IP 的四层协议体系结构(a)(b)(c)五层协议的体系结构
任务：通过应用进程间的交互来完成特定网络应用。协议：定义的是应用进程间通信和交互的规则。把应用层交互的数据单元称为报文(message)。例如：DNS，HTTP，SMTP各层的主要功能
任务：负责向两台主机中进程之间的通信提供通用的数据传输服务。具有复用和分用的功能。主要使用两种协议： 传输控制协议 TCP 用户数据报协议 UDP 。各层的主要功能
TCP (Transmission Control Protocol)：提供面向连接的、可靠的数据传输服务。数据传输的单位是报文段 (segment)。UDP (User Datagram Protocol)：提供无连接的尽最大努力 (best-effort) 的数据传输服务（不保证数据传输的可靠性）。数据传输的单位是用户数据报。各层的主要功能
为分组交换网上的不同主机提供通信服务。两个具体任务：路由选择：通过一定的算法，在互联网中的每一个路由器上，生成一个用来转发分组的转发表。转发：每一个路由器在接收到一个分组时，要依据转发表中指明的路径把分组转发到下一个路由器。各层的主要功能
互联网使用的网络层协议是无连接的网际协议 IP  (Internet Protocol) 和许多种路由选择协议，因此互联网的网络层也叫做网际层或 IP 层。IP 协议分组也叫做 IP 数据报，或简称为数据报。各层的主要功能
常简称为链路层。任务：实现两个相邻节点之间的可靠通信。在两个相邻节点间的链路上传送帧（frame）。如发现有差错，就简单地丢弃出错帧。如果需要改正出现的差错，就要采用可靠传输协议来纠正出现的差错。这种方法会使数据链路层协议复杂。各层的主要功能
任务：实现比特（0 或 1）的传输。确定连接电缆的插头应当有多少根引脚，以及各引脚应如何连接。注意：传递信息所利用的一些物理媒体，如双绞线、同轴电缆、光缆、无线信道等，并不在物理层协议之内，而是在物理层协议的下面。各层的主要功能
主机 1主机 2路由器数 据物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器数 据数 据物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器数 据H5数 据物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器数 据H5数 据H4物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器数 据H5数 据H4H3物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器数 据H5数 据H4H3H2T210100 比特流 110100物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器10100 比特流 110100物理传输媒体物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器10100 比特流 110100物理传输媒体物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器H2T210100 比特流 110100物理传输媒体物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器H2T210100 比特流 110100物理传输媒体物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器H2T210100 比特流 110100物理传输媒体物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器H2T210100 比特流 110100物理传输媒体物理传输媒体物理传输媒体10101 比特流 110111数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体10101 比特流 110111数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体10101 比特流 110111数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体10101 比特流 110111数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体10101 比特流 110111数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体10101 比特流 110111数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体10101 比特流 110111数 据数据在各层之间的传递过程
主机 1主机 2路由器物理传输媒体物理传输媒体物理传输媒体10101 比特流 110111数 据数据在各层之间的传递过程
OSI 参考模型把对等层次之间传送的数据单位称为该层的协议数据单元 PDU (Protocol Data Unit)。任何两个同样的层次把 PDU （即数据单元加上控制信息）通过水平虚线直接传递给对方。这就是所谓的“对等层”之间的通信。对等层与协议数据单元
1.7.4  实体、协议、服务和服务访问点实体 (entity) ：表示任何可发送或接收信息的硬件或软件进程。 协议：控制两个对等实体进行通信的规则的集合。 在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。要实现本层协议，还需要使用下层所提供的服务。
注意：协议和服务在概念上是不一样的
在同一系统中相邻两层的实体进行交互（即交换信息） 的地方，通常称为服务访问点 SAP (Service Access Point)。SAP 是一个抽象的概念，它实际上就是一个逻辑接口。OSI 把层与层之间交换的数据的单位称为服务数据单元 SDU (Service Data Unit)。SDU 可以与 PDU 不一样。例如：可以是多个 SDU 合成为一个 PDU，也可以是一个 SDU 划分为几个 PDU。服务访问点 SAP
协议 (n+1)SAPSAP交换服务原语交换服务原语实体 (n + 1)服务提供者第 n 层第 n+1 层实体 (n + 1)服务用户实体 (n)实体 (n)协议(n)相邻两层之间的关系
这样的协议无法实现！没有一种协议能够使蓝军 100% 获胜。协议很复杂，要应付所有异常情况
1.7.5  TCP/IP 的体系结构应用层运输层网际层网络接口层主机A网络 2网络 1应用层运输层网际层网络接口层网际层网络接口层4321TCP/IP 是四层体系结构路由器在转发分组时最高只用到网际层，没有使用运输层和应用层。 主机 A主机 B路由器
现在互联网使用的 TCP/IP 体系结构已经发生了演变，即某些应用程序可以直接使用 IP 层，或甚至直接使用最下面的网络接口层。TCP/IP 体系结构的另一种表示方法
HTTPSMTPDNSRTPTCPUDP网际层网络接口层运输层应用层………网络接口 1网络接口 2网络接口 3IP设计理念：网络核心部分越简单越好。沙漏计时器形状的 TCP/IP 协议族
互联网所有这些通信实际上都需要使用下面各层所提供的服务。计算机 A计算机 B互联网中客户-服务器工作方式
数据链路层物理层运输层网络层应用层计算机 C同时运行多个服务器进程同时为多个客户进程提供服务
结束
第 2 章  物 理 层主讲人：
计算机网络体系结构OSI 的七层协议体系结构TCP/IP 的四层协议体系结构(a)(b)(c)五层协议的体系结构
2.1                                       物理层的基本概念2.2                                    数据通信的基础知识2.3                                 物理层下面的传输媒体2.4                                              信道复用技术2.5                                              数字传输系统2.6                                              宽带接入技术
2.1  物理层的基本概念物理层考虑的是怎样才能在连接各种计算机的传输媒体上传输数据比特流，而不是指具体的传输媒体。作用：尽可能屏蔽掉不同传输媒体和通信手段的差异。用于物理层的协议也常称为物理层规程 (procedure)。
确定与传输媒体的接口的一些特性。4 个特性：机械特性：指明接口所用接线器的形状和尺寸、引线数目和排列、固定和锁定装置等。电气特性：指明在接口电缆的各条线上出现的电压的范围。功能特性：指明某条线上出现的某一电平的电压的意义。过程特性：指明对于不同功能的各种可能事件的出现顺序。 物理层的主要任务
2.2.1                                 数据通信系统的模型2.2.2                          有关信道的几个基本概念2.2.3                                       信道的极限容量2.2数据通信的基础知识
2.2.1  数据通信系统的模型三大部分：源系统（或发送端、发送方）、传输系统（或传输网络）和目的系统（或接收端、接收方）。调制解调器计算机 调制解调器数字比特流数字比特流模拟信号模拟信号 输入汉字显示汉字计算机公用电话网
消息(message)：如话音、文字、图像、视频等。数据 (data)： 运送消息的实体。有意义的符号序列。常用术语11001001001100111101011011001110……
信号 (signal)：数据的电气的或电磁的表现。 模拟信号 (analogous signal)：代表消息的参数的取值是连续的。 数字信号 (digital signal)：代表消息的参数的取值是离散的。 码元：在使用时间域（简称为时域）的波形表示数字信号时，代表不同离散数值的基本波形。使用二进制编码时，只有两种不同的码元：    0 状态，1 状态。常用术语
2.2.2  有关信道的几个基本概念信道：一般用来表示向某一个方向传送信息的媒体。单向通信（单工通信）：只能有一个方向的通信，没有反方向的交互。双向交替通信（半双工通信）：通信的双方都可以发送信息，但双方不能同时发送（当然也就不能同时接收）。双向同时通信（全双工通信）：通信的双方可以同时发送和接收信息。 
2.2.2  有关信道的几个基本概念基带信号（即基本频带信号）来自信源的信号。包含有较多的低频成分，甚至有直流成分。调制基带调制：仅对基带信号的波形进行变换，把数字信号转换为另一种形式的数字信号。把这种过程称为编码 (coding)。带通调制：使用载波 (carrier)进行调制，把基带信号的频率范围搬移到较高的频段，并转换为模拟信号。经过载波调制后的信号称为带通信号（即仅在一段频率范围内能够通过信道）。
不归零制：正电平代表 1，负电平代表 0。归零制：正脉冲代表 1，负脉冲代表 0。曼彻斯特编码：位周期中心的向上跳变代表 0，位周期中心的向下跳变代表 1。但也可反过来定义。差分曼彻斯特编码：在每一位的中心处始终都有跳变。位开始边界有跳变代表 0，而位开始边界没有跳变代表 1。(1) 常用编码方式
(1) 常用编码方式数字信号常用的编码方式
信号频率：曼彻斯特编码和差分曼彻斯特编码产生的信号频率比不归零制高。自同步能力：不归零制不能从信号波形本身中提取信号时钟频率（这叫做没有自同步能力）。曼彻斯特编码和差分曼彻斯特编码具有自同步能力。(1) 常用编码方式
基带信号往往包含有较多的低频成分，甚至有直流成分，而许多信道并不能传输这种低频分量或直流分量。必须对基带信号进行调制 (modulation)。 最基本的调制方法有以下几种：调幅(AM)：载波的振幅随基带数字信号而变化。 调频(FM)：载波的频率随基带数字信号而变化。调相(PM) ：载波的初始相位随基带数字信号而变化。(2) 基本的带通调制方法
(2) 基本的带通调制方法基带信号调幅调频调相010011100最基本的三种调制方法
一种多元制的振幅相位混合调制方法，以达到更高的信息传输速率。正交振幅调制 QAM (Quadrature Amplitude Modulation) 例如：可供选择的相位有 12 种，而对于每一种相位有 1 或 2 种振幅可供选择。总共有 16 种组合，即 16 个码元。由于 4 bit 编码共有 16 种不同的组合，因此这 16 个点中的每个点可对应于一种 4 bit 的编码。数据传输率可提高 4 倍。
2.2.3  信道的极限容量数字信号通过实际的信道
2.2.3  信道的极限容量任何实际的信道都不是理想的，都不可能以任意高的速率进行传送。码元传输的速率越高，或信号传输的距离越远，或噪声干扰越大，或传输媒体质量越差，在接收端的波形的失真就越严重。限制码元在信道上的传输速率的两个因素：信道能够通过的频率范围。信噪比。
具体的信道所能通过的频率范围总是有限的。信号中的许多高频分量往往不能通过信道。码间串扰：接收端收到的信号波形失去了码元之间的清晰界限。(1) 信道能够通过的频率范围码元传输的最高速率 = 2W （码元/秒）在带宽为 W (Hz) 的低通信道中，若不考虑噪声影响，则码元传输的最高速率是 2W (码元/秒)。传输速率超过此上限，就会出现严重的码间串扰的问题，使接收端对码元的判决（即识别）成为不可能。奈氏准则：
信噪比就是信号的平均功率和噪声的平均功率之比。常记为 S/N，并用分贝 (dB) 作为度量单位。即：例如：当 S/N =10 时，信噪比为10dB，而当 S/N =1000 时，信噪比为30dB。 (2) 信噪比信噪比(dB) = 10 log10(S/N ) (dB) 
信道的极限信息传输速率 C  可表达为：香农公式C = W log2(1+S/N)  (bit/s) 其中：W 信道的带宽 (Hz)；S  为信道内所传信号的平均功率；N 为信道内部的高斯噪声功率。 信道的带宽或信道中的信噪比越大，则信息的极限传输速率就越高。 只要信息传输速率低于信道的极限信息传输速率，就一定可以找到某种办法来实现无差错的传输。
方法：用编码的方法让每一个码元携带更多比特的信息量。提高信息的传输速率的方法若以同样的速率发送码元，则同样时间所传送的信息量就提高到了 3 倍。将信号中的每 3 个比特编为 1 组：	101 011 000 110 111 010 ……
奈氏准则：激励工程人员不断探索更加先进的编码技术，使每一个码元携带更多比特的信息量。香农公式：告诫工程人员，在实际有噪声的信道上，不论采用多么复杂的编码技术，都不可能突破信息传输速率的绝对极限。注意：奈氏准则和香农公式的意义不同
2.3.1                                       导引型传输媒体2.3.2                                    非导引型传输媒体2.3物理层下面的传输媒体
2.3  物理层下面的传输媒体传输媒体是数据传输系统中在发送器和接收器之间的物理通路。两大类：导引型传输媒体：电磁波被导引沿着固体媒体（铜线或光纤）传播。非导引型传输媒体：指自由空间。非导引型传输媒体中电磁波的传输常称为无线传输。
2.3  物理层下面的传输媒体电信领域使用的电磁波的频谱：
2.3.1  导引型传输媒体最古老但又最常用的传输媒体。把两根互相绝缘的铜导线并排放在一起，然后用规则的方法绞合 (twist) 起来就构成了双绞线。绞合度越高，可用的数据传输率越高。2 大类：无屏蔽双绞线 UTP。屏蔽双绞线 STP。1. 双绞线
无屏蔽双绞线 UTP (Unshielded Twisted Pair) ：无屏蔽层。价格较便宜。屏蔽双绞线 STP (Shielded Twisted Pair)：带屏蔽层。都必须有接地线。1. 双绞线
x/UTP：对整条双绞线电缆进行屏蔽。F/UTP (F=Foiled)：表明采用铝箔屏蔽层。S/UTP (S=braid Screen)：表明采用金属编织层进行屏蔽。SF/UTP：表明在铝箔屏蔽层外面再加上金属编织层的屏蔽。FTP 或 U/FTP：把电缆中的每一对双绞线都加上铝箔屏蔽层。U表明对整条电缆不另增加屏蔽层F/FTP：在 FTP 基础上对整条电缆再加上铝箔屏蔽层。S/FTP：在 FTP 基础上对整条电缆再加上金属编织层的屏蔽。屏蔽双绞线 STP
屏蔽双绞线 STPF/UTP                U/FTP                  F/FTP  屏蔽层铝箔铝箔屏蔽层 F/UTP在抗干扰能力上，U/FTP 比 F/UTP 好，而 F/FTP 则是最好的。
双绞线标准 EIA/TIA-568常用绞合线的类别、带宽和典型应用
双绞线标准 EIA/TIA-568常用绞合线的类别、带宽和典型应用无论是哪种类别的双绞线，衰减都随频率的升高而增大。双绞线的最高速率还与数字信号的编码方法有很大的关系。
由内导体铜质芯线（单股实心线或多股绞合线）、绝缘层、网状编织的外导体屏蔽层（也可以是单股的）以及保护塑料外层所组成。具有很好的抗干扰特性，被广泛用于传输较高速率的数据。2. 同轴电缆
光纤是光纤通信的传输媒体。通过传递光脉冲来进行通信。其传输带宽远远大于目前其他各种传输媒体的带宽。3. 光缆发送端：要有光源，在电脉冲的作用下能产生出光脉冲。光源：发光二极管，半导体激光器等。接收端：要有光检测器，利用光电二极管做成，在检测到光脉冲时还原出电脉冲。
光波在纤芯中的传播光纤通常由非常透明的石英玻璃拉成细丝，主要由纤芯和包层构成双层通信圆柱体。当光线从高折射率的媒体射向低折射率的媒体时，其折射角将大于入射角。如果入射角足够大，就会出现全反射，光也就沿着光纤传输下去。光线在光纤中的折射
光波在纤芯中的传播光波在纤芯中的传播光线在纤芯中传输的方式是不断地全反射
多模光纤 可以存在多条不同角度入射的光线在一条光纤中传输。光脉冲在多模光纤中传输时会逐渐展宽，造成失真，只适合于近距离传输。单模光纤其直径减小到只有一个光的波长（几个微米），可使光线一直向前传播，而不会产生多次反射。制造成本较高，但衰耗较小。光源要使用昂贵的半导体激光器，不能使用较便宜的发光二极管。多模光纤与单模光纤
多模光纤与单模光纤多模光纤
常用的三个波段的中心：850 nm， 1300 nm， 1550 nm。所有这三个波段都具有 25000~30000 GHz 的带宽，通信容量非常大。光纤通信中使用的光波的波段波长 (μm)衰减 (dB/km )
必须将光纤做成很结实的光缆。数十至数百根光纤，加强芯和填充物，必要时还可放入远供电源线，最后加上包带层和外护套。使抗拉强度达到几公斤，完全可以满足工程施工的强度要求。光缆
(1) 通信容量非常大(2) 传输损耗小，中继距离长，对远距离传输特别经济。(3) 抗雷电和电磁干扰性能好。(4) 无串音干扰，保密性好，不易被窃听或截取数据。(5) 体积小，重量轻。光纤优点现在已经非常广泛地应用在计算机网络、电信网络和有线电视网络的主干网络中。
2.3.2  非导引型传输媒体利用无线电波在自由空间的传播可较快地实现多种通信，因此将自由空间称为“非导引型传输媒体”。无线传输所使用的频段很广：	LF ~ THF （30 kHz ~ 3000 GHz）
占有特殊重要的地位。微波频率范围：300 MHz~300 GHz（波长1 m ~ 1 mm）。主要使用：2 ~ 40 GHz。在空间主要是直线传播。地球表面：传播距离受到限制，一般只有 50 km左右。100 m 高的天线塔：传播距离可增大到 100 km。无线电微波通信
基站发出的信号可以经过多个障碍物的数次反射，从多条路径、按不同时间等到达接收方。多条路径的信号叠加后一般都会产生很大的失真，这就是所谓的多径效应。多径效应信号从 →  和 →→→ 两条路径到达手机。
对于给定的调制方式和数据率，信噪比越大，误码率就越低。对于同样的信噪比，具有更高数据率的调制技术的误码率也更高。如果用户在进行通信时不断改变自己的地理位置，就会引起无线信道特性的改变，因而信噪比和误码率都会发生变化。误码率（即比特错误率）不能大于可容许的范围理想无线信道的误码率与信噪比、调制方式、数据率的关系
微波接力：中继站把前一站送来的信号放大后再发送到下一站。远距离微波通信：微波接力100 m 高的天线塔可使传播距离增大到 100 公里同步地球卫星通信覆盖区的跨度达 18000 多公里卫星作为中继器
主要特点：(1) 微波波段频率很高，频段范围很宽，其通信信道的容量很大。(2) 工业干扰和天电干扰对微波通信的危害小，微波传输质量较高。(3) 与相同容量和长度的电缆载波通信比较，微波接力通信建设投资少，见效快，易于实施。主要缺点：(1) 相邻站之间必须直视（常称为视距 LOS (Line Of Sight)），不能有障碍物，存在多径效应。(2) 有时会受到恶劣气候的影响。(3) 与电缆通信系统比较，微波通信的隐蔽性和保密性较差。(4) 对大量中继站的使用和维护要耗费较多的人力和物力。远距离微波通信：微波接力
卫星通信通信容量大，通信距离远，通信比较稳定，通信费用与通信距离无关。但传播时延较大：在 250~300 ms之间。请注意：“卫星信道的传播时延较大”并不等于“用卫星信道传送数据的时延较大”。保密性相对较差。造价较高。
卫星通信低轨道卫星通信系统（卫星高度在 2000 公里以下）已开始使用。目前，大功率、大容量、低轨道宽带卫星已开始在空间部署，并构成了空间高速链路。
无线局域网：使用无线信道的计算机局域网。无线电频段：通常必须得到无线电频谱管理机构的许可证。ISM 频段：可以自由使用。 无线局域网使用的 ISM 频段
2.4.1         频分复用、时分复用和统计时分复用2.4.2                                                 波分复用2.4.3                                                 码分复用2.4信道复用技术
2.4.1  频分复用、时分复用和统计时分复用复用 (multiplexing) ：允许用户使用一个共享信道进行通信。
最基本。将整个带宽分为多份，用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。所有用户在同样的时间占用不同的带宽（即频带）资源。频分复用 FDM (Frequency Division Multiplexing) 
将时间划分为一段段等长的时分复用帧（TDM帧）。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙。每一个用户所占用的时隙是周期性地出现（其周期就是TDM帧的长度）的。TDM 信号也称为等时 (isochronous) 信号。所有用户在不同的时间占用同样的频带宽度。时分复用 TDM (Time Division Multiplexing)
时分复用 TDM (Time Division Multiplexing)频率时间BCDBCDBCDBCD…周期性出现
可让 N 个用户各使用一个频带，或让更多的用户轮流使用这 N 个频带。这种方式称为频分多址接入 FDMA (Frequency Division Multiple Access)，简称为频分多址。可让 N 个用户各使用一个时隙，或让更多的用户轮流使用这 N 个时隙。这种方式称为时分多址接入 TDMA (Time Division Multiple Access)，简称为时分多址。频分多址与时分多址
成对使用。复用器 (multiplexer) 和分用器 (demultiplexer)
时分复用会导致信道利用率不高
统计时分复用 STDM  (Statistic TDM)用户ABCDabcdttttt3 个 STDM 帧#1④③②①acb#2#3STDM 帧不是固定分配时隙，而是按需动态地分配时隙，因此可以提高线路的利用率。abbcacd集中器
2.4.2 波分复用 1550 nm           0  1551 nm           1 1552 nm           2 1553 nm           3 1554 nm           4 1555 nm           5 1556 nm           6 1557 nm           70            1550 nm    1            1551 nm  2            1552 nm  3            1553 nm  4            1554 nm  5            1555 nm  6            1556 nm  7            1557 nm  8  2.5 Gbit/s1310 nm20 Gbit/s复用器分用器EDFA光调制器光解调器8  2.5 Gbit/s1310 nm波分复用 WDM (Wavelength Division Multiplexing) ：光的频分复用。使用一根光纤来同时传输多个光载波信号。120 km
2.4.3  码分复用每一个用户可以在同样的时间使用同样的频带进行通信。各用户使用经过特殊挑选的不同码型，因此不会造成干扰。当码分复用 CDM (Code Division Multiplexing) 信道为多个不同地址的用户所共享时，就称为码分多址 CDMA (Code Division Multiple Access)。
将每一个比特时间划分为 m 个短的间隔，称为码片 (chip)。为每个站指派一个唯一的 m bit 码片序列。发送比特 1：发送自己的 m bit 码片序列。发送比特 0：发送该码片序列的二进制反码。CDMA 工作原理例如：S 站的 8 bit 码片序列是 00011011。1    000110110    11100100码片序列：(–1 –1 –1 +1 +1 –1 +1 +1) 
要发送信息的数据率 = b bit/s，实际发送的数据率 = mb bit/s，同时，所占用频带宽度也提高到原来的 m 倍。扩频通常有 2 大类：直接序列扩频 DSSS (Direct Sequence Spread Spectrum) 。跳频扩频 FHSS (Frequency Hopping Spread Spectrum)。码片序列实现了扩频
每个站分配的码片序列：各不相同，且必须互相正交 (orthogonal)。正交：向量 S 和 T 的规格化内积 (inner product) 等于 0： 任何一个码片向量和该码片向量自己的规格化内积都是 1 。一个码片向量和该码片反码的向量的规格化内积值是 –1。 CDMA 的重要特点
CDMA 工作原理S 站的码片序列 S110ttttttm 个码片tS 站发送的信号 SxT 站发送的信号 Tx总的发送信号 Sx + Tx规格化内积 S  Sx规格化内积 S  Tx数据码元比特发送端接收端
2.5  数字传输系统早期，电话网长途干线采用频分复用 FDM 的模拟传输方式。目前，大都采用时分复用 PCM 的数字传输方式。现代电信网业务括话音、视频、图像和各种数据业务。因此需要一种能承载来自其他各种业务网络数据的传输网络。在数字化的同时，光纤开始成为长途干线最主要的传输媒体。
速率标准不统一。两个互不兼容的国际标准：北美和日本的 T1 速率（1.544 Mbit/s）欧洲的 E1 速率（2.048 Mbit/s）。不是同步传输。主要采用准同步方式。各支路信号的时钟频率有一定的偏差，给时分复用和分用带来许多麻烦。早期数字传输系统的缺点
各级时钟都来自一个非常精确的主时钟。 为光纤传输系统定义了同步传输的线路速率等级结构：传输速率以 51.84 Mbit/s 为基础。对电信信号称为第 1 级同步传送信号 STS-1 (Synchronous Transport Signal)，对光信号则称为第 1 级光载波 OC-1 (Optical Carrier)。现已定义了从 51.84 Mbit/s (即 OC-1) 到 9953.280 Mbit/s (即 OC-192/STS-192) 的标准。 同步光纤网 SONET (Synchronous Optical Network) 
ITU-T 以美国标准 SONET 为基础制订的国际标准。与 SONET 的主要不同：SDH 的基本速率为 155.52 Mbit/s，称为第 1 级同步传递模块 (Synchronous Transfer Module)，即 STM-1，相当于 SONET 体系中的 OC-3 速率。同步数字系列 SDH (Synchronous Digital Hierarchy)
SONET 的 OC/STS 级与 SDH 的 STM 级的对应关系
定义了标准光信号，规定了波长为 1310 nm 和 1550 nm 的激光源。在物理层定义了帧结构。使北美、日本和欧洲这三个地区三种不同的数字传输体制在 STM-1 等级上获得了统一。已成为公认的新一代理想的传输网体制。SDH 标准也适合于微波和卫星传输的技术体制。SONET / SDH 标准的意义
2.6.1                                            ADSL 技术2.6.2                       光纤同轴混合网（HFC网）2.6.3                                             FTTx 技术2.6宽带接入技术
2.6  宽带接入技术宽带：标准在不断提高。美国联邦通信委员会 FCC 定义：从宽带接入的媒体来看，划分为 2 大类：有线宽带接入。无线宽带接入。宽带下行速率达 25 Mbit/s，宽带上行速率达 3 Mbit/s。
2.6.1  ADSL 技术非对称数字用户线 ADSL (Asymmetric Digital Subscriber Line) 技术：用数字技术对现有的模拟电话用户线进行改造，使它能够承载宽带业务。ADSL 技术把 0~4 kHz 低端频谱留给传统电话使用，而把原来没有被利用的高端频谱留给用户上网使用。ADSL 的 ITU 的标准：G.992.1（或称 G.dmt）。非对称：下行（从 ISP 到用户）带宽远大于上行（从用户到 ISP）带宽。
采用离散多音调 DMT（Discrete Multi-Tone）调制技术。DMT 调制技术采用频分复用 FDM 方法。相当于在一对用户线上使用许多小的调制解调器并行地传送数据。ADSL 不能保证固定的数据率。ADSL 调制解调器DMT 技术的频谱分布
ADSL 的组成3 大组成部分：数字用户线接入复用器 DSLAM（DSL Access Multiplexer），用户线和用户家中的一些设施。ADSL 最大好处：可以利用现有电话网中的用户线（铜线），而不需要重新布线。
包括 ADSL2（G.992.3 和 G.992.4）和 ADSL2+（G.992.5）。主要改进：(1) 通过提高调制效率得到了更高的数据率。(2) 采用了无缝速率自适应技术 SRA (Seamless Rate Adaptation)。(3) 改善了线路质量评测和故障定位功能。第二代 ADSLADSL 并不适合于企业，因为企业往往需要使用上行信道发送大量数据给许多用户。
SDSL (Symmetric DSL)：对称数字用户线HDSL (High speed DSL)：高速数字用户线VDSL (Very high speed DSL)：甚高速数字用户线Giga DSL：超高速数字用户线华为公司于 2012 年首先研制成功样机。使用时分双工 TDD (Time Division Duplex)和 OFDM 技术xDSL
2.6.2  光纤同轴混合网（HFC 网）HFC (Hybrid Fiber Coax) 网基于有线电视网 CATV 网。改造：把原有线电视网中的同轴电缆主干部分改换为光纤HFC 网的结构
HFC 网具有双向传输功能，扩展了传输频带下行信道上行信道5          65    87                                                                                 1000调频广播、模拟和数字电视、数据业务频率(MHz)我国的 HFC 网的频带划分
机顶盒（set-top box）：连接在同轴电缆和用户的电视机之间。使现有的模拟电视机能够接收数字电视信号。电缆调制解调器（cable modem）：将用户计算机接入互联网。在上行信道中传送交互数字电视所需的一些信息。不需要成对使用，而只需安装在用户端。复杂，必须解决共享信道中可能出现的冲突问题。机顶盒与电缆调制解调器（set-top box）
2.6.3  FTTx 技术代表多种宽带光纤接入方式。FTTx 表示 Fiber To The…（光纤到…），例如：光纤到户 FTTH (Fiber To The Home)：在光纤进入用户的家门后，才把光信号转换为电信号。光纤到大楼 FTTB (Fiber To The Building)光纤到路边 FTTC (Fiber To The Curb)光纤到小区 FTTZ (Fiber To The Zone)光纤到办公室 FTTO (Fiber To The Office)光纤到桌面 FTTD (Fiber To The Desk) 等。
光配线网 ODN (Optical Distribution Network)光配线网 ODN (Optical Distribution Network)：位于光纤干线和广大用户之间。无源的光配线网常称为无源光网络 PON (Passive Optical Network)。
采用波分复用 WDM，上行和下行分别使用不同的波长。2 种最流行的无源光网络 PON (Passive Optical Network)：以太网无源光网络 EPON (Ethernet PON)在链路层使用以太网协议，利用 PON 的拓扑结构实现以太网的接入。与现有以太网的兼容性好，并且成本低，扩展性强，管理方便。吉比特无源光网络 GPON (Gigabit PON)采用通用封装方法 GEM (Generic Encapsulation Method)，可承载多业务，且对各种业务类型都能够提供服务质量保证，总体性能比EPON好。成本稍高。光配线网 ODN (Optical Distribution Network)
结束
第3章 数 据 链 路 层主讲人：
计算机网络体系结构OSI 的七层协议体系结构TCP/IP 的四层协议体系结构(a)(b)(c)五层协议的体系结构
3.1                      使用点对点信道的数据链路层3.2                                         点对点协议 PPP3.3                          使用广播信道的数据链路层3.4                                              扩展的以太网3.5                                                 高速以太网
数据链路层的地位局域网广域网主机 H1主机 H2路由器 R1路由器 R2路由器 R3电话网局域网网络中的主机、路由器等都必须实现数据链路层
数据链路层的地位局域网主机 H1主机 H2局域网中的主机、交换机等都必须实现数据链路层交换机 S2交换机 S1
数据链路层的地位主机 H1主机 H2路由器 R1路由器 R2路由器 R3主机 H1 向 H2 发送数据数据链路层的地位H1 到H2 所经过的网络可以是多种不同类型的从层次上来看数据的流动电话网局域网广域网局域网
数据链路层的地位主机 H1主机 H2路由器 R1路由器 R2路由器 R3主机 H1 向 H2 发送数据H1 到H2 所经过的网络可以是多种不同类型的仅从数据链路层观察帧的流动电话网局域网广域网局域网注意：不同的链路层可能采用不同的数据链路层协议
(a) 点对点信道使用一对一的点对点通信方式。(b) 广播信道使用一对多的广播通信方式。必须使用专用的共享信道协议来协调这些主机的数据发送。数据链路层信道类型
数据链路层信道类型(a) 点对点信道使用一对一的点对点通信方式。(b) 广播信道使用一对多的广播通信方式。必须使用专用的共享信道协议来协调这些主机的数据发送。
3.1.1                                           数据链路和帧3.1.2                                           三个基本问题3.1使用点对点信道的数据链路层
3.1.1  数据链路和帧链路 (link) ：一条无源的点到点的物理线路段，中间没有任何其他的交换结点。一条链路只是一条通路的一个组成部分。或物理链路。数据链路 (data link)：把实现控制数据传输的协议的硬件和软件加到链路上，就构成了数据链路。或逻辑链路。典型实现：适配器（即网卡）
数据链路层协议数据单元：帧使用点对点信道的数据链路层
3.1.2  三个基本问题 封装成帧透明传输差错控制 
封装成帧 (framing)：在一段数据的前后分别添加首部和尾部，构成一个帧。首部和尾部的一个重要作用就是进行帧定界（即确定帧的界限）。 1.  封装成帧用帧首部和帧尾部封装成帧最大传送单元 MTU (Maximum Transfer Unit) ：规定了所能传送的帧的数据部分长度上限。
用控制字符作为帧定界符控制字符 SOH (Start Of Header) 放在一帧的最前面，表示帧的首部开始。控制字符 EOT (End Of Transmission) 放在一帧的末尾，表示帧的结束。
问题：如果数据中的某个字节的二进制代码恰好和 SOH 或 EOT 一样，数据链路层就会错误地“找到帧的边界”，导致错误。2.  透明传输数据部分恰好出现与 EOT 一样的代码
透明指某一个实际存在的事物看起来却好像不存在一样。“在数据链路层透明传送数据”表示：无论发送什么样的比特组合的数据，这些数据都能够按照原样没有差错地通过这个数据链路层。
用“字节填充”或“字符填充”法解决透明传输的问题
3.  差错检测一位比特错多位比特错发送方接收方在传输过程中可能会产生比特差错：1    0， 0    1。在一段时间内，传输错误的比特占所传输比特总数的比率称为误码率 BER (Bit Error Rate)。
循环冗余检验 CRC (Cyclic Redundancy Check) 原理原始数据CRC 冗余码发送数据k 位n 位k + n 位组帧发送在发送端，先把数据划分为组。假定每组 k 个比特。 CRC 运算在每组 M 后面再添加供差错检测用的 n 位冗余码，然后构成一个帧发送出去。一共发送 (k + n) 位。
CRC 冗余码的计算原始数据CRC发送的数据
CRC 冗余码的计算1，用二进制的模 2 运算进行 2n 乘 M 的运算，这相当于在 M 后面添加 n 个 0。2，得到的 (k + n) 位的数除以事先选定好的长度为 (n + 1) 位的除数 P，得出商是 Q ，余数是 R，余数 R 比除数 P 少 1 位，即 R 是 n 位。 3，将余数 R 作为冗余码拼接在数据 M 后面，一起发送出去。这种为了进行检错而添加的冗余码常称为帧检验序列 FCS (Frame Check Sequence)。
CRC 冗余码的计算举例原始数据 M = 101001除数 P = 1101得到：发送数据 = 101001001
帧检验序列 FCS在数据后面添加上的冗余码称为帧检验序列 FCS (Frame Check Sequence)。循环冗余检验 CRC 和帧检验序列 FCS 并不等同。CRC 是一种常用的检错方法，而 FCS 是添加在数据后面的冗余码。FCS 可以用 CRC 这种方法得出，但 CRC 并非用来获得 FCS 的唯一方法。 
广泛使用的生成多项式P(X)CRC-16 = X16 +X15 + X2 + 1CRC-CCITT = X16 +X12 + X5 + 1CRC-32 = X32 +X26 + X23 + X22 + X16 +X12 + X11 +X10 + X8 +X7+ X5 +X4 + X2 + X + 1
注意仅用循环冗余检验 CRC 差错检测技术只能做到无差错接受 (accept)。即：“凡是接受的帧（即不包括丢弃的帧），我们都能以非常接近于 1 的概率认为这些帧在传输过程中没有产生差错”。即：“凡是接收端数据链路层接受的帧均无差错”。
注意：“无比特差错”与“无传输差错”是不同的可靠传输：数据链路层的发送端发送什么，在接收端就收到什么。传输差错可分为两大类：比特差错；传输差错：帧丢失、帧重复或帧失序等。在数据链路层使用 CRC 检验，能够实现无比特差错的传输，但这还不是可靠传输。要做到可靠传输，还必须再加上帧编号、确认和重传等机制。 
3.2.1                                      PPP 协议的特点3.2.2                                   PPP 协议的帧格式3.2.3                                PPP 协议的工作状态3.2点对点协议 PPP
3.2.1  PPP 协议的特点对于点对点的链路，目前使用得最广泛的数据链路层协议是点对点协议 PPP (Point-to-Point Protocol)。PPP 协议在 1994 年就已成为互联网的正式标准 [RFC 1661, STD51]。
用户到 ISP 的链路使用 PPP 协议 
1，简单 ——首要要求。2，封装成帧 —— 必须规定特殊的字符作为帧定界符。3，透明性 —— 必须保证数据传输的透明性。4，多种网络层协议 —— 能够在同一条物理链路上同时支持多种网络层协议。5，多种类型链路 —— 能够在多种类型的链路上运行。6，差错检测 —— 能够对接收端收到的帧进行检测，并立即丢弃有差错的帧。1. PPP 协议应满足的需求
7，检测连接状态 —— 能够及时自动检测出链路是否处于正常工作状态。8，最大传送单元 —— 必须对每一种类型的点对点链路设置最大传送单元  MTU 的标准默认值，促进各种实现之间的互操作性。9，网络层地址协商 —— 必须提供一种机制使通信的两个网络层实体能够通过协商知道或能够配置彼此的网络层地址。10，数据压缩协商 —— 必须提供一种方法来协商使用数据压缩算法。1. PPP 协议应满足的需求（续）
三个组成部分：一个将 IP 数据报封装到串行链路的方法。一个链路控制协议 LCP (Link Control Protocol)。一套网络控制协议 NCP (Network Control Protocol)。 2. PPP 协议的组成
3.2.2   PPP 协议的帧格式IP 数据报1211字节12可变长度，不超过 1500 字节PPP 帧先发送7EFF03FACFCSF7E协议信    息    部    分首部尾部PPP 有一个 2 个字节的协议字段。其值若为 0x0021，则信息字段就是 IP 数据报。若为 0x8021，则信息字段是网络控制数据。若为 0xC021，则信息字段是 PPP 链路控制数据。若为 0xC023，则信息字段是鉴别数据。PPP 是面向字节的，所有的 PPP 帧的长度都是整数字节。
首部：4 个字段标志字段 F： 0x7E 。连续两帧之间只需要用一个标志字段。地址字段 A：只置为 0xFF。实际上不起作用。控制字段 C：通常置为 0x03。协议字段。尾部：2 个字段。1. 各字段的意义
当 PPP 用在异步传输时，使用字节填充法。当 PPP 用在同步传输链路时，采用零比特填充法。  透明传输问题 
2. 字节填充 
3. 零比特填充发送端在 5 个连 1 之后填入比特 0 再发送出去发送端填入 0 比特0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0接收端把 5 个连 1之后的比特 0 删除接收端删除填入的 0 比特0 1 0 0 1 1 1 1 1 0 1 0 0 0 1 0 1 0
 3.2.3   PPP 协议的工作状态PPP 链路初始化过程：用户拨号接入 ISP 后，就建立了一条从用户个人电脑到 ISP 的物理连接。用户个人电脑向 ISP 发送一系列的链路控制协议 LCP 分组（封装成多个 PPP 帧），以便建立LCP连接。之后进行网络层配置。网络控制协议 NCP 给新接入的用户个人电脑分配一个临时的 IP 地址。当用户通信完毕时，NCP 释放网络层连接，收回原来分配出去的IP地址。LCP 释放数据链路层连接。最后释放的是物理层的连接。
链路静止链路建立鉴别网络层协议链路打开链路终止物理层连接建立LCP 配置协商鉴别成功或无需鉴别NCP 配置协商链路故障或关闭请求LCP 链路终止鉴别失败LCP 配置协商失败PPP 协议的状态图
3.3使用广播信道的数据链路层3.3.1                                 局域网的数据链路层3.3.2                                      CSMA/CD 协议3.3.3                             使用集线器的星形拓扑3.3.4                                 以太网的信道利用率3.3.5                                    以太网的 MAC 层
3.3.1  局域网的数据链路层 局域网最主要的特点：网络为一个单位所拥有；地理范围和站点数目均有限。 局域网具有如下主要优点：具有广播功能，从一个站点可很方便地访问全网。 便于系统的扩展和逐渐地演变，各设备的位置可灵活调整和改变。提高了系统的可靠性、可用性和生存性。
局域网拓扑结构
局域网传输媒体
共享信道带来的问题共享的广播信道问题：若多个设备在共享的广播信道上同时发送数据，则会造成彼此干扰，导致发送失败。
静态划分信道：频分复用时分复用波分复用码分复用 动态媒体接入控制（多点接入）：随机接入：所有的用户可随机地发送信息。受控接入：用户必须服从一定的控制。如轮询(polling)。  	媒体共享技术
DIX Ethernet V2：世界上第一个局域网产品（以太网）的规约。IEEE 802.3：第一个 IEEE 的以太网标准。1.  以太网的两个标准 这两种标准的硬件实现可以在同一个局域网上互操作。这两个标准标准只有很小的差别，因此很多人也常把 802.3局域网简称为“以太网”。
局域网数据链路层分为 2 个子层网络层物理层站点 1网络层物理层数据链路层站点 2LLC 子层看不见下面的局域网逻辑链路控制 LLC (Logical Link Control) 子层：与传输媒体无关。媒体接入控制 MAC (Medium Access Control) 子层：与传输媒体有关。
2.  适配器的作用计算机通过适配器和局域网进行通信
重要功能：进行串行/并行转换。对数据进行缓存。在计算机的操作系统安装设备驱动程序。实现以太网协议。2.  适配器的作用
3.3.2   CSMA/CD 协议最早的以太网：将许多计算机都连接到一根总线上。总线特点：易于实现广播通信，简单，可靠。 B 向所有站点发送数据    C   D    A    E匹配电阻（用来吸收总线上传播的信号）匹配电阻B
3.3.2   CSMA/CD 协议为了实现一对一通信，将接收站的硬件地址写入帧首部中的目的地址字段中。仅当数据帧中的目的地址与适配器硬件地址一致时，才能接收这个数据帧。B 向 D发送数据    C   D    A    E匹配电阻（用来吸收总线上传播的信号）匹配电阻B只有 D 接受B 发送的数据
3.3.2   CSMA/CD 协议总线缺点：多个站点同时发送时，会产生发送碰撞或冲突，导致发送失败。B 向 D发送数据    C   D    A    E匹配电阻（用来吸收总线上传播的信号）匹配电阻BE 向 A发送数据
(1) 采用较为灵活的无连接的工作方式。不必先建立连接就可以直接发送数据。对发送的数据帧不进行编号，也不要求对方发回确认。以太网采取的 2 种重要措施
(2) 发送的数据都使用曼彻斯特 (Manchester) 编码。以太网采取了两种重要的措施曼彻斯特编码缺点：所占的频带宽度比原始的基带信号增加了一倍。
CSMA/CD (Carrier Sense Multiple Access with Collision Detection) ：载波监听多点接入 / 碰撞检测。多点接入：说明这是总线型网络。许多计算机以多点接入的方式连接在一根总线上。载波监听：即“边发送边监听”。不管在想要发送数据之前，还是在发送数据之中，每个站都必须不停地检测信道。碰撞检测：适配器边发送数据，边检测信道上的信号电压的变化情况。电压摆动值超过一定的门限值时，就认为总线上至少有两个站同时在发送数据，表明产生了碰撞（或冲突）。CSMA/CD 协议的要点
适配器立即停止发送。等待一段随机时间后再次发送。检测到碰撞后
CSMA/CD 协议工作流程准备发送侦听到载波？开始发送，同时进行碰撞检测检测到碰撞？发送，直到完毕载波侦听停止发送等待随机时间是，信道忙是否否
为什么要进行碰撞检测？ 因为信号传播时延对载波监听产生了影响1 kmABtt = 0单程端到端传播时延记为  可见：每一个站在自己发送数据之后的一小段时间内，存在着遭遇碰撞的可能性。
以太网的端到端往返时延 2  称为争用期，或碰撞窗口。具体的争用期时间 = 51.2 μs。争用期经过争用期这段时间还没有检测到碰撞，才能肯定这次发送不会发生碰撞。
采用截断二进制指数退避 (truncated binary exponential backoff) 确定。发生碰撞的站停止发送数据后，要退避一个随机时间后再发送数据。基本退避时间 = 2 从整数集合 [0, 1, … , (2k - 1)] 中随机地取出一个数，记为 r。     重传所需的时延 =  r ⅹ 基本退避时间。参数 k = Min[重传次数, 10]当重传达 16 次仍不能成功时即丢弃该帧，并向高层报告。 碰撞后重传的时机
第 1 次冲突重传时：    k = 1，r  为 {0，1} 集合中的任何一个数。第 2 次冲突重传时：    k = 2，r  为 {0，1，2，3} 集合中的任何一个数。第 3 次冲突重传时：    k = 3，r  为 {0，1，2，3，4，5，6，7} 集合中的任何一个数。举例若连续多次发生冲突，表明可能有较多的站参与争用信道。上述退避算法可使重传需要推迟的平均时间随重传次数而增大（称为动态退避），因而减小发生碰撞的概率，有利于整个系统的稳定。
争用期的长度 = 51.2 s。对于 10 Mbit/s 以太网，在争用期内可发送 512 bit，即 64 字节。10 Mbit/s 以太网争用期的长度这意味着：以太网在发送数据时，若前 64 字节没有发生冲突，则后续的数据就不会发生冲突。以太网规定了最短有效帧长为 64 字节。凡长度小于 64 字节的帧都是由于冲突而异常中止的无效帧，应当立即将其丢弃。
以太网的最大端到端长度以太网最大端到端单程时延必须小于争用期的一半 (即 25.6 μs)，相当于以太网的最大端到端长度约为 5 km。争用期的长度 = 51.2 s。对于 10 Mbit/s 以太网，在争用期内可发送 512 bit，即 64 字节。
强化碰撞：人为干扰信号ABTBt信道占用时间A 发送数据
CSMA/CD 协议的要点准备发送侦听到载波？96 bit 时间内仍然空闲，开始发送，同时进行碰撞检测检测到碰撞？发送，直到完毕载波侦听，检测信道停止发送数据等待随机时间（截断二进制指数算法）是，信道忙是，发送失败否否发送人为干扰信号
3.3.3  使用集线器的星形拓扑传统以太网传输媒体：粗同轴电缆  细同轴电缆  双绞线。采用双绞线的以太网采用星形拓扑。在星形的中心则增加了一种可靠性非常高的设备，叫做集线器 (hub)。
    C   D    A    E匹配电阻（用来吸收总线上传播的信号）匹配电阻B传统以太网使用同轴电缆，采用总线形拓扑结构
采用双绞线的以太网采用星形拓扑1990 年，IEEE 制定出采用双绞线的星形以太网 10BASE-T 的标准 802.3i。每个站到集线器的距离不超过100 m。
星形以太网 10BASE-T
集线器的一些特点使用电子器件来模拟实际电缆线的工作，因此整个系统仍然像一个传统的以太网那样运行。 使用集线器的以太网在逻辑上仍是一个总线网，各工作站使用的还是 CSMA/CD 协议，并共享逻辑上的总线。 很像一个多接口的转发器，工作在物理层。采用了专门芯片，进行自适应串音回波抵消，减少了近端串音。
具有 3 个接口的集线器
3.3.4  以太网的信道利用率多个站在以太网上同时工作就可能会发生碰撞。当发生碰撞时，信道资源实际上是被浪费了。因此，当扣除碰撞所造成的信道损失后，以太网总的信道利用率并不能达到 100%。假设：单程端到端传播时延 =  ，则争用期长度 = 2 。检测到碰撞后不发送干扰信号。设：帧长 = L (bit)，数据发送速率 = C (bit/s)，则帧的发送时间  T0 = L/C (s)。 
以太网信道被占用的情况注意：成功发送一个帧需要占用信道的时间是 T0 + τ ，比帧的发送时间要多一个单程端到端时延 τ 。
要提高以太网的信道利用率，就必须减小   与 T0 之比。在以太网中定义了参数 a = 以太网单程端到端时延   与帧的发送时间 T0 之比： 参数 a 与利用率
为提高利用率，以太网的参数 a 的值应当尽可能小些。当数据率一定时，以太网的连线的长度受到限制，否则   的数值会太大。以太网的帧长不能太短，否则 T0 的值会太小，使 a 值太大。 对以太网参数 a 的要求
信道利用率的最大值 Smax 只有当参数 a 远小于 1 才能得到尽可能高的极限信道利用率。据统计，当以太网的利用率达到 30% 时就已经处于重载的情况。
3.3.5  以太网的 MAC 层主要内容：1.  MAC 层的硬件地址2.  MAC 帧的格式
硬件地址又称为物理地址，或 MAC 地址。 IEEE 802 标准为局域网规定了一种 48 位的全球地址（简称为地址）是指局域网上的每一台计算机中固化在适配器的 ROM 中的地址。1.  MAC 层的硬件地址
IEEE 注册管理机构 RA 负责向厂家分配前 3 个字节 (即高 24 位)，称为组织唯一标识符 OUI (Organizationally Unique Identifier)。厂家自行指派后 3 个字节 (即低 24 位)，称为扩展标识符 (extended identifier)。必须保证生产出的适配器没有重复地址。地址被固化在适配器的 ROM 中。48 位的  MAC 地址
IEEE 规定地址字段的第 1 字节的最低位为 I/G (Individual / Group) 位。单站地址：I/G 位 = 0。组地址：I/G 位 = 1。组地址用来进行多播。广播地址：所有 48 位都为 1（全 1）。只能作为目的地址使用。单站地址，组地址，广播地址
IEEE 把地址字段第 1 字节的最低第 2 位规定为 G/L (Global / Local) 位。全球管理：G/L 位 = 0。厂商向 IEEE 购买的 OUI 都属于全球管理。本地管理：G/L 位 = 1。 这时用户可任意分配网络上的地址。全球管理与本地管理
每收到一个 MAC 帧，先用硬件检查帧中的 MAC 地址。如果是发往本站的帧则收下，然后再进行其他的处理。否则就将此帧丢弃，不再进行其他的处理。适配器具有过滤功能以混杂方式 (promiscuous mode) 工作的以太网适配器只要“听到”有帧在以太网上传输就都接收下来。
常用的以太网 MAC 帧格式有 2 种标准：DIX Ethernet V2 标准IEEE 的 802.3 标准最常用的 MAC 帧是以太网 V2 的格式。2. MAC 帧的格式
以太网 V2 的 MAC 帧格式
以太网 V2 的 MAC 帧格式
以太网 V2 的 MAC 帧格式
类型字段用来标志上一层使用的是什么协议，以便把收到的 MAC 帧的数据上交给上一层的这个协议。 以太网 V2 的 MAC 帧格式
以太网 V2 的 MAC 帧格式数据字段的正式名称是 MAC 客户数据字段。最小长度 64 字节 - 18 字节的首部和尾部 = 数据字段的最小长度（46字节） 以太网 V2 的 MAC 帧格式
当数据字段的长度小于 46 字节时，应在数据字段的后面加入整数字节的填充字段，以保证以太网的 MAC 帧长不小于 64 字节。 以太网 V2 的 MAC 帧格式
以太网 V2 的 MAC 帧格式以太网 MAC 帧物理层MAC 层IP 层目的地址源地址类型数        据FCS6624字节46 ~ 1500由硬件在帧的前面插入 8 字节。第一个字段共 7 个字节，是前同步码，用来迅速实现 MAC 帧的比特同步。第二个字段 1 个字节是帧开始定界符，表示后面的信息就是 MAC 帧。 为了达到比特同步，在传输媒体上实际传送的要比 MAC 帧还多 8 个字节以太网 V2 的 MAC 帧格式
数据字段的长度与长度字段的值不一致；帧的长度不是整数个字节；用收到的帧检验序列 FCS 查出有差错；数据字段的长度不在 46 ~ 1500 字节之间。有效的 MAC 帧长度为 64 ~ 1518 字节之间。对于检查出的无效 MAC 帧就简单地丢弃。以太网不负责重传丢弃的帧。 无效的 MAC 帧 
IEEE 802.3 MAC 与以太网 V2 MAC 帧格式的区别现在市场上流行的都是以太网 V2 的 MAC 帧，但大家也常常把它称为 IEEE 802.3 标准的 MAC 帧。目的地址源地址数        据FCS662446 ~ 1500目的地址源地址数        据FCS长度/类型IEEE 802.3 MAC帧V2 MAC 帧当“长度/类型”字段值大于 0x0600 时，表示“类型”；小于 0x0600 时，表示“长度”。当“长度/类型”字段值小于 0x0600 时，数据字段必须装入逻辑链路控制 LLC 子层的 LLC 帧。在 802.3 标准的文档中，MAC 帧格式包括了 8 字节的前同步码和帧开始定界符。类型
3.4扩展的以太网3.4.1                               在物理层扩展以太网3.4.2                        在数据链路层扩展以太网3.4.3                                            虚拟局域网
3.4.1  在物理层扩展以太网使用光纤扩展主机使用光纤和一对光纤调制解调器连接到集线器
三个独立的以太网一个扩展的以太网三个独立的碰撞域使用集线器扩展3.4.1  在物理层扩展以太网用多个集线器连成更大的以太网
优点使原来属于不同碰撞域（冲突域）的计算机能够跨碰撞域通信。扩大了以太网覆盖的地理范围。缺点碰撞域增大了，总的吞吐量未提高。如果使用不同的以太网技术（如数据率不同），那么就不能用集线器将它们互连起来。 用集线器扩展以太网
碰撞域（collision domain）又称为冲突域，指网络中一个站点发出的帧会与其他站点发出的帧产生碰撞或冲突的那部分网络。碰撞域越大，发生碰撞的概率越高。碰撞域主干集线器碰撞域碰撞域总线形以太网使用集线器的星形以太网
更为常用。早期使用网桥，现在使用以太网交换机。3.4.2  在数据链路层扩展以太网
网桥与以太网交换机
实质上是一个多接口网桥。通常有十几个或更多的接口。每个接口都直接与一个单台主机或另一个以太网交换机相连，并且一般都工作在全双工方式。以太网交换机具有并行性。能同时连通多对接口，使多对主机能同时通信。相互通信的主机都独占传输媒体，无碰撞地传输数据。每一个端口和连接到端口的主机构成了一个碰撞域。1. 以太网交换机的特点
1. 以太网交换机的特点以太网交换机碰撞域碰撞域碰撞域以太网交换机的每个接口都是一个碰撞域
接口有存储器。即插即用。其内部的帧交换表（又称为地址表）是通过自学习算法自动地逐渐建立起来的。这种交换表就是一个内容可寻址存储器CAM (Content addressable Memory)。使用专用的交换结构芯片，用硬件转发，其转发速率要比使用软件转发的网桥快很多。1. 以太网交换机的特点以太网交换机的性能远远超过普通的集线器，而且价格并不贵。
以太网交换机的优点集线器交换机N 个用户共享集线器提供的带宽 B。平均每个用户仅占有 B/N 的带宽。交换机为每个端口提供带宽 B。N 个用户，每个用户独占带宽 B。交换机总容量达 B × N 。每个用户独享带宽，增加了总容量
存储转发方式把整个数据帧先缓存，再进行处理。以太网交换机的交换方式直通 (cut-through) 方式接收数据帧的同时立即按数据帧的目的 MAC 地址决定该帧的转发接口。缺点：不检查差错就直接将帧转发出去，有可能转发无效帧。存储转发方式直通方式
2. 以太网交换机的自学习功能
2. 以太网交换机的自学习功能 以太网交换机ADBC以太网帧交换机收到帧后，先查找交换表。没有查到应从哪个接口转发这个帧给 B。A 先向 B 发送一帧。该帧从接口 1 进入到交换机。交换机把这个帧的源地址 A 和接口 1 写入交换表中。交换机向除接口 1 以外的所有的接口广播这个帧。A             1
2. 以太网交换机的自学习功能 以太网交换机ADBC以太网帧由于与该帧的目的地址不相符，C 和 D 将丢弃该帧。A             1丢弃丢弃
2. 以太网交换机的自学习功能 以太网交换机ADBC交换机收到帧后，先查找交换表。发现交换表中的 MAC 地址有 A，表明要发送给 A 的帧应从接口 1 转发出去。于是就把这个帧传送到接口 1 转发给 A。B 向 A 发送一帧。该帧从接口 3 进入到交换机。交换机把这个帧的源地址 B 和接口 3 写入交换表中。A             1B             3以太网帧
2. 以太网交换机的自学习功能 以太网交换机ADBCA             1B             3考虑到可能有时要在交换机的接口更换主机，或者主机要更换其网络适配器，这就需要更改交换表中的项目。为此，在交换表中每个项目都设有一定的有效时间。过期的项目就自动被删除。这种自学习方法使得以太网交换机能够即插即用，不必人工进行配置。
交换机自学习和转发帧的步骤归纳
2 台以太网交换机互连假设：A 向 B 发送了一帧，C 向 E 发送了一帧，E 向 A 发送了一帧。请分析：此时，S1 和 S2 的交换表内容分别是什么？
2 台以太网交换机互连假设：A 向 B 发送了一帧，C 向 E 发送了一帧，E 向 A 发送了一帧。请分析：此时，S1 和 S2 的交换表内容分别是什么？A             1A             5C             2C             5E             1E             5
存在的问题：回路假定开始时，交换机 S1 和 S2 的交换表都是空的。假定：主机 A 向主机 E 发送一帧。
假定开始时，交换机 S1 和 S2 的交换表都是空的。假定：主机 A 向主机 E 发送一帧。存在的问题：回路
生成树协议 STP  (Spanning Tree Protocol) 要点：   不改变网络的实际拓扑，但在逻辑上则切断某些链路，使得从一台主机到所有其他主机的路径是无环路的树状结构，从而消除了兜圈子现象。消除回路：使用生成树协议（SPT）
3. 从总线以太网到星形以太网
3.4.3  虚拟局域网
广播风暴一个以太网是一个广播域使用交换机的星形以太网总线形以太网广播域广播域广播域（broadcast domain）：指这样一部分网络，其中任何一台设备发出的广播通信都能被该部分网络中的所有其他设备所接收。
广播风暴一个以太网是一个广播域交换机之间的冗余链路形成广播风暴广播域
安全问题交换机每个接口都处于一个独立的碰撞域（或冲突域）中，但所有计算机都处于同一个广播域中。无法隔离不同部门的通信以太网交换机以太网交换机广播域研发部市场部研发部市场部研发部研发部
虚拟局域网 VLAN利用以太网交换机可以很方便地实现虚拟局域网 VLAN (Virtual LAN)。IEEE 802.1Q 对虚拟局域网 VLAN 的定义：虚拟局域网 VLAN 是由一些局域网网段构成的与物理位置无关的逻辑组，而这些网段具有某些共同的需求。每一个 VLAN 的帧都有一个明确的标识符，指明发送这个帧的计算机是属于哪一个 VLAN。虚拟局域网其实只是局域网给用户提供的一种服务，并不是一种新型局域网。
以太网交换机以太网交换机以太网交换机以太网交换机10 台计算机划分为三个虚拟局域网： VLAN1, VLAN2 和 VLAN3
每个虚拟局域网是一个广播域。VLAN1, VLAN2 和 VLAN3 是三个不同的广播域。以太网交换机以太网交换机以太网交换机以太网交换机
当 B1 向 VLAN2 工作组内成员发送数据时，工作站 B2 和 B3 将会收到其广播的信息。以太网交换机以太网交换机以太网交换机以太网交换机
B1 发送数据时，VLAN1 和 VLAN3 中的工作站 A1，A2 和 C1 等都不会收到 B1 发出的广播信息。 以太网交换机以太网交换机以太网交换机以太网交换机
虚拟局域网限制了接收广播信息的工作站数，使得网络不会因传播过多的广播信息 (即“广播风暴”) 而引起性能恶化。 以太网交换机以太网交换机以太网交换机以太网交换机
虚拟局域网优点虚拟局域网（VLAN）技术具有以下主要优点：改善了性能简化了管理降低了成本改善了安全性
划分虚拟局域网的方法基于交换机端口基于计算机网卡的 MAC 地址基于协议类型基于 IP 子网地址基于高层应用或服务
基于交换机端口的方法最简单、也是最常用的方法。属于在第 1 层划分虚拟局域网的方法。缺点：不允许用户移动。
基于计算机网卡的 MAC 地址的方法根据用户计算机的 MAC 地址划分虚拟局域网。属于在第 2 层划分虚拟局域网的方法。允许用户移动。缺点：需要输入和管理大量的 MAC 地址。如果用户的 MAC 地址改变了，则需要管理员重新配置VLAN。
基于协议类型的方法根据以太网帧的第三个字段“类型”确定该类型的协议属于哪一个虚拟局域网。属于在第 2 层划分虚拟局域网的方法。
基于 IP 子网地址的方法根据以太网帧的第三个字段“类型”和 IP 分组首部中的源 IP 地址字段确定该 IP 分组属于哪一个虚拟局域网。属于在第 3 层划分虚拟局域网的方法。
基于高层应用或服务的方法根据高层应用或服务、或者它们的组合划分虚拟局域网。更加灵活，但更加复杂。
标准以太网帧插入 4 字节的 VLAN 标记后变成了 802.1Q 帧（或带标记的以太网帧）虚拟局域网使用的以太网帧格式
虚拟局域网使用的以太网帧格式
3.5高速以太网3.5.1                                    100BASE-T 以太网3.5.2                                             吉比特以太网3.5.3    10 吉比特以太网 (10GE) 和更快的以太网3.5.4                             使用以太网进行宽带接入
3.5.1  100BASE-T 以太网又称为快速以太网 (Fast Ethernet)。在双绞线上传送 100 Mbit/s 基带信号的星形拓扑以太网。仍使用 IEEE 802.3 的 CSMA/CD 协议。1995 定为正式标准：IEEE 802.3u。
可在全双工方式下工作而无冲突发生。在全双工方式下工作时，不使用 CSMA/CD 协议。使用 IEEE 802.3 协议规定的 MAC 帧格式。保持最短帧长不变，但将一个网段的最大电缆长度减小到 100 米。帧间时间间隔从原来的 9.6 s 改为现在的 0.96 s。 100BASE-T 以太网的特点
100 Mbit/s 以太网的 3 种不同的物理层标准
3.5.2  吉比特以太网特点：允许在 1 Gbit/s 下以全双工和半双工 2 种方式工作。使用 IEEE 802.3 协议规定的 MAC 帧格式。在半双工方式下使用 CSMA/CD 协议，而在全双工方式不使用 CSMA/CD 协议。与 10BASE-T 和 100BASE-T 技术向后兼容。
使用 2 种成熟的技术：一种来自现有的以太网，另一种则是美国国家标准协会 ANSI 制定的光纤通道 FC (Fiber Channel)。吉比特以太网的物理层吉比特以太网物理层标准
半双工时采用 CSMA/CD，必须进行碰撞检测。为保持 64 字节最小帧长度，以及 100 米的网段的最大长度，增加了 2 个功能：载波延伸 (carrier extension)分组突发 (packet bursting)半双工方式工作的吉比特以太网注意：全双工方式工作的吉比特以太网不使用载波延伸和分组突发。
载波延伸将争用时间增大为 512 字节。凡发送的 MAC 帧长不足 512 字节时，就用一些特殊字符填充在帧的后面。
当很多短帧要发送时，第 1 个短帧采用载波延伸方法进行填充，随后的一些短帧则可一个接一个地发送，只需留有必要的帧间最小间隔即可。这样就形成可一串分组的突发，直到达到 1500 字节或稍多一些为止。分组突发分组突发发送的数据 争用期 512 字节将突发计时器设定为 1500 字节载波延伸载波监听  帧#1   RRRRRRRR    帧#2   RRRR    帧#3   RRR    帧#4
3.5.3   10 吉比特以太网 (10GE) 和更快的以太网10 吉比特以太网（10GE）主要特点：万兆比特。与 10、100 Mbit/s 和 1 Gbit/s 以太网的帧格式完全相同。保留了 IEEE 802.3 标准规定的以太网最小和最大帧长。只使用光纤作为传输媒体。只工作在全双工方式，没有争用问题，不使用 CSMA/CD 协议。 
10GE 以太网的物理层10GE 的物理层标准
40GE/100GE 以太网的物理层40GE/10GE 的物理层标准
以太网的工作范围已经扩大到城域网和广域网，实现了端到端的以太网传输。好处： 技术成熟；互操作性很好；在广域网中使用以太网时价格便宜；采用统一的以太网帧格式，简化了操作和管理。 端到端的以太网传输
3.5.4  使用以太网进行宽带接入IEEE 在 2001 年初成立了 802.3 EFM 工作组，专门研究高速以太网的宽带接入技术问题。以太网宽带接入具有以下特点：可以提供双向的宽带通信。可以根据用户对带宽的需求灵活地进行带宽升级。可以实现端到端的以太网传输，中间不需要再进行帧格式的转换。但不支持用户身份鉴别。
PPPoE (PPP over Ethernet) ：在以太网上运行 PPP。将 PPP 帧封装到以太网中来传输。现在的光纤宽带接入 FTTx 都要使用 PPPoE 的方式进行接入。利用 ADSL 进行宽带上网时，从用户个人电脑到家中的 ADSL 调制解调器之间的连接也使用 RJ-45 和 5 类线，也使用 PPPoE。PPPoE
结束
主讲人：第 4 章   网 络 层
计算机网络体系结构OSI 的七层协议体系结构TCP/IP 的四层协议体系结构(a)(b)(c)五层协议的体系结构
4.1                                 网络层的几个重要概念4.2                                                 网际协议 IP4.3                                    IP 层转发分组的过程4.4                              网际控制报文协议 ICMP4.5                                                           IPv64.6                                 互联网的路由选择协议4.7                                                        IP 多播4.8         虚拟专用网 VPN 和网络地址转换 NAT4.9                                 多协议标记交换 MPLS4.10                            软件定义网络 SDN 简介
4.1.1                             网络层提供的两种服务4.1.2                                    网络层的两个层面4.1网络层的几个重要概念
4.1.1 网络层提供的两种服务争论：网络层应该向运输层提供怎样的服务？面向连接还是无连接？在计算机通信中，可靠交付应当由谁来负责？是网络还是端系统？2 种观点：面向连接的可靠交付。无连接的、尽最大努力交付的数据报服务，不提供服务质量的承诺。
一种观点：让网络负责可靠交付计算机网络模仿电信网络，使用面向连接的通信方式。通信之前先建立虚电路 VC (Virtual Circuit) (即连接)，以保证双方通信所需的一切网络资源。 如果再使用可靠传输的网络协议，可使所发送的分组无差错按序到达终点，不丢失、不重复。
虚电路服务H1 H2虚电路H1 发送给 H2 的所有分组都沿着同一条虚电路传送应用层运输层网络层数据链路层物理层应用层运输层网络层数据链路层物理层虚电路只是一条逻辑上的连接，分组都沿着这条逻辑连接按照存储转发方式传送，并不是真正建立了一条物理连接。
另一种观点：网络提供数据报服务互联网采用的设计思路：网络层要设计得尽量简单，向其上层只提供简单灵活的、无连接的、尽最大努力交付的数据报服务。网络在发送分组时不需要先建立连接。每一个分组（即 IP 数据报）独立发送，与其前后的分组无关（不进行编号）。网络层不提供服务质量的承诺。即所传送的分组可能出错、丢失、重复和失序（不按序到达终点），也不保证分组传送的时限。由主机中的运输层负责可靠的通信。 
数据报服务H1 发送给 H2 的分组可能沿着不同路径传送H1 H2IP 数据报丢失应用层运输层网络层数据链路层物理层应用层运输层网络层数据链路层物理层
虚电路服务与数据报服务的对比
4.1.2 网络层的两个层面不同网络中的两个主机之间的通信，要经过若干个路由器转发分组来完成。在路由器之间传送的信息有以下 2 大类：数据。路由信息（为数据传送服务）。
4.1.2 网络层的两个层面网络层的 2 个层面：数据层面和控制层面
数据层面和控制层面
软件定义网络 SDN (Software Defined Network)软件定义网络 SDN 中的数据层面和控制层面远程控制器：计算出最佳的路由，在每一个路由器中生成其正确的转发表。
软件定义网络 SDN (Software Defined Network)软件定义网络 SDN 中的数据层面和控制层面路由器：查找转发表，转发分组。
4.2.1                                          虚拟互连网络4.2.2                                                   IP 地址4.2.3                               IP 地址与 MAC 地址4.2.4                                  地址解析协议 ARP4.2.5                                      IP 数据报的格式4.2网际协议 IP
与网际协议 IPv4 配套的 3 个协议：地址解析协议 ARP (Address Resolution Protocol)网际控制报文协议 ICMP (Internet Control Message Protocol)网际组管理协议 IGMP (Internet Group Management Protocol)4.2  网际协议 IP 
4.2.1  虚拟互连网络如何将异构的网络互相连接起来？实现网络互连、互通时需要解决许多问题，如以下“不同”：
实现异构网络的互连互通方法，哪种好？不能满足不同用户需要。没有一种单一的网络能够适应所有用户的需求。不适应技术发展可以满足不同需求实用
使用中间设备进行互连物理层数据链路层网络层运输层及以上转发器 (repeater)网桥或桥接器 (bridge)，交换机 (switch)路由器 (router)网关 (gateway)层中间设备
使用转发器或网桥不称为网络互连转发器、网桥或交换机仅把一个网络扩大了，仍然是一个网络
网络互连使用路由器
互连网络与虚拟互连网络(a) 互连网络路由器(b) 虚拟互连网络  虚拟互连网络（互联网）IP 网的概念网络网络网络网络网络
IP 网的意义当互联网上的主机进行通信时，就好像在一个网络上通信一样，看不见互连的各具体的网络异构细节。如果在这种覆盖全球的 IP 网的上层使用 TCP 协议，那么就是现在的互联网 (Internet)。
5432154321主机H1 主机 H2 R1 R4 R5 R2 R3 R1 R2 R3H1 R5 H2 R4间接交付间接交付间接交付直接交付分组在互联网中的传送 互联网可以由多种异构网络互连组成。间接交付间接交付32     21     132     21     132     21     132     21     132     21     1
分组传输路径
4.2.2  IP 地址在 TCP/IP 体系中，IP 地址是一个最基本的概念。没有IP地址，就无法和网上的其他设备进行通信。本部分重点：IP 地址及其表示方法分类的 IP 地址无分类编址 CIDRIP 地址的特点
1. IP 地址及其表示方法采用点分十进制记法128.11.3.31 互联网上的每台主机（或路由器）的每个接口分配一个在全世界唯一的 IP 地址。由互联网名字和数字分配机构 ICANN (Internet Corporation for Assigned Names and Numbers) 进行分配。 
点分十进制记法举例
IP 地址采用 2 级结构IP地址在整个互联网范围内是唯一的。IP 地址指明了连接到某个网络上的一个主机
2. 分类的 IP 地址
各类 IP 地址的网络号字段和主机号字段A 类地址的网络号字段 net-id 为 1 字节
各类 IP 地址的网络号字段和主机号字段B 类地址的网络号字段 net-id 为 2 字节
各类 IP 地址的网络号字段和主机号字段C 类地址的网络号字段 net-id 为 3 字节
各类 IP 地址的网络号字段和主机号字段A 类地址的主机号字段 host-id 为 3 字节
各类 IP 地址的网络号字段和主机号字段B 类地址的主机号字段 host-id 为 2 字节
各类 IP 地址的网络号字段和主机号字段C 类地址的主机号字段 host-id 为 1 字节
各类 IP 地址的网络号字段和主机号字段D 类地址是多播地址
各类 IP 地址的网络号字段和主机号字段E 类地址保留为今后使用
各类 IP 地址的指派范围注意：指派时要扣除全 0 和全 1 的主机号。
一般不使用的特殊的 IP 地址
分类的 IP 地址的优点和缺点
3. 无分类编址 CIDRCIDR (Classless Inter-Domain Routing) ：无分类域间路由选择。消除了传统的 A 类、B 类和 C 类地址以及划分子网的概念，可以更加有效地分配 IPv4 的地址空间，但无法解决 IP 地址枯竭的问题。要点：(1) 网络前缀(2) 地址块(3) 地址掩码
(1) 网络前缀最大的区别：前缀的位数 n 不固定，可以在 0 ~ 32 之间选取任意值。CIDR 记法：斜线记法 (slash notation)a.b.c.d / n：二进制 IP 地址的前 n 位是网络前缀。例如：128.14.35.7/20：前 20 位是网络前缀。
(2) 地址块CIDR 把网络前缀都相同的所有连续的 IP 地址组成一个 CIDR 地址块。一个 CIDR 地址块包含的 IP 地址数目，取决于网络前缀的位数。128.14.32.0/20 组成的地址块（共 212 个地址）10000000 00001110 00100000 0000000010000000 00001110 00100000 0000000110000000 00001110 00100000 0000001010000000 00001110 00100000 0000001110000000 00001110 00100000 0000010010000000 00001110 00100000 0000010110000000 00001110 00101111 1111101110000000 00001110 00101111 1111110010000000 00001110 00101111 1111110110000000 00001110 00101111 1111111010000000 00001110 00101111 11111111所有地址的 20 位前缀都是一样的可指派的地址数是212 – 2 个二进制代码表示：10000000 00001110 0010*
(2) 地址块注意：
(3) 地址掩码 (address mask)又称为掩码 (mask)。位数：32 位。目的：让机器从 IP 地址迅速算出网络地址。由一连串 1 和接着的一连串 0 组成，而 1 的个数就是网络前缀的长度。/20 地址块的地址掩码：11111111 11111111 11110000 00000000点分十进制记法：255.255.240.0       CIDR 记法：255.255.240.0/20。
默认地址掩码1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 10 0 0 0 0 0 0 00 0 0 0 0 0 0 0 0 0 0 0 0 0 0 01 1 1 1 1 1 1 1 1 1 1 1 1 1 1 11 1 1 1 1 1 1 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0网络号网络号主机号网络号A类地址默认地址掩码255.0.0.0B类地址默认地址掩码255.255.0.0C类地址默认地址掩码255.255.255.0主机号主机号
网络地址 = (二进制的 IP 地址) AND (地址掩码)网络前缀主机号IP 地址地址掩码逐位进行 AND 运算
网络地址 = (二进制的 IP 地址) AND (地址掩码)【例】已知 IP 地址是 128.14.35.7/20。求网络地址。 
常用的 CIDR 地址块
构造超网每一个 CIDR 地址块中的地址数一定是 2 的整数次幂。除最后几行外，CIDR 地址块都包含了多个 C 类地址（是一个 C 类地址的 2n 倍，n 是整数）。因此在文献中有时称 CIDR 编址为“构造超网”。128.14.0.0/20超网
三个特殊的 CIDR 地址块
路由聚合 (route aggregation)192.24.0192.24.1192.24.2192.24.3192.24.4192.24.5192.24.6192.24.7192.24.8192.24.9192.24.10192.24.11192.24.12192.24.13192.24.14192.24.15192.24.0.0 / 20
CIDR 地址块划分举例206.0.68.0/22206.0.64.0/18ISP大学 X一系二系三系四系206.0.71.128/26206.0.71.192/26206.0.68.0/25206.0.68.128/25206.0.69.0/25206.0.69.128/25206.0.70.0/26206.0.70.64/26206.0.70.128/26206.0.70.192/26206.0.71.0/26206.0.71.64/26206.0.70.0/24206.0.71.0/25206.0.71.128/25206.0.68.0/23路由聚合路由聚合可见：网络前缀越短，地址块所包含的地址数越多。
CIDR 地址块划分举例206.0.68.0/22206.0.64.0/18ISP大学 X一系二系三系四系206.0.71.128/26206.0.71.192/26206.0.68.0/25206.0.68.128/25206.0.69.0/25206.0.69.128/25206.0.70.0/26206.0.70.64/26206.0.70.128/26206.0.70.192/26206.0.71.0/26206.0.71.64/26206.0.70.0/24206.0.71.0/25206.0.71.128/25206.0.68.0/23路由聚合路由聚合可见：网络前缀越短，地址块所包含的地址数越多。这个 ISP 共有 64 个 C 类网络。如果不采用 CIDR 技术，则在与该 ISP 的路由器交换路由信息的每一个路由器的转发表中，需要有 64 行。采用地址聚合后，转发表中只需要用 1 行来指出到 206.0.64.0/18 地址块的下一跳。在 ISP 内的路由器的转发表中，也仅需用 206.0.68.0/22 这 1 个项目，就能把外部发送到这个大学各系的所有分组，都转发到大学的路由器。
4. IP 地址的特点IP 地址是一种分等级的地址结构。方便了 IP 地址的分配和管理。实现路由聚合，减小了转发表所占的存储空间，以及查找转发表的时间。
4. IP 地址的特点当一台主机同时连接到两个网络上时，该主机就必须同时具有两个相应的 IP 地址，其网络号必须是不同的。这种主机称为多归属主机 (multihomed host)。一个路由器至少应当连接到两个网络，因此一个路由器至少应当有两个不同的 IP 地址。
4. IP 地址的特点按照互联网的观点，一个网络（或子网）是指具有相同网络前缀的主机的集合。转发器或交换机连接起来的若干个局域网都具有同样的网络号，它们仍为一个网络。具有不同网络号的局域网必须使用路由器进行互连。
4. IP 地址的特点互联网同等对待每一个 IP 地址，不管是范围很小的局域网，还是可能覆盖很大地理范围的广域网
同一个局域网上的主机或路由器的IP 地址中的网络号必须一样。注意：以太网交换机1.1.1.0/291.1.1.11.1.1.21.1.1.31.1.1.4R11.1.1.131.1.1.101.1.1.91.1.1.121.1.1.111.1.1.8/291.1.1.241.1.1.251.1.1.261.1.1.251.1.1.261.1.1.271.1.1.171.1.1.191.1.1.18R3R21.1.1.16/29LAN3N1N21.1.1.26/311.1.1.25/311.1.1.24/31N3LAN2LAN1网络地址IP地址路由器
注意：1.1.1.0/291.1.1.11.1.1.21.1.1.31.1.1.4R11.1.1.131.1.1.101.1.1.91.1.1.121.1.1.111.1.1.8/291.1.1.241.1.1.251.1.1.261.1.1.251.1.1.261.1.1.271.1.1.171.1.1.191.1.1.18R3R21.1.1.16/29LAN3N1N21.1.1.26/311.1.1.25/311.1.1.24/31N3LAN2LAN1网络地址IP地址路由器的每一个接口都有一个不同网络号的 IP 地址。以太网交换机路由器
注意：1.1.1.0/291.1.1.11.1.1.21.1.1.31.1.1.4R11.1.1.131.1.1.101.1.1.91.1.1.121.1.1.111.1.1.8/291.1.1.241.1.1.251.1.1.261.1.1.251.1.1.261.1.1.271.1.1.171.1.1.191.1.1.18R3R21.1.1.16/29LAN3N1N21.1.1.26/311.1.1.25/311.1.1.24/31N3LAN2LAN1网络地址IP地址两个路由器直接相连的接口处，可指明也可不指明 IP 地址。如指明 IP 地址，则这一段连线就构成了一种只包含一段线路的特殊“网络” 。这种网络仅需两个 IP 地址，可以使用 /31 地址块。主机号可以是 0 或 1。以太网交换机路由器
4.2.3  IP 地址与 MAC 地址
IP 地址与 MAC 地址的区别TCP 报文IP 数据报MAC 帧应用层数据首部首部尾部首部IP 地址放在 IP 数据报的首部，MAC 地址则放在 MAC 帧的首部。
通信的路径：H1→经过 R1 转发→再经过 R2 转发→H2查找路由表查找路由表
从协议栈的层次上看 IP 地址和 MAC 地址
在 IP 层抽象的互联网上只能看到 IP 数据报。路由器只根据目的站的 IP 地址进行转发。注意：数据报中 IP 地址是否有变化？
在局域网的链路层，只能看见 MAC 帧。注意：帧中 MAC 地址是否有变化？对 IP 层有何影响？
不同层次、不同区间使用的源地址和目的地址
不同层次、不同区间使用的源地址和目的地址尽管互连在一起的网络的 MAC 地址体系各不相同，但 IP 层抽象的互联网却屏蔽了下层这些很复杂的细节。只要我们在网络层上讨论问题，就能够使用统一的、抽象的 IP 地址研究主机和主机或路由器之间的通信。问题：主机或路由器怎样知道应当在 MAC 帧的首部填入什么样的 MAC 地址？
4.2.4  地址解析协议 ARP实现 IP 通信时使用了两个地址：IP 地址（网络层地址）MAC 地址（数据链路层地址）220.168.10.1000-15-C5-C6-CC-07220.168.10.2000-15-C5-C8-C4-95220.168.10.1600-15-C5-C6-C8-11IP 地址MAC 地址LAN
地址解析协议 ARP 的作用问题：已经知道了一个机器（主机或路由器）的 IP 地址，如何找出其相应的 MAC 地址？ARP (Address Resolution Protocol ) 作用：从 IP 地址解析出 MAC 地址。
要点 1：ARP 高速缓存 (ARP cache)ARP 高速缓存 (ARP cache)：存放 IP 地址到 MAC 地址的映射表。映射表动态更新（新增或超时删除）。< IP 地址；MAC 地址；生存时间 (Age)；类型等 >超过生存时间的项目都从高速缓存中删除，以适应网络适配器变化。映射表
要点 2：ARP 工作当主机 A 欲向本局域网上的某个主机 B 发送 IP 数据报时：在其 ARP 高速缓存查找主机 B 的 IP 地址找到？取出 MAC 地址将该 MAC 地址写入 MAC 帧的目的地址发送该 MAC 帧是自动运行 ARP，找出主机 B 的 MAC 地址，更新 ARP 高速缓存否
要点 3：ARP 查找 IP 地址对应的 MAC地址本局域网上广播发送 ARP 请求（路由器不转发 ARP 请求）。ARP 请求分组：包含发送方硬件地址 / 发送方 IP 地址 / 目标方硬件地址(未知时填 0) / 目标方 IP 地址。单播 ARP 响应分组：包含发送方硬件地址 / 发送方 IP地址 / 目标方硬件地址 / 目标方 IP 地址。ARP 分组封装在以太网帧中传输。
209.0.0.6AYXBZ主机 B 向 A 单播发送ARP 响应分组 主机 A 本局域网上广播发送ARP 请求分组 ARP 请求ARP 请求ARP 请求00-00-C0-15-AD-1808-00-2B-00-EE-0A我是 209.0.0.5，硬件地址是 00-00-C0-15-AD-18我想知道主机 209.0.0.6 的硬件地址。我是 209.0.0.6，硬件地址是 08-00-2B-00-EE-0A。AYXBZ209.0.0.500-00-C0-15-AD-18209.0.0.6209.0.0.5更新 ARP 高速缓存更新 ARP 高速缓存
ARP 高速缓存的作用存放最近获得的 IP 地址到 MAC 地址的绑定。减少 ARP 广播的通信量。为进一步减少 ARP 通信量，主机 A 在发送其 ARP 请求分组时，就将自己的 IP 地址到 MAC 地址的映射写入 ARP 请求分组。当主机 B 收到 A 的 ARP 请求分组时，就将主机 A 的 IP 地址及其对应的 MAC 地址映射写入主机 B 自己的 ARP 高速缓存中。不必在发送 ARP 请求。
2 台主机不在同一个局域网上怎么办？通信的路径：A → 经过 R1 转发 → B。因此主机 A 必须知道路由器 R1 的 IP 地址，解析出其 MAC 地址。然后把 IP 数据报传送到路由器 R1。ARP 用于解决同一个局域网上的主机或路由器的 IP 地址和 MAC 地址的映射问题。
2 台主机不在同一个局域网上怎么办？我是 209.0.0.5，硬件地址是 00-00-C0-15-AD-18我想知道路由器 209.0.0.1 的硬件地址。通信的路径：A → 经过 R1 转发 → B。因此主机 A 必须知道路由器 R1 的 IP 地址，解析出其 MAC 地址。然后把 IP 数据报传送到路由器 R1。
2 台主机不在同一个局域网上怎么办？我是 209.0.0.1，硬件地址是 0C-05-20-01-2F-0D。通信的路径：A → 经过 R1 转发 → B。因此主机 A 必须知道路由器 R1 的 IP 地址，解析出其 MAC 地址。然后把 IP 数据报传送到路由器 R1。
2 台主机不在同一个局域网上怎么办？我是 219.1.0.1，硬件地址是 00-00-C0-15-AD-18我想知道路由器 219.1.0.6 的硬件地址。通信的路径：A → 经过 R1 转发 → B。因此主机 A 必须知道路由器 R1 的 IP 地址，解析出其 MAC 地址。然后把 IP 数据报传送到路由器 R1。
2 台主机不在同一个局域网上怎么办？我是 219.1.0.6，硬件地址是 08-00-2B-00-EE-0A。通信的路径：A → 经过 R1 转发 → B。因此主机 A 必须知道路由器 R1 的 IP 地址，解析出其 MAC 地址。然后把 IP 数据报传送到路由器 R1。
使用 ARP 的四种典型情况网 1网 3网 2R2R1H1H2H3H4发送方是主机，要把 IP 数据报发送到本网络上的另一个主机。这时用 ARP 找到目的主机的硬件地址。 
使用 ARP 的四种典型情况网 1网 3网 2R2R1H1H2H3H4发送方是主机，要把 IP 数据报发送到另一个网络上的一个主机。这时用 ARP 找到本网络上的一个路由器的硬件地址。剩下的工作由这个路由器来完成。 
使用 ARP 的四种典型情况网 1网 3网 2R2R1H1H2H3H4发送方是路由器，要把 IP 数据报转发到本网络上的一个主机。这时用 ARP 找到目的主机的硬件地址。 
使用 ARP 的四种典型情况网 1网 3网 2R2R1H1H2H3H4发送方是路由器，要把 IP 数据报转发到另一个网络上的一个主机。这时用 ARP 找到本网络上另一个路由器的硬件地址。剩下的工作由这个路由器来完成。 
为什么要使用两种地址：IP 地址和 MAC 地址？不同使用不同的 MAC 地址。MAC 地址之间的转换非常复杂。对以太网 MAC 地址进行寻址也是极其困难的。IP 编址把这个复杂问题解决了。连接到互联网的主机只需各自拥有一个唯一的 IP 地址，它们之间的通信就像连接在同一个网络上那样简单方便，即使必须多次调用 ARP 来找到 MAC 地址，但这个过程都是由计算机软件自动进行的，对用户来说是看不见的。因此，在虚拟的 IP 网络上用 IP 地址进行通信非常方便。
4.2.5  IP 数据报的格式首部长度固定部分可变部分04816192431版 本标志生 存 时 间协    议标    识区 分 服 务总   长   度片   偏   移填    充首   部   检   验   和源   地   址目   的   地   址可   选   字   段  （长   度   可   变）位数   据   部   分数       据       部       分首   部IP 数据报IP 数据报由首部和数据两部分组成
4.2.5  IP 数据报的格式首部长度固定部分可变部分04816192431版 本标志生 存 时 间协    议标    识区 分 服 务总   长   度片   偏   移填    充首   部   检   验   和源   地   址目   的   地   址可   选   字   段  （长   度   可   变）位数   据   部   分数       据       部       分首   部IP 数据报首部的前一部分是固定长度，共 20 字节，是所有 IP 数据报必须具有的。
4.2.5  IP 数据报的格式首部长度固定部分可变部分04816192431版 本标志生 存 时 间协    议标    识区 分 服 务总   长   度片   偏   移填    充首   部   检   验   和源   地   址目   的   地   址可   选   字   段  （长   度   可   变）位数   据   部   分可选字段，其长度是可变的数       据       部       分首   部IP 数据报
1.  IP 数据报首部的固定部分中的各字段版本——占 4 位，指 IP 协议的版本。目前的 IP 协议版本号为 4 (即 IPv4)。
1.  IP 数据报首部的固定部分中的各字段首部长度——占 4 位，可表示的最大数值是 15 个单位(一个单位为 4 字节)，因此 IP 的首部长度的最大值是 60 字节。
1.  IP 数据报首部的固定部分中的各字段区分服务——占 8 位，用来获得更好的服务。只有在使用区分服务（DiffServ）时，这个字段才起作用。在一般的情况下都不使用这个字段 
1.  IP 数据报首部的固定部分中的各字段总长度——占 16 位，指首部和数据之和的长度，单位为字节，因此数据报的最大长度为 65535 字节。总长度必须不超过最大传送单元 MTU。 
1.  IP 数据报首部的固定部分中的各字段标识 (identification) ——占 16 位，它是一个计数器，用来产生 IP 数据报的标识。 
1.  IP 数据报首部的固定部分中的各字段标志(flag) ——占 3 位，目前只有前两位有意义。标志字段的最低位是 MF (More Fragment)。MF=1 表示后面还有分片，MF=0 表示最后一个分片。标志字段中间的一位是 DF (Don't Fragment) 。只有当 DF=0 时才允许分片。 
1.  IP 数据报首部的固定部分中的各字段片偏移——占 13 位，指出：较长的分组在分片后某片在原分组中的相对位置。片偏移以 8 个字节为偏移单位。
【例4-1】 IP 数据报分片
【例4-1】 IP 数据报分片IP 数据报首部中与分片有关的字段中的数值
1.  IP 数据报首部的固定部分中的各字段生存时间——占 8 位，记为 TTL (Time To Live)，指示数据报在网络中可通过的路由器数的最大值。
1.  IP 数据报首部的固定部分中的各字段协议——占 8 位，指出此数据报携带的数据使用何种协议，以便目的主机的 IP 层将数据部分上交给那个处理过程
1.  IP 数据报首部的固定部分中的各字段运输层网络层首部TCPUDPICMPIGMPOSPF数 据 部 分IP 数据报IP 协议支持多种协议，IP 数据报可以封装多种协议 PDU。
常用的一些协议和相应的协议字段值
1.  IP 数据报首部的固定部分中的各字段首部检验和——占 16 位，只检验数据报的首部，不检验数据部分。这里不采用 CRC 检验码而采用简单的计算方法。 
发送端接收端16 位字 116 位字 216 位字 n……数据报首部IP 数据报16 位字 116 位字 216 位字 n……数据部分数据报每经过一个路由器，路由器都要重新计算一下首部检验和
1.  IP 数据报首部的固定部分中的各字段源地址和目的地址都各占 32 位。
2.  IP 数据报首部的可变部分IP 首部的可变部分就是一个选项字段，用来支持排错、测量以及安全等措施，内容很丰富。长度可变：从 1 个字节到 40 个字节不等，取决于所选择的项目。增加了 IP 数据报的功能，但这同时也使得 IP 数据报的首部长度成为可变的，增加了每一个路由器处理数据报的开销。实际上这些选项很少被使用。
4.3.1                                       基于终点的转发4.3.2                                          最长前缀匹配4.3.3                             使用二叉线索查找转发表4.3IP 层转发分组的过程
4.3.1  基于终点的转发分组在互联网中是逐跳转发的。基于终点的转发：基于分组首部中的目的地址传送和转发。
z为了压缩转发表的大小，转发表中最主要的路由是（目的网络地址，下一跳地址） ，而不是（目的地址，下一跳地址）。查找转发表的过程就是逐行寻找前缀匹配。

N1 的 网络地址为 128.1.2.192N1 的 网络掩码为 /26 = 255.255.255.192   H1 的网络地址源主机 H1 必须把分组发送给路由器 R1。 H1 首先检查 128.1.2.132 是否连接在本网络上。如果是，则直接交付；否则，就送交路由器 R1。
路由器 R1 收到分组后查找转发表。先检查第 1 行。 255.255.255.192 AND 128.1.2.132 = 128.1.2.128 /26     不匹配!
路由器 R1 收到分组后查找转发表。接着检查第 2 行。 255.255.255.128 AND 128.1.2.132 = 128.1.2.128 /25     匹配!进行分组的直接交付（通过路由器 R1 的接口 1）。
使用 CIDR 时，在查找转发表时可能会得到不止一个匹配结果。 最长前缀匹配 (longest-prefix matching) 原则：选择前缀最长的一个作为匹配的前缀。网络前缀越长，其地址块就越小，因而路由就越具体。把前缀最长的排在转发表的第 1 行。4.3.2  最长前缀匹配
路由器 R1 如何转发目的地址是 128.1.2.194 的分组？
255.255.255.192 AND 128.1.2.194 = 128.1.2.192 /26     匹配!路由器 R1 收到分组后查找转发表。先检查第 1 行。 
255.255.255.128 AND 128.1.2.194 = 128.1.2.128 /25     匹配!路由器 R1 收到分组后查找转发表。接着检查第 2 行。 
路由器 R1 收到分组后查找转发表。接着检查第 3 行。 255.255.255.192 AND 128.1.2.194 = 128.1.2.192 /26     不匹配!
问题：从哪个接口向外转发分组？4.3.2  最长前缀匹配匹配的前缀最长 
4.3.2  最长前缀匹配
转发表中的 2 种特殊的路由主机路由 (host route) 又叫做特定主机路由。是对特定目的主机的 IP 地址专门指明的一个路由。网络前缀就是 a.b.c.d/32放在转发表的最前面。默认路由 (default route)不管分组的最终目的网络在哪里，都由指定的路由器 R 来处理用特殊前缀 0.0.0.0/0 表示。
默认路由举例R1互联网主机路由表N2R2N1只要目的网络不是 N1 和 N2，就一律选择默认路由，把 IP 数据报先间接交付默认路由器 R1，让 R1 再转发给下一个路由器。 路由器 R1 充当到达互联网的默认路由器  网络前缀        下一跳      N1               直接       N2               R2  0.0.0.0/0         R1
路由器分组转发算法提取目的地址 IP 地址 D找到 D 的特定主机路由 ？找到 D 的最长前缀匹配 ？找到默认路由？转发分组到下一跳路由器丢弃分组查找转发表是否否否是是
4.3.3 使用二叉线索查找转发表二叉线索 (binary trie)：一种特殊结构的树，可以快速在转发表中找到匹配的叶节点。从二叉线索的根节点自顶向下的深度最多有 32 层，每一层对应于 IP 地址中的一位。为简化二叉线索的结构，可以用唯一前缀 (unique prefix) 来构造二叉线索。为了提高二叉线索的查找速度，广泛使用了各种压缩技术。 
规则：先检查 IP 地址左边的第一位，如为 0，则第一层的节点就在根节点的左下方；如为 1，则在右下方。然后再检查地址的第二位，构造出第二层的节点。依此类推，直到唯一前缀的最后一位。每个叶节点代表一个唯一前缀。为检查网络前缀是否匹配，必须使二叉线索中的每一个叶节点包含所对应的网络前缀和子网掩码。                     32 位的 IP 地址                              唯一前缀  01000110 00000000 00000000 00000000	0100  01010110 00000000 00000000 00000000	0101  01100001 00000000 00000000 00000000	011  10110000 00000010 00000000 00000000	10110  10111011 00001010 00000000 00000000	10111用 5 个唯一前缀构成的二叉线索
找到了一个叶节点。将目的 IP 地址和该叶节点的子网掩码进行按位 AND 运算，看结果是否与叶节点的网络前缀相匹配。若匹配，就按下一跳的接口转发该分组。否则，就丢弃该分组。                     32 位的 IP 地址01010110 01111010 00000000 00000000在二叉线索中查找 IP 地址
查到第三个字符 0 时，在二叉线索中找不到匹配的。说明这个地址不在这个二叉线索中。检查是否存在默认路由。若有，把分组传送到指明的默认路由器，否则丢弃该分组。                     32 位的 IP 地址10011011 01111010 00000000 00000000在二叉线索中查找 IP 地址
4.4.1                                   ICMP 报文的种类4.4.2                                   ICMP 的应用举例4.4网际控制报文协议 ICMP
ICMP (Internet Control Message Protocol) 允许主机或路由器报告差错情况和提供有关异常情况的报告。ICMP 是互联网的标准协议。但 ICMP 不是高层协议，而是 IP 层的协议。4.4  网际控制报文协议 ICMP 
首  部ICMP 报文0数  据  部  分81631IP 数据报ICMP 的数据部分（长度取决于类型）ICMP 报文的格式 （这 4 个字节取决于 ICMP 报文的类型）
4.4.1  ICMP 报文的种类2 种：差错报告报文，询问报文。 几种常用的 ICMP 报文类型
ICMP 差错报告报文的数据字段的内容
对 ICMP 差错报告报文不再发送 ICMP 差错报告报文。对第一个分片的数据报片的所有后续数据报片都不发送 ICMP 差错报告报文。对具有多播地址的数据报都不发送 ICMP 差错报告报文。对具有特殊地址（如127.0.0.0 或 0.0.0.0）的数据报不发送 ICMP 差错报告报文。不应发送 ICMP 差错报告报文的几种情况
ICMP 询问报文(1) 回送请求和回答由主机或路由器向一个特定的目的主机发出的询问。收到此报文的主机必须给源主机或路由器发送 ICMP 回送回答报文。这种询问报文用来测试目的站是否可达，以及了解其有关状态。(2) 时间戳请求和回答：请某台主机或路由器回答当前的日期和时间。时间戳回答报文中有一个 32 位的字段，其中写入的整数代表从1900 年 1 月 1 日起到当前时刻一共有多少秒。时间戳请求与回答可用于时钟同步和时间测量。
4.4.2  ICMP 的应用举例PING (Packet InterNet Groper) 用来测试两个主机之间的连通性。使用了 ICMP 回送请求与回送回答报文。是应用层直接使用网络层 ICMP 的例子，没有通过运输层的 TCP 或 UDP。 
PING 的应用举例用 PING 测试邮件服务器 mail.sina.com.cn 的连通性
4.4.2  ICMP 的应用举例Traceroute这是UNIX操作系统中名字。在 Windows 操作系统中这个命令是 tracert。用来跟踪一个分组从源点到终点的路径。它利用 IP 数据报中的 TTL 字段、ICMP 时间超过差错报告报文和ICMP 终点不可达差错报告报文实现对从源点到终点的路径的跟踪。
用 tracert 命令获得到新浪网的邮件服务器 mail.sina.com.cn 的路由信息4.4.2  ICMP 的应用举例
4.5IPv64.5.1                                     IPv6 的基本首部4.5.2                                            IPv6 的地址4.5.3                              从 IPv4 向 IPv6 过渡4.5.4                                                 ICMPv6
IP 是互联网的核心协议。IPv4 地址耗尽问题：到 2011 年 2 月，IANA IPv4 的 32 位地址已经耗尽。各地区互联网地址分配机构也相继宣布地址耗尽。我国在 2014 – 2015 年也逐步停止了向新用户和应用分配 IPv4 地址。根本解决措施：采用具有更大地址空间的新版本的 IP，即 IPv6。4.5  IPv6
IPv6 仍支持无连接的传送。将协议数据单元 PDU 称为分组 (packet) 。主要变化（1/2）：更大的地址空间。 将地址从 IPv4 的 32 位 增大到了 128 位。 扩展的地址层次结构。可以划分为更多的层次。 灵活的首部格式。定义了许多可选的扩展首部。改进的选项。允许数据报包含有选项的控制信息，其选项放在有效载荷中。4.5.1  IPv6 的基本首部
4.5.1  IPv6 的基本首部主要变化（2/2）：允许协议继续扩充。更好地适应新的应用。支持即插即用（即自动配置）。不需要使用 DHCP。支持资源的预分配。支持实时视像等要求保证一定的带宽和时延的应用。IPv6 首部改为 8 字节对齐。首部长度必须是 8 字节的整数倍。
由两大部分组成：基本首部 (base header)有效载荷 (payload)。有效载荷也称为净负荷。有效载荷允许有零个或多个扩展首部 (extension header)，再后面是数据部分。IPv6 数据报的一般形式
首部长度：固定的 40 字节，称为基本首部。首部字段数：只有 8 个。IPv6 数据报的基本首部IPv6 对首部的主要更改
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24有效载荷（扩展首部 / 数据）40 字节长的 IPv6 基本首部IPv6 的有效载荷（至 64 KB）
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24IPv6 的基本首部（40 B）版本(version)—— 4 位。它指明了协议的版本，对 IPv6 该字段总是 6。 
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24IPv6 的基本首部（40 B）通信量类(traffic class)—— 8 位。这是为了区分不同的 IPv6 数据报的类别或优先级。目前正在进行不同的通信量类性能的实验。 
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24IPv6 的基本首部（40 B）流标号(flow label)—— 20 位。 “流”是互联网络上从特定源点到特定终点的一系列数据报， “流”所经过的路径上的路由器都保证指明的服务质量。所有属于同一个流的数据报都具有同样的流标号。 
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24IPv6 的基本首部（40 B）有效载荷长度(payload length)—— 16 位。它指明 IPv6 数据报除基本首部以外的字节数（所有扩展首部都算在有效载荷之内），其最大值是 64 KB。 
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24IPv6 的基本首部（40 B）下一个首部(next header)—— 8 位。相当于 IPv4 的协议字段或可选字段。 
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24IPv6 的基本首部（40 B）跳数限制(hop limit)—— 8 位。源站在数据报发出时即设定跳数限制。路由器在转发数据报时将跳数限制字段中的值减 1。当跳数限制的值为零时，就要将此数据报丢弃。 
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24IPv6 的基本首部（40 B）源地址—— 128 位。是数据报的发送站的 IP 地址。 
041631版本位目的地址源地址下一个首部流标号12通信量类（128位）（128位）有效载荷长度跳数限制24IPv6 的基本首部（40 B）目的地址—— 128 位。是数据报的接收站的 IP 地址。
逐跳选项路由选择分片鉴别封装安全有效载荷目的站选项 IPv6 的六种扩展首部
4.5.2  IPv6 的地址三种基本类型：单播 (unicast)：传统的点对点通信。多播 (multicast)：一点对多点的通信。任播 (anycast)：IPv6 增加的一种类型。任播的终点是一组计算机，但数据报在交付时只交付其中的一个。通常是按照路由算法得出的距离最近的一个。 
IPv6 将实现 IPv6 的主机和路由器均称为节点。一个节点可能有多个与链路相连的接口。IPv6 地址是分配给节点上接口的。一个具有多个接口的节点可以有多个单播地址。其中的任何一个地址都可以当作到达该节点的目的地址。节点与接口
在 IPv6 中，每个地址占 128 位，地址空间大于 3.4  1038 。使用冒号十六进制记法(colon hexadecimal notation, 简写为 colon hex)：16 位的值用十六进制值表示，各值之间用冒号分隔。冒号十六进制记法104.230.140.100.255.255.255.255.0.0.17.128.150.10.255.255点分十进制数记法：两个技术：零压缩，点分十进制记法的后缀。
零压缩 (zero compression)：一串连续的零可以用一对冒号取代。零压缩FF05:0:0:0:0:0:0:B3FF05::B3注意：在任一地址中，只能使用一次零压缩。可压缩为： 0:0:0:0:0:0:128.10.2.1::128.10.2.11080:0:0:0:8:800:200C:417A FF01:0:0:0:0:0:0:101（多播地址）0:0:0:0:0:0:0:1（环回地址）0:0:0:0:0:0:0:0（未指明地址）1080::8:800:200C:417AFF01::101::1::
结合使用点分十进制记法的后缀在 IPv4 向 IPv6 的转换阶段特别有用。例如：CIDR 的斜线表示法仍然可用，但取消了子网掩码。例如：60 位的前缀 12AB00000000CD3 可记为：点分十进制记法的后缀0:0:0:0:0:0:128.10.2.1::128.10.2.112AB:0000:0000:CD30:0000:0000:0000:0000/60或 12AB::CD30:0:0:0:0/60 （零压缩）或 12AB:0:0:CD30::/60 （零压缩）CIDR 记法地址：	2001:0DB8:0:CD30:123:4567:89AB:CDEF/60，表示：IPv6 的地址是：	2001:0DB8:0:CD30:123:4567:89AB:CDEF其子网号是：	2001:0DB8:0:CD30::/60
IPv6 地址分类
IPv6 单播地址的划分方法
4.5.3  从 IPv4 向 IPv6 过渡方法：逐步演进，向后兼容。向后兼容：IPv6 系统必须能够接收和转发 IPv4 分组，并且能够为 IPv4 分组选择路由。两种过渡策略：使用双协议栈使用隧道技术
双协议栈运输层IPv4IPv6链路层和以下应用层到 IPv4 系统到 IPv6 系统IPv6/IPv4 双协议栈主机（或路由器）
双协议栈双协议栈IPv6/IPv4IPv6IPv6IPv4 网络ABCDEF双协议栈IPv6/IPv4…IPv6 数据报IPv6 数据报数据部分数据部分IPv4 网络使用双协议栈进行从 IPv4 到 IPv6 的过渡IPv4 数据报IPv4 数据报流标号：X源地址：A目的地址：F……   数据部分流标号：无源地址：A目的地址：F……   数据部分源地址：A目的地址：F……源地址：A目的地址：F……
使用隧道技术进行从 IPv4 到 IPv6 的过渡IPv6IPv6AF…IPv4 数据报IPv4 数据报源地址：B目的地址：EIPv6数据报双协议栈IPv6/IPv4流标号：X源地址：A目的地址：F……   数据部分IPv6 数据报流标号：X源地址：A目的地址：F……   数据部分IPv6 数据报源地址：B目的地址：EIPv6数据报IPv4 网络BCDE双协议栈IPv6/IPv4IPv4 网络 隧道技术
4.5.4  ICMPv6IPv6 也需要使用 ICMP 来反馈一些差错信息。新的版本称为 ICMPv6。版本 4 中的网络层ICMPIPv4ARPIGMP版本 6 中的网络层ICMPv6IPv6新旧版本中的网络层的比较ICMPv6 包含了 ARP 和 IGMP 协议的功能中。
ICMPv6 报文的分类
4.6互连网的路由选择协议4.6.1            有关路由选择协议的几个基本概念4.6.2                                   内部网关协议 RIP4.6.3                                内部网关协议 OSPF4.6.4                                  外部网关协议 BGP4.6.5                                          路由器的构成
4.6.1  有关路由选择协议的几个基本概念路由选择协议属于网络层控制层面的内容
1. 理想的路由算法

路由算法分类（自适应）
互联网：采用自适应的（即动态的）、分布式路由选择协议。把整个互联网划分为许多较小的自治系统 AS，采用分层次的路由选择协议。分为 2 个层次：自治系统之间的路由选择 或 域间路由选择 (interdomain routing)；自治系统内部的路由选择 或 域内路由选择 (intradomain routing)；2. 分层次的路由选择协议
自治系统 AS (Autonomous System) R1自治系统 AS ：是在单一技术管理下的许多网络、IP地址以及路由器，而这些路由器使用一种自治系统内部的路由选择协议和共同的度量。每一个 AS 对其他 AS 表现出的是一个单一的和一致的路由选择策略。
2 大类路由选择协议
自治系统和内部网关协议、外部网关协议  用内部网关协议（例如，RIP）自治系统 B自治系统 A用外部网关协议（例如，BGP-4）R1R2 用内部网关协议（例如，OSPF）自治系统之间的路由选择也叫做域间路由选择 (interdomain routing)。自治系统内部的路由选择叫做域内路由选择 (intradomain routing) 。
4.6.2  内部网关协议 RIP
路由信息协议 RIP (Routing Information Protocol) 是一种分布式的、基于距离向量的路由选择协议。互联网的标准协议。最大优点：简单。要求网络中的每个路由器都要维护从它自己到其他每一个目的网络的距离记录。 1. 协议 RIP 的工作原理
RIP“距离”的定义路由器到直接连接的网络的距离 = 1。路由器到非直接连接的网络的距离 = 所经过的路由器数 + 1。RIP 协议中的“距离”也称为“跳数”(hop count)，每经过一个路由器，跳数就加 1。路由 A-B-E 的距离 = 2，路由 A-C-D-E 的距离 = 3。
RIP“距离”的定义好路由 = “距离短”的路由。最佳路由 = “距离最短”的路由。一条路径最多只能包含 15 个路由器。“距离”的最大值为 16 时即相当于不可达。RIP 不能在两个网络之间同时使用多条路由，只选择距离最短”的路由。路由 A-B-E 的距离 = 2，路由 A-C-D-E 的距离 = 3。最佳路由为 A-B-E。
RIP 协议的三个特点仅和相邻路由器交换信息。 交换的信息是当前本路由器所知道的全部信息，即自己的路由表。 按固定时间间隔交换路由信息，例如，每隔 30 秒。当网络拓扑发生变化时，路由器也及时向相邻路由器通告拓扑变化后的路由信息。
路由表的建立路由器在刚刚开始工作时，路由表是空的。然后，得到直接连接的网络的距离（此距离定义为 1）。之后，每一个路由器也只和数目非常有限的相邻路由器交换并更新路由信息。经过若干次更新后，所有的路由器最终都会知道到达本自治系统中任何一个网络的最短距离和下一跳路由器的地址。RIP 协议的收敛 (convergence) 过程较快。“收敛”就是在自治系统中所有的结点都得到正确的路由选择信息的过程。 
路由表主要信息和更新规则路由表主要信息：路由表更新规则：    使用距离向量算法找出到达每个目的网络的最短距离。
2. 距离向量算法(1) 修改 RIP 报文中的所有项目（即路由）：把“下一跳”字段中的地址都改为 X，并把所有的“距离”字段的值加 1。(2) 对修改后的 RIP 报文中的每一个项目，重复以下步骤：    若路由表中没有目的网络N，则把该项目添加到路由表中。否则        若路由表中网络 N 的下一跳路由器为 X，则用收到的项目替换原路由表中的项目。否则           若收到项目中的距离小于路由表中的距离，则用收到项目更新原路由表中的项目。否则               什么也不做。(3) 若 3 分钟还未收到相邻路由器的更新路由表，则把此相邻路由器记为不可达路由器，即将距离置为 16（表示不可达）。(4) 返回。对每个相邻路由器（假设其地址为 X）发送过来的 RIP 报文，路由器：
算法基础：Bellman-Ford 算法（或 Ford-Fulkerson 算法）。算法要点：设 X 是结点 A 到 B 的最短路径上的一个结点。若把路径 A→B 拆成两段路径 A→X 和 X→B，则每一段路径 A→X 和 X→B 也都分别是结点 A 到 X 和结点 X 到 B 的最短路径。2. 距离向量算法ZABX
【例】已知路由器 R6 有表 4-8(a) 所示的路由表。现在收到相邻路由器 R4 发来的路由更新信息，如表 4-8(b) 所示。试更新路由器 R6 的路由表。表 4-8(a)  路由器 R6 的路由表表 4-8(b)  R4 发来的路由更新信息表 4-8(c)  修改后的表 4-9(b)表 4-8(d)  路由器 R6 更新后的路由表
【例】路由表更新。
 4 字节RIP 报文路由信息（20 字节/路由）可重复出现最多 25 个IP 数据报路由标记网络地址地址族标识符距离 (1-16)  IP 首部UDP 首部路由部分 4 字节子网掩码下一跳路由器地址UDP 用户数据报首部必为 0版本命令RIP2 支持无分类域间路由选择 CIDR，提供简单的鉴别，支持多播。RIP2 的报文用使用 UDP 传送（使用 UDP 端口 520）。RIP2 报文
RIP2 报文组成：首部和路由 2 个部分。路由部分：由若干个路由信息组成。每个路由信息共 20 个字节。地址族标识符（又称为地址类别）字段用来标志所使用的地址协议。路由标记填入自治系统的号码。后面为具体路由，指出某个网络地址、该网络的子网掩码、下一跳路由器地址以及到此网络的距离。 一个 RIP 报文最多可包括 25 个路由，因而 RIP 报文的最大长度是 4+20 x25=504 字节。如超过，必须再用一个 RIP 报文来传送。RIP2 具有简单的鉴别功能。
3. 坏消息传播得慢RIP 协议特点：好消息传播得快，坏消息传播得慢。问题：坏消息传播得慢（慢收敛）。当网络出现故障时，要经过比较长的时间才能将此信息（坏消息）传送到所有的路由器。
R2R1正常情况1  1  1  2  R1R1 说：“我到网 1 的距离是 1，是直接交付。”“1”表示“从本路由器到网 1”“1”表示“距离是 1”“”表示“直接交付”
R2R1正常情况1  1  1  2  R1R2 说：“我到网 1 的距离是 2，是经过 R1。”“1”表示“从本路由器到网 1”“2”表示“距离是 2”“R1”表示经过 R1
R2R1网 1 出了故障正常情况1  1  1  2  R1但 R2 在收到 R1 的更新报文之前，还发送原来的报文，因为这时 R2 并不知道 R1 出了故障。R1 说：“我到网 1 的距离是 16 （表示无法到达），是直接交付。”
R2R1R2R1正常情况1  1  1  2  R1R1 收到 R2 的更新报文后，误认为可经过 R2 到达网 1，于是更新自己的路由表，说：“我到网 1 的距离是 3，下一跳经过 R2”。然后将此更新信息发送给 R2。网 1 出了故障
R2R1R2R1正常情况1  1  1  2  R1R2 以后又更新自己的路由表为“1, 4, R1”，表明 “我到网 1 距离是 4，下一跳经过 R1”。 网 1 出了故障
R2R1网 1 出了故障这样不断更新下去，直到 R1 和 R2 到网 1 的距离都增大到 16 时， R1 和 R2 才知道网 1 是不可达的。 ……这就是好消息传播得快，而坏消息传播得慢。这是 RIP 的一个主要缺点。 
RIP 协议的优缺点优点：实现简单，开销较小。缺点：网络规模有限。最大距离为 15（16 表示不可达）。交换的路由信息为完整路由表，开销较大。 坏消息传播得慢，收敛时间过长。
4.6.3  内部网关协议 OSPF
4.6.3  内部网关协议 OSPF开放最短路径优先 OSPF (Open Shortest Path First)是为克服 RIP 的缺点在 1989 年开发出来的。原理很简单，但实现很复杂。使用了 Dijkstra 提出的最短路径算法 SPF。采用分布式的链路状态协议 (link state protocol)。 现在使用 OSPFv2。
三个主要特点采用洪泛法 (flooding)，向本自治系统中所有路由器发送信息。发送的信息是与本路由器相邻的所有路由器的链路状态，但这只是路由器所知道的部分信息。链路状态：说明本路由器都和哪些路由器相邻，以及该链路的度量 (metric)。 当链路状态发生变化或每隔一段时间（如30分钟），路由器才用洪泛法向所有路由器发送此信息。 
链路状态数据库 (link-state database) 每个路由器最终都能建立。全网的拓扑结构图。在全网范围内是一致的（这称为链路状态数据库的同步）。每个路由器使用链路状态数据库中的数据构造自己的路由表（例如，使用Dijkstra的最短路径路由算法）。链路状态数据库能较快地进行更新，使各个路由器能及时更新其路由表。重要优点：OSPF 更新过程收敛速度快。
OSPF 将自治系统划分为两种不同的区域 (area)自治系统 AS至其他自治系统R9R7R6R5R4R3R2R1R8网 8网 6网 3网 2网 1网 7网 4网 5主干区域 (backbone area) 标识符= 0.0.0.0，作用=用来连通其他下层区域。 
OSPF 中的路由器：区域边界路由器 ABR (area border router)至其他自治系统R9R2R1R8网 8网 6网 3网 2网 1网 7网 4网 5R6R5自治系统 AS
OSPF 中的路由器：主干路由器 BR (backbone router)至其他自治系统R9R2R1R8网 8网 6网 3网 2网 1网 7网 4网 5自治系统 AS
OSPF 中的路由器：自治系统边界路由器 ASBR (AS border router)至其他自治系统R9R2R1R8网 8网 6网 3网 2网 1网 7网 4网 5R6R5自治系统 AS
划分区域优点和缺点优点：减少了整个网络上的通信量。减少了需要维护的状态数量。缺点：交换信息的种类增多了。使 OSPF 协议更加复杂了。分层次划分区域的好处：使每一个区域内部交换路由信息的通信量大大减小，因而使 OSPF 协议能够用于规模很大的自治系统中。
其他特点对于不同类型的业务可计算出不同的路由。可实现多路径间的负载均衡（load balancing）。所有在 OSPF 路由器之间交换的分组都具有鉴别的功能。支持可变长度的子网划分和无分类编址 CIDR。32 位的序号，序号越大状态就越新。全部序号空间在 600 年内不会产生重复号。
问候 (Hello) 分组。数据库描述 (Database Description) 分组。链路状态请求 (Link State Request) 分组。链路状态更新 (Link State Update) 分组。链路状态确认 (Link State Acknowledgment)分组。 2. OSPF 的五种分组类型
OSPF 分组用 IP 数据报传送IP 数据报IP 数据报首部OSPF 分组OSPF 分组首部24 字节081631版    本路    由    器    标    识    符类    型分    组    长    度检   验   和鉴            别位鉴            别区    域    标    识    符鉴    别    类    型类型 1 至类型 5 的 OSPF 分组其 IP 数据报首部的协议字段值为 89
OSPF 工作过程1，确定邻站可达。相邻路由器每隔 10 秒钟要交换一次问候分组。若有 40 秒钟没有收到某个相邻路由器发来的问候分组，则可认为该相邻路由器是不可达的。2，同步链路状态数据库。同步：指不同路由器的链路状态数据库的内容是一样的。两个同步的路由器叫做完全邻接的 (fully adjacent) 路由器。不是完全邻接的路由器：它们虽然在物理上是相邻的，但其链路状态数据库并没有达到一致。
OSPF 工作过程3，更新链路状态。只要链路状态发生变化，路由器就使用链路状态更新分组，采用可靠的洪泛法向全网更新链路状态。为确保链路状态数据库与全网的状态保持一致，OSPF 还规定：每隔一段时间，如 30 分钟，要刷新一次数据库中的链路状态。OSPF 链路状态只涉及相邻路由器，与整个互联网的规模并无直接关系，因此当互联网规模很大时，OSPF 协议要比距离向量协议 RIP 好得多。OSPF 没有“坏消息传播得慢”的问题，收敛数度快。
OSPF 工作过程
更新报文tACK报文RRRRt1t2t3t4OSPF 使用可靠的洪泛法发送更新分组 
指定的路由器 DR 多点接入的局域网采用了指定的路由器 DR (designated router) 的方法，使广播的信息量大大减少。指定的路由器代表该局域网上所有的链路向连接到该网络上的各路由器发送状态信息。 
4.6.4  外部网关协议 BGP
4.6.4  外部网关协议 BGPBGP 是不同自治系统的路由器之间交换路由信息的协议。 BGP 较新版本是 2006 年 1 月发表的 BGP-4（BGP 第 4 个版本），即 RFC 4271 ~ 4278。 可以将 BGP-4 简写为 BGP。 
用于自治系统 AS 之间的路由选择。只能是力求选择出一条能够到达目的网络且比较好的路由（不能兜圈子），而并非要计算出一条最佳路由。互联网的规模太大，使得自治系统AS之间路由选择非常困难。自治系统AS之间的路由选择必须考虑有关策略。采用了路径向量 (path vector) 路由选择协议。1. 协议 BGP 的主要特点
BGP 发言者 (BGP speaker)对等 BGP 发言者（边界路由器）在 AS 之间交换信息AS1AS3AS2XBGP 发言者（边界路由器）BGP 发言者（边界路由器）前缀
eBGP 连接和 iBGP 连接在 AS 之间， BGP 发言者在半永久性 TCP 连接（端口号为179）上建立 BGP 会话(session)。这种连接又称为 eBGP 连接。在 AS 内部，任何相互通信的两个路由器之间必须有一个逻辑连接（也使用 TCP 连接）。AS 内部所有的路由器之间的通信是全连通的。这种连接常称为 iBGP 连接。eBGP (external BGP) 连接：运行 eBGP 协议，在不同 AS 之间交换路由信息。iBGP (internal BGP) 连接：运行 iBGP 协议， 在 AS 内部的路由器之间交换 BGP 路由信息。eBGP 连接AS1AS3AS2iBGP 连接eBGP 连接iBGP 连接iBGP 连接
IGP、iBGP 和 eBGP 的关系在 AS 内部运行：内部网关协议 IGP（可以是协议 OSPF 或 RIP）。协议 iBGP。在 AS 之间运行：协议 eBGP。IGPiBGPIGPiBGPIGPiBGPIGPiBGPeBGPeBGPeBGPAS1AS2AS3AS4
 eBGP 和 iBGP同一个协议 BGP（使用的报文类型、使用的属性、使用的状态机等都完全一样）。但它们在通报前缀时采用的规则不同：在 eBGP 连接的对等端得知的前缀信息，可以通报给一个 iBGP 连接的对等端。反过来也是可以的。但从 iBGP 连接的对等端得知的前缀信息，则不能够通报给另一个 iBGP 连接的对等端。
 eBGP 和 iBGPR3 从 eBGP 连接的对等端 R4 得到的前缀信息可以通报给 iBGP 连接的对等端 R1 或 R2。R3 从 iBGP 连接的对等端 R1 和 R2 得到的前缀信息可以通报给 eBGP 连接的对等端 R4。但 R3 从 iBGP 连接的对等端 R1 得到的前缀信息不允许再通报给另一个 iBGP 连接的对等端 R2。AS1AS2R3R4R2R1eBGP 连接iBGP 连接
BGP 路由信息BGP 路由 = [ 前缀, BGP属性 ] = [ 前缀, AS-PATH, NEXT-HOP ]前缀：指明到哪一个子网（用 CIDR 记法表示）。BGP 属性：最重要的两个属性是自治系统路径 AS-PATH 下一跳 NEXT-HOP。
BGP 路由信息AS2 可经 IP3a 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS3, IP3a]AS1AS3AS2R1dR3aR2aR1cR1bR1aR2cR2bR2dR3dR3bR3cIP2aIP3aIP3c
BGP 路由信息AS2 可经 IP3a 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS3, IP3a]路由 1：AS1 可经 IP2a 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS2 AS3, IP2a]AS1AS3AS2R1dR3aR2aR1cR1bR1aR2cR2bR2dR3dR3bR3cIP2aIP3aIP3c
BGP 路由信息AS2 可经 IP3a 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS3, IP3a]路由 1：AS1 可经 IP2a 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS2 AS3, IP2a]路由2：AS1 可经 IP3c 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS3, IP3c]AS1AS3AS2R1dR3aR2aR1cR1bR1aR2cR2bR2dR3dR3bR3cIP2aIP3aIP3c
BGP 路由信息AS2 可经 IP3a 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS3, IP3a]路由 1：AS1 可经 IP2a 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS2 AS3, IP2a]路由2：AS1 可经 IP3c 到前缀 X 的路由 = [前缀, AS-PATH, NEXT-HOP] = [X, AS3, IP3c]路由器 R1a 的转发表中，沿 BGP 路由 1 到达前缀 X 的项目是：           （匹配前缀X，下一跳路由器 R1b）或（匹配前缀X，转发接口 0）。AS1AS3AS2R1dR3aR2aR1cR1bR1aR2cR2bR2dR3dR3bR3cIP2aIP3aIP3c
3. 三种不同的自治系统 AS末梢 AS：不会把来自其他 AS 的分组再转发到另一个 AS。必须向所连接的 AS 付费。多归属 AS (multihomed AS)：同时连接到两个或两个以上的 AS。增加连接的可靠性。穿越 AS：为其他 AS 有偿转发分组。对等 AS：经过事先协商的两个 AS，彼此之间的发送或接收分组都不收费。
BGP 路由如何避免兜圈子？AS3 检查收到的 BGP 路由的 AS-PATH 中已经有了自己，立即删除掉这条路由，从而避免兜圈子路由的出现。请记住：在属性 AS-PATH 中，不允许出现相同的 AS 号。
4. BGP 的路由选择
本地偏好 (local preference) 值最高AS1AS5AS2R1dR1cR1bR1aIP2aAS1 选择通过路由器 R1d 到达 X 的 BGP 路由。AS4IP4aAS3[ X, AS4 AS5 , LOCAL-PREF = 100 , IP4a ][ X, AS2 AS3 AS5 , LOCAL-PREF = 200, IP2a ]
AS 跳数最小AS1 选择通过路由器 R1c 到达 X 的 BGP 路由。但事实上，分组在 AS4 中反而要经过更多次数的转发。说明协议 BGP 不存在真正的最佳路由选择。AS1AS5AS2R1dR1cR1bR1aIP2aAS4IP4aAS3[ X, AS4 AS5 , LOCAL-PREF = 100 , IP4a ][ X, AS2 AS3 AS5 , LOCAL-PREF = 100, IP2a ]
热土豆路由选择算法R1a 选择 R1c 作为离开 AS1 的最佳选择，其 BGP 转发表中对应的项目应当是：（匹配前缀 X，下一跳路由器 R1c）。R1b 选择 R1d 作为离开 AS1 的最佳选择，其 BGP 转发表中对应的项目应当是：（匹配前缀 X，下一跳路由器 R1d）。AS1AS5AS2R1dR1cR1bR1aIP2aAS4IP4a[ X, AS4 AS5 , LOCAL-PREF = 100 , IP4a ][ X, AS2 AS5 , LOCAL-PREF = 200, IP2a ]
AS 跳数最小[ X, AS-PATH, LOCAL-PREF = 100 ]AS1AS5AS2R1dR1cR1bR1aIP2aAS1 选择通过路由器 R1c 到达 X 的 BGP 路由。但事实上，分组在 AS4 中反而要经过更多次数的转发。说明协议 BGP 不存在真正的最佳路由选择。AS4IP4a[ X, AS-PATH, LOCAL-PREF = 100 ]AS3
5.  BGP-4 的四种报文
BGP 报文具有通用首部字节                 16                      2             1BGP 报文主体部分类 型长  度标       记TCP 首部BGP 报文BGP 报文通用首部IP 首部TCP 报文
4.6.5  路由器的构成路由器工作在网络层，用于互连网络。是互联网中的关键设备。路由器的主要工作：转发分组。把从某个输入端口收到的分组，按照分组要去的目的地（即目的网络），把该分组从路由器的某个合适的输出端口转发给下一跳路由器。
1. 路由器的结构课件制作人：谢希仁路由选择、管理。控制层面（软件）路由选择处理机路由选择协议路由表3输入端口3交换结构输入端口输出端口分组转发。数据层面（硬件）转发表分组处理输出端口……1113312222路由选择部分分组转发部分
“转发”和“路由选择”的区别
输入端口对线路上收到的分组的处理 
输出端口将交换结构传送来的分组发送到线路 物理层处理数据链路层处理网络层处理  分组排队   输出端口的处理向线路发送分组缓存管理交换结构
常用交换方法有三种：通过存储器、通过总线、通过纵横交换结构。2. 交换结构I1I3I2O1O2存储器I1I3I2O1O2I1I3I2O1O3(a) 通过存储器(c) 通过互连网络(b) 通过总线总线互连网络O3O3
(1) 当路由器的某个输入端口收到一个分组时，就用中断方式通知路由选择处理机。然后分组就从输入端口复制到存储器中。(2) 路由器处理机从分组首部提取目的地址，查找路由表，再将分组复制到合适的输出端口的缓存中。(3) 若存储器的带宽（读或写）为每秒 M 个分组，那么路由器的交换速率（即分组从输入端口传送到输出端口的速率）一定小于 M/2。通过存储器I1I3I2O1O2存储器(a) 通过存储器O3
(1) 数据报从输入端口通过共享的总线直接传送到合适的输出端口，而不需要路由选择处理机的干预。(2) 当分组到达输入端口时若发现总线忙，则被阻塞而不能通过交换结构，并在输入端口排队等待。 (3)因为每一个要转发的分组都要通过这一条总线，因此路由器的转发带宽就受总线速率的限制。通过存储器I1I3I2O1O2(b) 通过总线总线O3
(1) 它有 2N 条总线，控制交叉节点可以使 N 个输入端口和 N 个输出端口相连接。(2) 当输入端口收到一个分组时，就将它发送到水平总线上。(3) 若通向输出端口的垂直总线空闲，则将垂直总线与水平总线接通，把该分组转发到这个输出端口。若输出端口已被占用，分组在输入端口排队等待。特点：是一种无阻塞的交换结构，分组可以转发到任何一个输出端口，只要这个输出端口没有被别的分组占用。通过纵横交换结构 (crossbar switch fabric)I3I2O1O3(c) 通过互连网络互连网络常被称为互连网络 (interconnection network)。
4.7IP 多播4.7.1                                           IP 多播的基本概念4.7.2                                  在局域网上进行硬件多播4.7.3      网际组管理协议 IGMP 和多播路由选择协议
4.7.1  IP 多播的基本概念1988 年，Steve Deering 首次提出 IP 多播的概念。多播 (multicast)：以前曾译为组播。目的：更好地支持一对多通信。一对多通信：一个源点发送到许多个终点。
多播可大大节约网络资源共有 90 个主机接收视频节目R1R3R4R2视频服务器 M………30 个30 个30 个30 个30 个30 个90 个采用单播方式，向 90 台主机传送同样的视频节目需要发送 90 个单播
多播可大大节约网络资源多播组成员共有 90 个R1R3R4R2视频服务器 M1个1个1 个1个1个1个1 个采用多播方式，只需发送一次到多播组。路由器复制分组。局域网具有硬件多播功能，不需要复制分组。当多播组的主机数很大时（如成千上万个），采用多播方式就可明显地减轻网络中各种资源的消耗。多播多播多播………
在互联网上进行多播就叫做 IP 多播。互联网范围的多播要靠路由器来实现。能够运行多播协议的路由器称为多播路由器 (multicast router)。多播路由器也可以转发普通的单播 IP 数据报。从 1992 年起，在互联网上开始试验虚拟的多播主干网 MBONE (Multicast Backbone On the InterNEt)。 IP 多播
在 IP 多播数据报的目的地址需要写入多播组的标识符。多播组的标识符就是 IP 地址中的 D 类地址（多播地址）。	地址范围：224.0.0.0 ~ 239.255.255.255每一个 D 类地址标志一个多播组。多播 IP 地址多播地址只能用于目的地址，不能用于源地址。
多播数据报和一般的 IP 数据报的区别：目的地址：使用 D 类 IP 地址。协议字段 = 2，表明使用网际组管理协议 IGMP。尽最大努力交付，不保证一定能够交付多播组内的所有成员。对多播数据报不产生 ICMP 差错报文。在 PING 命令后面键入多播地址，将永远不会收到响应。多播数据报
4.7.2  在局域网上进行硬件多播IANA 拥有的以太网地址块的高 24 位为 00-00-5E。TCP/IP 协议使用的以太网地址块的范围是	从   00-00-5E-00-00-00 	到   00-00-5E-FF-FF-FF IANA 只拿出 01-00-5E-00-00-00 到 01-00-5E-7F-FF-FF （223 个地址）作为以太网多播地址。或者说，在 48 位的多播地址中，前 25 位都固定不变，只有后 23 位可用作多播。
D 类 IP 地址与以太网多播地址的映射关系 1110000000010000000001011110收到多播数据报的主机，还要在 IP 层对 IP 地址进行过滤，把不是本主机要接收的数据报丢弃。32： 1
4.7.3  网际组管理协议 IGMP 和多播路由选择协议网际组管理协议 IGMP (Internet Group Management Protocol)使多播路由器知道多播组成员信息（有无成员）。多播路由选择协议使多播路由器协同工作，把多播数据报用最小代价传送给多播组的所有成员。1.  IP 多播需要两种协议
IGMP 使多播路由器知道多播组成员信息 IGMP 协议是让连接在本地局域网上的多播路由器知道本局域网上是否有主机参加或退出了某个多播组。IGMP 不知道 IP 多播组包含的成员数，也不知道这些成员都分布在哪些网络上。
多播路由选择协议更为复杂多播组 M1(A, B, C)ABCDEGFN1N3RN2多播组 M2(D, E, F)路由器 R 不应当向网络 N3 转发多播组 M1 的分组，因为网络 N3 上没有多播组 M1 的成员。
多播路由选择协议更为复杂多播转发必须动态地适应多播组成员的变化（这时网络拓扑并未发生变化），因为每一台主机可以随时加入或离开一个多播组。多播路由器在转发多播数据报时，不能仅仅根据多播数据报中的目的地址，还要考虑这个多播数据报从什么地方来和要到什么地方去。 多播数据报可以由没有加入多播组的主机发出，也可以通过没有组成员的接入网络。 
1989 年公布的 RFC 1112（IGMPv1）已成为了互联网的标准协议。1997 年公布的 RFC 2236（IGMPv2，建议标准）对 IGMPv1 进行了更新。2002 年 10 月公布了 RFC 3376（IGMPv3，建议标准）。2.  网际组管理协议 IGMP
IGMP 使用 IP 数据报传递其报文在 IGMP 报文加上 IP 首部构成 IP 数据报。但 IGMP 也向 IP 提供服务。因此，不把 IGMP 看成是一个单独的协议，而是整个网际协议 IP 的一个组成部分。 
IGMP 工作可分为两个阶段第一阶段：加入多播组。第二阶段：探询组成员变化情况。
第一阶段：加入多播组当某个主机加入多播组时，该主机向多播组的多播地址发送 IGMP 报文，声明自己要成为该组的成员。本地的多播路由器收到 IGMP 报文后，将组成员关系转发给互联网上的其他多播路由器。
第二阶段：探询组成员变化情况本地多播路由器周期性地探询本地局域网上的主机，以便知道这些主机是否还继续是组的成员。只要对某个组有一个主机响应，那么多播路由器就认为这个组是活跃的。
第二阶段：探询组成员变化情况本地多播路由器周期性地探询本地局域网上的主机，以便知道这些主机是否还继续是组的成员。但一个组在经过几次的探询后仍然没有一个主机响应，则不再将该组的成员关系转发给其他的多播路由器。
IGMP 采用的一些具体措施，以避免增加大量开销所有通信都使用 IP 多播。只要有可能，都用硬件多播来传送。对所有的组只发送一个请求信息的询问报文。默认询问速率是每 125 秒发送一次。当同一个网络上连接有多个多播路由器时，能迅速和有效地选择其中的一个来探询主机的成员关系。
IGMP 采用的一些具体措施，以避免增加大量开销分散响应。在 IGMP 的询问报文中有一个数值 N，它指明一个最长响应时间（默认值为 10 秒）。当收到询问时，主机在 0 到 N 之间随机选择发送响应所需经过的时延。若一台主机同时参加了几个多播组，则主机对每一个多播组选择不同的随机数。对应于最小时延的响应最先发送。采用抑制机制。同一个组内的每一个主机都要监听响应，只要有本组的其他主机先发送了响应，自己就不再发送响应了。
3.  多播路由选择实际上就是要找出以源主机为根节点的多播转发树。不同的多播组对应于不同的多播转发树。同一个多播组，对不同的源点也会有不同的多播转发树。源点 S1源点 S2M 个源，N 个多播组，需要 MⅹN 棵以源为根的多播转发树。
转发多播数据报时使用三种方法：(1) 洪泛与剪除(2) 隧道技术 (tunneling)(3) 基于核心的发现技术3.  多播路由选择
(1) 洪泛与剪除适合于较小的多播组，所有组成员接入的局域网也是相邻接的。开始时，路由器转发多播数据报使用洪泛的方法（这就是广播）。为避免兜圈子，采用反向路径广播 RPB (Reverse Path Broadcasting) 的策略。
RPB 的要点：检查，转发R0 单播路由表R1R0R2检查数据报是否经最短路径传送来的
RPB 的要点：形成以源为根节点的多播转发树如果存在几条同样长度的最短路径，选择 IP 地址最小的。 最后就得出了以源为根节点的、用来转发多播数据报的多播转发树。
RPB 的要点：剪枝与嫁接剪枝：如果在多播转发树上的某个路由器发现它的下游树枝（即叶节点方向）已没有该多播组的成员，就把它和下游的树枝一起剪除。嫁接：当某个树枝有新增加的组成员时，可以再接入到多播转发树上。剪枝嫁接
源点R3R4R6R7R8R1R5R2转发多播数据报收到后即丢弃反向路径广播 RPB 和剪除 
(2) 隧道技术 (tunneling) 不支持多播   的网络隧 道R2R1隧道技术在多播中的应用网 N1 （支持多播）网 N2 （支持多播）隧道技术适用于多播组的位置在地理上很分散的情况。
(3) 基于核心的发现技术 对于多播组的大小在较大范围内变化时都适合。对每一个多播组 G 指定一个核心 (core) 路由器，并给出它的 IP 单播地址。核心路由器按照前面讲过的 2 种方法创建出对应于多播组 G 的转发树（核心路由器为根节点）。为一个多播组构建一棵转发树，而不是为每个（源，组）组合构建一棵转发树。构建转发树开销较小，扩展性较好。
(3) 基于核心的发现技术 如果有一个路由器 R1 向核心路由器发送数据报，那么它在途中经过的每一个路由器都要检查其内容。当数据报到达参加了多播组 G 的路由器 R2 时，R2 就处理这个数据报。如果 R1 发出的是一个多播数据报，其目的地址是 G 的组地址，R2 就向 G 的成员转发这个多播数据报。如果 R1 发出的数据报是一个请求加入多播组 G 的数据报，R2 就把这个信息加到它的路由中，并用隧道技术向 R1 转发每一个多播数据报的副本。 
几种多播路由选择协议距离向量多播路由选择协议 DVMRP (Distance Vector Multicast Routing Protocol)。互联网上使用的第一个多播路由选择协议。基于核心的转发树 CBT (Core Based Tree) 开放最短通路优先的多播扩展 MOSPF (Multicast Extensions to OSPF) 协议无关多播-稀疏方式 PIM-SM (Protocol Independent Multicast-Sparse Mode) 。唯一成为互联网标准的一个协议。协议无关多播-密集方式 PIM-DM (Protocol Independent Multicast-Dense Mode) 
4.8虚拟专用网  VPN 和网络地址转换  NAT4.8.1                                              虚拟专用网 VPN4.8.2                                           网络地址转换 NAT
4.8.1  虚拟专用网 VPN由于 IP 地址的紧缺，一个机构能够申请到的IP地址数往往远小于本机构所拥有的主机数。考虑到互联网并不很安全，一个机构内也并不需要把所有的主机接入到外部的互联网。如果一个机构内部的计算机通信也是采用 TCP/IP 协议，那么这些仅在机构内部使用的计算机就可以由本机构自行分配其 IP 地址。
本地地址：仅在机构内部使用的 IP 地址，可以由本机构自行分配，而不需要向互联网的管理机构申请。全球地址：全球唯一的 IP 地址，必须向互联网的管理机构申请。 问题：如何区分本地地址和全球地址？解决：RFC 1918 指明了一些专用地址 (private address)。本地地址与全球地址专用地址只能用作本地地址，而不能用作全球地址。互联网中的所有路由器对目的地址是专用地址的数据报一律不进行转发。
RFC 1918 指明的专用 IP 地址三个专用 IP 地址块：(1) 10.0.0.0/8(2) 172.16.0.0/12(3) 192.168.0.0/16A类，从 10.0.0.0 到 10.255.255.255。1 个。B类，从 172.16.0.0 到 172.31.255.255。连续 16 个。C类，从 192.168.0.0 到 192.168.255.255。连续 256 个。
采用专用 IP 地址的互连网络称为专用互联网或本地互联网，或更简单些，就叫做专用网。专用 IP 地址也叫做可重用地址 (reusable address)。专用网
利用公用互联网作为本机构各专用网之间的通信载体，这样的专用网又称为虚拟专用网 VPN (Virtual Private Network)。专用网：指这种网络是为本机构的主机用于机构内部的通信，而不是用于和网络外非本机构的主机通信。虚拟：表示实际上没有使用通信专线，只是在效果上和真正的专用网一样。虚拟专用网 VPN
如果专用网不同网点之间的通信必须经过公用的互联网，但又有保密的要求，那么所有通过互联网传送的数据都必须加密。必须为每一个场所购买专门的硬件和软件，并进行配置，使每一个场所的 VPN 系统都知道其他场所的地址。虚拟专用网 VPN 的构建
用隧道技术实现虚拟专用网部门 A网络互联网部门 B网络R1R2隧道使用隧道技术本地地址本地地址全球地址网络地址 = 10.1.0.0（本地地址）网络地址 = 10.2.0.0（本地地址）隧道技术
部门 A网络互联网部门 B网络R1R2隧道使用隧道技术用隧道技术实现虚拟专用网
内联网 (intranet)：同一个机构的内部网络所构成的 VPN。外联网 (extranet)：一个机构和某些外部机构共同建立的 。远程接入 VPN (remote access VPN)：允许外部流动员工通过接入 VPN 建立 VPN 隧道访问公司内部网络，好像就是使用公司内部的本地网络访问一样。VPN 类型
4.8.2   网络地址转换 NAT问题：在专用网上使用专用地址的主机如何与互联网上的主机通信（并不需要加密）？解决：再申请一些全球 IP 地址。但这在很多情况下是不容易做到的。采用网络地址转换 NAT。这是目前使用得最多的方法。
1994 年提出。需要在专用网连接到互联网的路由器上安装 NAT 软件。装有 NAT 软件的路由器叫做 NAT路由器，它至少有一个有效的外部全球 IP 地址。所有使用本地地址的主机在和外界通信时，都要在 NAT 路由器上将其本地地址转换成全球 IP 地址，才能和互联网连接。 网络地址转换 NAT (Network Address Translation)
网络地址转换的过程NAT路由器专用网 192.168.0.0/16互联网192.168.0.3213.18.2.4全球 IP 地址172.38.1.5 A192.168.0.4B
在内部主机与外部主机通信时，在 NAT 路由器上发生了两次地址转换：离开专用网时：替换源地址，将内部地址替换为全球地址。进入专用网时：替换目的地址，将全球地址替换为内部地址。网络地址转换的过程NAT 地址转换表举例
当 NAT 路由器具有 n 个全球 IP 地址时，专用网内最多可以同时有 n 台主机接入到互联网。可以使专用网内较多数量的主机轮流使用 NAT 路由器有限数量的全球 IP 地址。网络地址转换 NAT通过 NAT 路由器的通信必须由专用网内的主机发起，因此，专用网内部的主机不能充当服务器用。
NAT 并不能节省 IP 地址。NAPT 可以使多台拥有本地地址的主机，共用一个 全球 IP 地址，同时和互联网上的不同主机进行通信。使用运输层端口号的 NAT 叫做网络地址与端口号转换 NAPT (Network Address and Port Translation)，而不使用端口号的 NAT 就叫做传统的 NAT (traditional NAT)。网络地址与端口号转换 NAPT
NAPT 地址转换表NAPT 地址转换表举例NAPT 把专用网内不同的源 IP 地址都转换为相同的全球 IP 地址，将 TCP 源端口号转换为新的 TCP 端口号（互不相同）。收到从互联网发来的应答时，从 IP 数据报的数据部分找出运输层端口号，从 NAPT 转换表中找到正确的目的主机。
4.9多协议标签交换 MPLS4.9.1                                           MPLS 的工作原理4.9.2                                 MPLS 首部的位置与格式4.9.3                                               新一代的 MPLS
01S1S2S30S1 的转发表标签   转发接口   0           1   1           0   2           1   3           14.9  多协议标签交换 MPLSMPLS (MultiProtocol Label Switching)：互联网建议标准。多协议：在 MPLS 的上层可以采用多种协议。标签：MPLS 利用面向连接技术，使每个分组携带一个叫做标签 (label) 的小整数。标签交换路由器用标签值检索转发表，实现分组的快速转发。
MPLS 特点MPLS 并没有取代 IP，而是作为一种 IP 增强技术。特点：支持面向连接的服务质量；支持流量工程，平衡网络负载；有效地支持虚拟专用网 VPN。
当网络很大时，查找路由表要花费很多时间。在出现突发通信时，缓存会溢出，引起分组丢失、传输时延增大和服务质量下降。传统 IP 分组的转发4.9.1  MPLS 的工作原理
MPLS 特点：在 MPLS 域的入口处，给每一个 IP 数据报打上固定长度标签。对打上标签的 IP 数据报在第二层（链路层）用硬件进行转发。采用硬件技术对打上标签的 IP 数据报进行转发就称为标签交换。可以使用多种数据链路层协议，如 PPP、以太网、ATM 以及帧中继等。1.  MPLS 基本工作过程
MPLS 协议的基本原理普通 IP 分组普通路由器标签交换路由器 LSR打上标签的分组
MPLS 域MPLS 域 (MPLS domain) ：指该域中有许多彼此相邻的路由器，并且所有的路由器都是支持 MPLS 技术的标记交换路由器 LSR (Label Switching Router)。LSR 同时具有标记交换和路由选择这两种功能。标记交换功能是为了快速转发，路由选择功能是为了构造转发表。
MPLS 的基本工作过程找出标签交换路径 LSP。各 LSR 使用标签分配协议 LDP (Label Distribution Protocol) 交换报文，找出和标签相对应的标签交换路径 LSP (Label Switched Path)。整个标签交换路径就像一条虚连接一样。打标签，然后转发。入口节点 (ingress node) 给进入 MPLS 域的 IP 数据报打上标签（实际上是插入一个 MPLS 首部），并按照转发表把它转发给下一个 LSR。以后的所有 LSR 都按照标签进行转发。给 IP 数据报打标签的过程叫做分类 (classification)。
MPLS 的基本工作过程标签对换。一个标签仅在两个 LSR 之间才有意义。LSR 要做两件事：转发，更新标记。更新标记：把入标记更换成为出标记。称之为标签对换 (label swapping)。转发表项目含义：从入接口 0 收到一个入标签为 3 的 IP 数据报，转发时，应当把该 IP 数据报从出接口 1 转发出去，同时把标签对换为 1。
MPLS 的基本工作过程去除标签。当分组离开 MPLS 域时，MPLS 出口节点 (egress node) 把分组的标签去除。把 IP 数据报交付给非 MPLS 的主机或路由器。这种“由入口 LSR 确定进入 MPLS 域以后的转发路径”称为显式路由选择 (explicit routing)与互联网中通常使用的“每一个路由器逐跳进行路由选择”有着很大的区别。
给 IP 数据报打标签的过程叫做分类 (classification)。第三层（网络层）分类：只使用 IP 首部中的源和目的 IP 地址等。大多数运营商实现了第四层（运输层）分类：除了要检查 IP 首部外，运输层还要检查 TCP 或 UDP 端口号。有些运营商则实现了第五层（应用层）分类：进一步地检查数据报的内部并考虑其有效载荷。2. 转发等价类 FEC
转发等价类 FEC (Forwarding Equivalence Class) ：路由器按照同样方式对待的分组的集合。按照同样方式对待含义：从同样接口转发到同样的下一跳地址，并且具有同样服务类别和同样丢弃优先级等。例如：(1) 目的 IP 地址与某一个特定 IP 地址的前缀匹配的 IP 数据报；(2) 所有源地址与目的地址都相同的 IP 数据报；(3) 具有某种服务质量需求的 IP 数据报。2. 转发等价类 FEC
2. 转发等价类 FEC
FEC 用于负载平衡自定义的 FEC 可以更好地管理网络的资源。这种均衡网络负载的做法也称为流量工程 TE (Traffic Engineering) 或通信量工程。
4.9.2  MPLS 首部的位置与格式MPLS 不要求下层的网络都使用面向连接的技术。MPLS 采用封装技术：在把 IP 数据报封装成以太网帧之前，先要插入一个 MPLS 首部。从层次的角度看，MPLS 首部处在第二层和第三层之间。
MPLS 首部的格式给 IP 数据报打上标记就是在以太网帧首部和 IP 数据报首部之间插入一个 4 字节的 MPLS 首部。
MPLS 首部的格式(1) 标签值（占 20 位），可以同时容纳高达 220 个流（即 1048576 个流）。
MPLS 首部的格式(2) 试验（占 3 位）。保留用作试验。
MPLS 首部的格式(3) 栈S（占 1 位）。在有“标签栈”时使用。
MPLS 首部的格式(4) 生存时间 TTL（占 8 位），用来防止 MPLS 分组在 MPLS 域中兜圈子。
4.9.3  新一代的 MPLSMPLS 存在的问题：控制协议（如 LDP）比较复杂，扩展性差，运行维护较困难。协议 LDP 无法做到基于时延或带宽等要求的流量调度。为灵活地选择流量的转发路径，还需要再使用资源预留协议 RSVP。但是：RSVP 的信令非常复杂，每个节点都要维护一个庞大的链路信息数据库。RSVP 只会选择一条最优路径，不支持等价多路径路由选择 ECMP (Equal-Cost Multipath Routing) 。
新一代的 MPLS：段路由选择协议 SR (Segment Routing)。段 (segment)：标签，是转发指令的一种标识符。SR 工作原理：基于标签交换，但不需要使用协议 LDP。由源节点为发送的报文指定路径，并将路径转换成有序的段列表 (Segment List)，即 MPLS 标签栈，它被封装在分组首部。网络中的其他节点就执行首部中的指令（即标签）进行转发。段路由选择协议 SR 
即 SDN 控制器。负责：收集并掌握全网的拓扑信息和链路状态信息，计算出分组应传送的整个路径。给分组分配 SR 标签，指明分组从源点到终点的路径。控制器SR 向 IPv6 演进，这就是 SRv6。SRv6 直接利用 IPv6 字段作为标签寻址 (Locator)。
4.10软件定义网络 SDN 简介4.10.1                               SDN 与协议 OpenFlow4.10.2                                              SDN 体系结构4.10.3                                                 SDN 控制器
4.10   软件定义网络 SDN 简介软件定义网络 SDN（Software Defined Network）由斯坦福大学N. McKeown 于 2009 年首先提出。谷歌于 2010 ~ 2012 年的数据中心网络 B4 进行了运行验证。优点：提高网络带宽利用率；网络运行更加稳定；管理更加高效简化；运行费用明显降低。
注意：SDN 不是 OpenFlow。SDN 未规定必须使用 OpenFlow。4.10.1  SDN 与 协议 OpenFlow
协议 OpenFlow
OpenFlow 数据层面：匹配 + 动作数据层面的分组交换机或 OpenFlow 交换机完成“匹配 + 动作”。称为广义转发。
OpenFlow 数据层面：流表流表 (flow table)：规定“匹配 + 动作”。流：穿过网络的一种分组序列，而在此序列中的分组都共享分组首部某些字段的值。每个 OpenFlow 交换机有一个或一个以上的流表。每个流表可以包括多个流表项 (flow entry)。
流表由远程控制器管理SDN 远程控制器通过一个安全信道，使用 OpenFlow 协议来管理 OpenFlow 交换机中的流表。OpenFlow 交换机安全信道流表SDN 远程控制器OpenFlow 协议
流表结构以太网                     VLAN                                   IP                                  TCP/UDP入端口源地址   目的地址    类型   ID    优先级    源地址    目的地址    协议   服务类型    源端口    目的端口链路层网络层运输层首部字段值        计数器           动作首部字段值        计数器           动作首部字段值        计数器           动作流表匹配字段(1) 首部字段值：一组字段（12 个），用来使入分组的对应首部与之相匹配。匹配不上的分组被丢弃，或发送到远程控制器做更多的处理。三个字段：首部字段值（匹配字段）计数器动作. . . . . . . . . 
流表结构以太网                     VLAN                                   IP                                  TCP/UDP入端口源地址   目的地址    类型   ID    优先级    源地址    目的地址    协议   服务类型    源端口    目的端口链路层网络层运输层首部字段值        计数器           动作首部字段值        计数器           动作首部字段值        计数器           动作流表匹配字段(2) 计数器：一组计数器，可包括已经与该表项匹配的分组数量，以及从该表项上次更新到现在经历的时间。三个字段：首部字段值（匹配字段）计数器动作. . . . . . . . . 
流表结构以太网                     VLAN                                   IP                                  TCP/UDP入端口源地址   目的地址    类型   ID    优先级    源地址    目的地址    协议   服务类型    源端口    目的端口链路层网络层运输层首部字段值        计数器           动作首部字段值        计数器           动作首部字段值        计数器           动作流表匹配字段(3) 动作：一组动作。当分组匹配某个流表项时，把分组转发到指明的端口，或丢弃该分组，或把分组进行复制后再从多个端口转发出去，或重写分组的首部字段（第二、三和四层的首部字段）等。三个字段：首部字段值（匹配字段）计数器动作. . . . . . . . . 
例子OpenFlow 控制器S1S3S210.2.0.410.2.0.310.1.0.110.1.0.210.3.0.510.3.0.6111222333444控制层面数据层面
例子：简单转发转发规则：源：H5 或 H6 目的：H3 或 H4 路径：S3  S1  S2。S3 流表S2 流表S1 流表
例子：负载均衡转发规则：从 H3 发往主机 10.1.*.* 的分组，其转发路径为 S2  S1 。从 H4 发往主机 10.1.*.* 的分组，其转发路径为 S2  S3  S1 。S2 流表
例子：防火墙转发规则：S2 中设置了防火墙。此防火墙的作用是仅仅接收来自与 S3 相连的主机所发送的分组。S2 流表可见：广义转发具有多样性和灵活性。其优点是显而易见的。
4.10.2  SDN 体系结构网络控制应用程序SDN 控制器（网络操作系统）路由选择接入控制负载均衡···南向 API（例如 OpenFlow）北向 API（例如 GUI，Java，Python，APP）控制层面数据层面SDN 控制的交换机
SDN 体系结构的四个关键特征
SDN 与传统网络的差别
4.10.3  SDN 控制器完成 SDN 控制器与受控网络设备之间的通信。通信层与数据层面的接口叫做南向接口，基本上采用 OpenFlow。
4.10.3  SDN 控制器完成核心功能。管理和维护链路、主机、交换机等网络状态；确定和维护流表等。
4.10.3  SDN 控制器SDN 控制器与网络控制应用程序交互的接口称为北向接口。该 API 接口允许网络控制应用程序对状态管理层里的网络状态和流表进行读写操作。
结束
第 5 章   运 输 层主讲人：熊曾刚 教授
计算机网络体系结构OSI 的七层协议体系结构TCP/IP 的四层协议体系结构(a)(b)(c)五层协议的体系结构
5.1                                            运输层协议概述5.2                                    用户数据报协议 UDP 5.3                                传输控制协议 TCP 概述5.4                                     可靠传输的工作原理5.5                                 TCP 报文段的首部格式5.6                                     TCP 可靠传输的实现5.7                                           TCP 的流量控制5.8                                           TCP 的拥塞控制5.9                                    TCP 的运输连接管理
5.1.1                                     进程之间的通信5.1.2                           运输层的两个主要协议5.1.3                                         运输层的端口5.1运输层协议概述
5.1.1   进程之间的通信物理层数据链路层网络层运输层应用层
运输层的作用
屏蔽作用运输层向高层用户屏蔽了下面网络核心的细节（如网络拓扑、所采用的路由选择协议等），使应用进程看见的就是好像在两个运输层实体之间有一条端到端的逻辑通信信道。
可靠信道与不可靠信道应用层运输层全双工可靠信道使用面向连接的协议，如 TCP。接收进程发送进程数据数据？接收进程数据使用无连接的协议，如 UDP。不可靠信道发送进程数据
5.1.2   运输层的两个主要协议互联网的正式标准：用户数据报协议 UDP (User Datagram Protocol)传输控制协议 TCP (Transmission Control Protocol)
运输协议数据单元 两个对等运输实体在通信时传送的数据单位叫作运输协议数据单元 TPDU (Transport Protocol Data Unit)。TCP 传送的数据单位协议是 TCP 报文段 (segment)。UDP 传送的数据单位协议是 UDP 报文或用户数据报。 
UDP 与 TCP 的区别
使用 UDP 和 TCP 的典型应用和应用层协议IPTCPUDP运输层网络层
5.1.3   运输层的端口复用：应用进程都可以通过运输层再传送到 IP 层（网络层）。如何指明各应用进程？分用：运输层从 IP 层收到发送给应用进程的数据后，必须分别交付给指明的各应用进程。
需要考虑的问题 进程的创建和撤销都是动态的，因此发送方几乎无法识别其他机器上的进程。我们往往需要利用目的主机提供的功能来识别终点，而不需要知道具体实现这个功能的进程是哪一个。有时我们会改换接收报文的进程，但并不需要通知所有的发送方。
端口号 (protocol port number)解决方法：在运输层使用协议端口号 (protocol port number)，或通常简称为端口 (port)。把端口设为通信的抽象终点。
软件端口与硬件端口
TCP/IP 运输层端口的标志端口用一个 16 位端口号进行标志，允许有 65,535 个不同的端口号。端口号只具有本地意义，只是为了标志本计算机应用层中的各进程。在互联网中，不同计算机的相同端口号没有联系。由此可见，两个计算机中的进程要互相通信，不仅必须知道对方的端口号，而且还要知道对方的 IP 地址。
两大类、三种类型的端口01023102449,15149,15265,535服务器端使用的端口号客户端使用的端口号熟知端口（全球通用端口号）（IANA 负责分配）登记端口（在 IANA 登记）短暂端口（通信结束后，被系统收回）
常用的熟知端口21   20162111
5.2.1                                              UDP 概述5.2.2                                    UDP 的首部格式5.2用户数据报协议 UDP
5.2.1  UDP 概述UDP 只在 IP 的数据报服务之上增加了一些功能：复用和分用差错检测
UDP 的主要特点无连接。发送数据之前不需要建立连接。使用尽最大努力交付。即不保证可靠交付。面向报文。UDP 一次传送和交付一个完整的报文。 没有拥塞控制。网络出现的拥塞不会使源主机的发送速率降低。很适合多媒体通信的要求。 支持一对一、一对多、多对一、多对多等交互通信。首部开销小，只有 8 个字节。UDP 通信的特点：简单方便，但不可靠。
UDP 是面向报文的发送方 UDP 对应用层交下来的报文，既不合并，也不拆分，按照样发送。接收方 UDP 对 IP 层交上来的 UDP 用户数据报，去除首部后就原封不动地交付上层的应用进程，一次交付一个完整的报文。
UDP 是面向报文的应用程序必须选择合适大小的报文。若报文太长，IP 层在传送时可能要进行分片，降低 IP 层的效率。若报文太短，会使 IP 数据报的首部的相对长度太大，降低 IP 层的效率。
UDP 通信和端口号的关系复用：将 UDP 用户数据报组装成不同的 IP 数据报，发送到互联网。分用：根据 UDP 用户数据报首部中的目的端口号，将数据报分别传送到相应的端口，以便应用进程到端口读取数据。多对一的通信
UDP 通信和端口号的关系H2复用：将 UDP 用户数据报组装成不同的 IP 数据报，发送到互联网。分用：根据 UDP 用户数据报首部中的目的端口号，将数据报分别传送到相应的端口，以便应用进程到端口读取数据。一对多的通信
5.2.2  UDP 的首部格式(1) 源端口：源端口号。在需要对方回信时选用。不需要时可用全 0。(2) 目的端口：目的端口号。终点交付报文时必须使用。(3) 长度：UDP 用户数据报的长度，其最小值是 8（仅有首部）。(4) 检验和：检测 UDP 用户数据报在传输中是否有错。有错就丢弃。数         据首  部IP 数据报发送在前2 个字段：首部，数据。数         据首  部UDP 用户数据报
用户数据报 UDP 有两个字段：数据字段和首部字段。首部字段有 8 个字节，由 4 个字段组成，每个字段都是 2 个字节。 伪首部源端口目的端口长  度检验和数         据首  部UDP长度源 IP 地址目的 IP 地址017IP 数据报字节44112122222字节发送在前数         据首  部UDP 用户数据报
UDP 基于端口的分用接收方 UDP 根据首部中的目的端口号，把报文通过相应的端口上交给应用进程。如果接收方 UDP 发现收到的报文中的目的端口号不正确（即不存在对应于该端口号的应用进程），就丢弃该报文，并由 ICMP 发送“端口不可达”差错报文给发送方。
在计算检验和时，临时把 12 字节的“伪首部”和 UDP 用户数据报连接在一起。伪首部仅仅是为了计算检验和。伪首部源端口目的端口长  度检验和数         据首  部UDP长度源 IP 地址目的 IP 地址017IP 数据报字节44112122222字节发送在前UDP 用户数据报首  部数         据
计算 UDP 检验和的例子UDP 的检验和是把首部和数据部分一起都检验。全 0    17          15    1087            13      15             全 0数据   数据    数据   数据数据   数据    数据   全 0
5.3.1                                 TCP 最主要的特点5.3.2                                           TCP 的连接5.3传输控制协议 TCP 概述
5.3.1  TCP 最主要的特点TCP 是面向连接的运输层协议，在无连接的、不可靠的 IP 网络服务基础之上提供可靠交付的服务。为此，在 IP 的数据报服务基础之上，增加了保证可靠性的一系列措施。
5.3.1  TCP 最主要的特点TCP 是面向连接的运输层协议。每一条 TCP 连接只能有两个端点 (endpoint)，每一条 TCP 连接只能是点对点的（一对一）。 TCP 提供可靠交付的服务。TCP 提供全双工通信。面向字节流TCP 中的“流”(stream) 指的是流入或流出进程的字节序列。面向字节流：虽然应用程序和 TCP 的交互是一次一个数据块，但 TCP 把应用程序交下来的数据看成仅仅是一连串无结构的字节流。
TCP 不保证接收方应用程序所收到的数据块和发送方应用程序所发出的数据块具有对应大小的关系。但接收方应用程序收到的字节流必须和发送方应用程序发出的字节流完全一样。TCP 面向流的概念
TCP 面向流的概念
TCP 面向流的概念端口…TCP…TCP接收缓存发送缓存端口发送端接收端向发送缓存写入数据块从接收缓存读取数据块应用进程应用进程TCP 不关心应用进程一次把多长的报文发送到 TCP 缓存。TCP 根据对方给出的窗口值和当前网络拥塞程度来决定一个报文段应包含多少个字节，形成 TCP 报文段。TCP 连接（虚连接，逻辑连接）报文段报文段报文段…
5.3.2  TCP 的连接TCP 把连接作为最基本的抽象。端口服务器客户TCPTCP客户每一条 TCP 连接有两个端点。TCP连接套接字TCP 连接的端点：套接字 (socket) 或插口。
套接字 (socket)套接字 socket = (IP地址 : 端口号)                   (5-1)例如：套接字 socket = (192.169.1.20 : 2028)
TCP 连接，IP 地址，套接字TCP 连接就是由协议软件所提供的一种抽象。TCP 连接的端点是抽象的套接字，即（IP 地址：端口号）。同一个 IP 地址可以有多个不同的 TCP 连接。同一个端口号也可以出现在多个不同的 TCP 连接中。
Socket 有多种不同的意思应用编程接口  API  称为 socket API, 简称为 socket。socket API 中使用的一个函数名也叫作 socket。调用 socket 函数的端点称为 socket。调用 socket 函数时其返回值称为 socket 描述符，可简称为 socket。在操作系统内核中连网协议的 Berkeley 实现，称为 socket 实现。 
5.4.1                                           停止等待协议5.4.2                                        连续 ARQ 协议5.4可靠传输的工作原理
IP 网络提供的是不可靠的传输
理想传输条件的特点传输信道不产生差错。不管发送方以多快的速度发送数据，接收方总是来得及处理收到的数据。在理想传输条件下，不需要采取任何措施就能够实现可靠传输。但实际网络都不具备理想传输条件。必须使用一些可靠传输协议，在不可靠的传输信道实现可靠传输。
5.4.1  停止等待协议每发送完一个分组就停止发送，等待对方的确认。在收到确认后再发送下一个分组。全双工通信的双方既是发送方也是接收方。假设仅考虑 A 发送数据，而 B 接收数据并发送确认。因此 A 叫做发送方，而 B 叫做接收方。
1. 无差错情况A 发送完分组 M1 后就暂停发送，等待 B 的确认 (ACK)。B 收到 M1 向 A 发送  ACK。A 在收到了对 M1 的确认后，就再发送下一个分组  M2。确认 M1确认 M2AB
两种情况：B 接收 M1 时检测出了差错，就丢弃 M1，其他什么也不做（不通知 A 收到有差错的分组）。M1 在传输过程中丢失了，这时 B 当然什么都不知道，也什么都不做。在这两种情况下，B 都不会发送任何信息。2. 出现差错
问题：A 如何知道 B 是否正确收到了 M1 呢？解决方法：超时重传A 为每一个已发送的分组设置一个超时计时器。A 只要在超时计时器到期之前收到了相应的确认，就撤销该超时计时器，继续发送下一个分组 M2 。若 A 在超时计时器规定时间内没有收到 B 的确认，就认为分组错误或丢失，就重发该分组。2. 出现差错
2. 出现差错分组错误AB丢弃超时重传AB分组丢失超时重传确认 M1确认 M1
3. 确认丢失和确认迟到确认丢失若 B 所发送的对 M1 的确认丢失了，那么 A 在设定的超时重传时间内将不会收到确认，因此 A 在超时计时器到期后重传 M1。假定 B 正确收到了 A 重传的分组 M1。这时 B 应采取两个行动：(1) 丢弃这个重复的分组 M1，不向上层交付。(2) 向 A 发送确认。
3. 确认丢失和确认迟到确认迟到B 对分组 M1 的确认迟到了，因此 A 在超时计时器到期后重传 M1。B 会收到重复的 M1，丢弃重复的 M1，并重传确认分组。A 会收到重复的确认。对重复的确认的处理：丢弃。
3. 确认丢失和确认迟到AB确认丢失超时重传AB确认迟到超时重传重复 ACK1，丢弃等待 ACK2 重复，丢弃确认 M1 3. 确认丢失和确认迟到重复，丢弃确认 M1 确认 M1确认 M1发送下一个
4. 信道利用率优点：简单。缺点：信道利用率太低。TDRTTATD + RTT + TAB分组确认tt分组确认当往返时间 RTT 远大于分组发送时间 TD 时，信道的利用率会非常低。
停止等待协议要点停止等待。发送方每次只发送一个分组。在收到确认后再发送下一个分组。暂存：在发送完一个分组后，发送方必须暂存已发送的分组的副本，以备重发。编号。对发送的每个分组和确认都进行编号。超时重传。发送方为发送的每个分组设置一个超时计时器。若超时计时器超时位收到确认，发送方会自动超时重传分组。超时计时器的重传时间应当比数据在分组传输的平均往返时间更长一些，防止不必要的重传。简单，但信道利用率太低。
由于信道上一直有数据不间断地传送，流水线传输可获得很高的信道利用率。 流水线传输：在收到确认之前，发送方连续发出多个分组。提高传输效率：流水线传输连续 ARQ 协议和滑动窗口协议采用流水线传输方式。
5.4.2   连续 ARQ 协议发送窗口：发送方维持一个发送窗口，位于发送窗口内的分组都可被连续发送出去，而不需要等待对方的确认。发送窗口滑动：发送方每收到一个确认，就把发送窗口向前滑动一个分组的位置。累积确认：接收方对按序到达的最后一个分组发送确认，表示：到这个分组为止的所有分组都已正确收到了。
(b) 收到一个确认后，发送窗口向前滑动发送窗口
累积确认M3 正确M4 正确M5 正确ACK1 确认 M0，将 M0 提交给上层协议或用户ACK2 确认 M1，将 M1 提交给上层协议或用户M2 正确ACK5 为累积确认，表示 M5 及之前的 M2、M3、M4 都正确。将M2、M3、M4、M5提交给上层协议或用户
累积确认连续 ARQ 协议采用 Go-back-N（回退N）。Go-back-N（回退N）：表示需要再退回来重传已发送过的 N 个分组。当通信线路质量不好时，连续 ARQ 协议会带来负面的影响。
TCP 虽然是面向字节流的，但 TCP 传送的数据单元却是报文段。一个 TCP 报文段分为首部和数据两部分，而 TCP 的全部功能都体现在它首部中各字段的作用。TCP 报文段首部的前 20 个字节是固定的，后面有 4n 字节是根据需要而增加的选项 (n 是整数)。因此 TCP 首部的最小长度是 20 字节。5.5  TCP 报文段的首部格式
TCP首部20 字节的固定首部目  的  端  口数据偏移检   验   和选    项    （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FIN32 位SYNRSTPSHACKURG填    充TCP 数据部分TCP 首部TCP 报文段IP 数据报的 数据部分IP 首部发送在前5.5  TCP 报文段的首部格式IP 数据报TCP首部的长度是 4n 字节（n 是整数）。TCP 首部的最小长度是 20 字节。
TCP 首部20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充源端口和目的端口：各占 2 字节。端口是运输层与应用层的服务接口。运输层的复用和分用功能通过端口实现。 
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充序号：占 4 字节。TCP 连接中传送的数据流中的每一个字节都有一个序号。序号字段的值则指的是本报文段所发送的数据的第一个字节的序号。 TCP 首部
现有 5000 个字节的数据。假设报文段的最大数据长度为 1000 个字节，初始序号为 1001。报文段 1 序号 = 1001 （数据字节序号：1001 ~ 2000）报文段 2 序号 = 2001 （数据字节序号：2001 ~ 3000）报文段 3 序号 = 3001 （数据字节序号：3001 ~ 4000）报文段 4 序号 = 4001 （数据字节序号：4001 ~ 5000）报文段 5 序号 = 5001 （数据字节序号：5001 ~ 6000）
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充确认号：占 4 字节，是期望收到对方的下一个报文段的数据的第一个字节的序号。 TCP 首部记住：若确认号 = N，则表明：到序号 N – 1 为止的所有数据都已正确收到。
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充数据偏移（即首部长度）：占 4 位，指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。单位是 32 位字（以 4 字节为计算单位）。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充保留：占 6 位，保留为今后使用，但目前应置为 0。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充紧急 URG：控制位。当 URG = 1 时，表明紧急指针字段有效，告诉系统此报文段中有紧急数据，应尽快传送 (相当于高优先级的数据)。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充确认 ACK：控制位。只有当 ACK =1 时，确认号字段才有效。当 ACK =0 时，确认号无效。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充推送 PSH (PuSH) ：控制位。接收 TCP 收到 PSH = 1 的报文段后，就尽快（即“推送”向前）交付接收应用进程，而不再等到整个缓存都填满后再交付。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充复位 RST (ReSeT) ：控制位。当 RST=1 时，表明 TCP 连接中出现严重差错（如主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充同步 SYN (SYNchronization) ：控制位。同步 SYN = 1 表示这是一个连接请求或连接接受报文。 当 SYN = 1，ACK = 0 时，表明这是一个连接请求报文段。当 SYN = 1，ACK = 1 时，表明这是一个连接接受报文段。TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充终止 FIN (FINish) ：控制位。用来释放一个连接。FIN=1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充窗口：占 2 字节。窗口值告诉对方：从本报文段首部中的确认号算起，接收方目前允许对方发送的数据量（以字节为单位）。TCP 首部记住：窗口字段明确指出了现在允许对方发送的数据量。窗口值经常在动态变化。
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充检验和：占 2 字节。检验和字段检验的范围包括首部和数据这两部分。在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部。TCP 首部
在计算检验和时，临时把 12 字节的“伪首部”和 TCP 报文段连接在一起。伪首部仅仅是为了计算检验和。TCP 首部伪首部首  部TCP 总长度源 IP 地址目的 IP 地址06字节4411212字节发送在前TCP 报文段首  部IP 数据报数         据数         据
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充紧急指针：占 2 字节。在 URG = 1时，指出本报文段中的紧急数据的字节数（紧急数据结束后就是普通数据），指出了紧急数据的末尾在报文段中的位置。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充选项：长度可变，最长可达 40 字节。 TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充填充：使整个 TCP 首部长度是 4 字节的整数倍。TCP 首部
20字节固定首部目  的  端  口数据偏移检   验   和选    项  （长  度  可  变）源  端  口序   号紧   急   指   针窗   口确    认    号保   留FINSYNRSTPSHACKURG填    充选项：长度可变，最长可达 40 字节。—— 长度可变。TCP 最初只规定了一种选项，即最大报文段长度 MSS。MSS 告诉对方 TCP：“我的缓存所能接收的报文段的数据字段的最大长度是 MSS 个字节。” MSS (Maximum Segment Size)是 TCP 报文段中的数据字段的最大长度。数据字段加上 TCP 首部才等于整个的 TCP 报文段。所以，MSS是“TCP 报文段长度减去 TCP 首部长度”。TCP 首部
选项（2）：最大报文段长度 MSS最大报文段长度 MSS  (Maximum Segment Size) 是每个 TCP 报文段中的数据字段的最大长度。与接收窗口值没有关系。TCP 报文段长度 = 数据字段长度 + TCP 首部长度数据字段长度 = TCP 报文段长度 – TCP 首部长度
选项（2）：最大报文段长度 MSS
选项（3）：窗口扩大主机 A主机 B t1  t2  t3  t4 TCP 窗口字段长度= 16 位，最大窗口大小 = 64 K 字节。对于传播时延和带宽都很大的网络，为获得高吞吐率较，需要更大的窗口。
选项（3）：窗口扩大主机 A主机 B窗口扩大选项：占 3 字节，其中一个字节表示移位值 S。新的窗口值位数从 16 增大到 (16 + S)，相当于把窗口值向左移动 S 位。移位值允许使用的最大值是 14，窗口最大值增大到 2(16 + 14) – 1 = 230 – 1。窗口扩大选项可以在双方初始建立 TCP 连接时进行协商。
选项（8）：时间戳占 10 字节。最主要的 2 个字段：	时间戳值字段（4字节）和时间戳回送回答字段（4字节）。2 个主要功能：计算往返时间 RTT防止序号绕回 PAWS (Protect Against Wrapped Sequence numbers)。序号重复时，为了使接收方能够把新报文段和迟到很久的旧报文段区分开，可以在报文段中加上时间戳。
5.6.1                          以字节为单位的滑动窗口5.6.2                                 超时重传时间的选择  5.6.3                                       选择确认 SACK5.6TCP 可靠传输的实现
5.6.1   以字节为单位的滑动窗口TCP 使用流水线传输和滑动窗口协议实现高效、可靠的传输。TCP 的滑动窗口是以字节为单位的。发送方 A 和接收方 B 分别维持一个发送窗口和一个接收窗口。发送窗口：在没有收到确认的情况下，发送方可以连续把窗口内的数据全部发送出去。凡是已经发送过的数据，在未收到确认之前都必须暂时保留，以便在超时重传时使用。接收窗口：只允许接收落入窗口内的数据。
A 根据 B 给出的窗口值，构造出自己的发送窗口。发送窗口里面的序号表示允许发送的序号。窗口越大，发送方就可以在收到对方确认之前连续发送更多的数据，因而可能获得更高的传输效率。前移待发送，但当前不允许发送已发送并收到确认A 的发送窗口 = 20允许发送的序号26272829303132333435363738394041424344454647484950515253545556B 期望收到的序号前沿后沿前移收缩发送窗口
A 根据 B 给出的窗口值，构造出自己的发送窗口。发送窗口里面的序号表示允许发送的序号。窗口越大，发送方就可以在收到对方确认之前连续发送更多的数据，因而可能获得更高的传输效率。待发送，但当前不允许发送已发送并收到确认A 的发送窗口 = 20允许发送的序号3132333435363738394041424344454647484950B 期望收到的序号前沿后沿发送窗口
假定 A 发送了序号为 31 ~ 41 共 11 个字节的数据P1 = 后沿，P2 = 当前，P3 = 前沿。P3 – P1 = A 的发送窗口（又称为通知窗口）P2 – P1 = 已发送但尚未收到确认的字节数P3 – P2 = 允许发送但尚未发送的字节数（又称为可用窗口） 待发送，但当前不允许发送已发送并收到确认A 的发送窗口 = 20字节，未收到确认前位置不变允许发送但尚未发送26272829305152535455已发送但未收到确认56可用窗口发送窗口
不允许接收已发送确认并交付主机B 的接收窗口 = 20 字节允许接收26272829303132333435363738394041424344454647484950515253545556接收窗口B 收到了序号为 32 和 33 的数据，但未收到序号为 31 的数据。因此，因此发送的确认报文段中的确认号是 31（即期望收到的序号）。
不允许接收已发送确认并交付主机B 的接收窗口 = 20 字节允许接收26272829303132333435363738394041424344454647484950515253545556窗口的滑动待发送，但当前不允许发送已发送并收到确认2627282930515253545556A 的发送窗口 = 20
不允许接收已发送确认并交付主机B 的接收窗口 = 20 字节允许接收26272829303132333435363738394041424344454647484950515253545556窗口的滑动待发送，但当前不允许发送已发送并收到确认2627282930515253545556A 的发送窗口 = 20
不允许接收已发送确认并交付主机26272829303132333435363738394041424344454647484950515253545556窗口的滑动待发送，但当前不允许发送已发送并收到确认2627282930515253545556A 的发送窗口 = 20
不允许接收已发送确认并交付主机26272829303132333435363738394041424344454647484950515253545556窗口的滑动待发送，但当前不允许发送已发送并收到确认2627282930515253545556A 的发送窗口 = 20
不允许接收已发送确认并交付主机窗口的滑动不允许发送已发送并收到确认262728293051525354555626272829303132333435363738394041424344454647484950515253545556
不允许接收已发送确认并交付主机窗口的滑动不允许发送已发送并收到确认262728293054555626272829303132333435363738394041424344454647484950515253545556
窗口的滑动不允许发送已发送并收到确认A 的发送窗口 = 20 字节（已满，可用窗口 = 0）2627282930515253545556A 未收到确认的原因有：① B 未发送；② B已发送，但还未到达 A 。为保证可靠传输，A 只能认为 B 还没有收到这些数据。A 经过一段时间后（由超时计时器控制）就重传这部分数据，重新设置超时计时器，直到收到 B 的确认为止。如果 A 按序收到落在发送窗口内的确认号， 就使发送窗口向前滑动，并发送新的数据。
窗口的滑动不允许发送已发送并收到确认A 的发送窗口 = 20 字节（已满，可用窗口 = 0）2627282930515253545556A 未收到确认的原因有：① B 未发送；② B已发送，但还未到达 A 。为保证可靠传输，A 只能认为 B 还没有收到这些数据。A 经过一段时间后（由超时计时器控制）就重传这部分数据，重新设置超时计时器，直到收到 B 的确认为止。如果 A 按序收到落在发送窗口内的确认号， 就使发送窗口向前滑动，并发送新的数据。
发送缓存与发送窗口 发送方的应用进程把字节流写入 TCP 发送缓存。缓存中的字节数 = 发送应用程序最后写入缓存的字节 - 最后被确认的字节
接收方的应用进程从 TCP 接收缓存中读取尚未被读取的字节。若不能及时读取，缓存最终会被填满，使接收窗口减小到零。如果能够及时读取，接收窗口就可以增大，但最大不能超过接收缓存的大小。接收缓存与接收窗口 
需要强调三点第一，发送窗口是根据接收窗口设置的，但在同一时刻，发送窗口并不总是和接收窗口一样大（因为有一定的时间滞后）。第二，TCP 标准没有规定对不按序到达的数据应如何处理。通常是先临时存放在接收窗口中，等到字节流中所缺少的字节收到后，再按序交付上层的应用进程。第三，TCP 要求接收方必须有累积确认的功能，以减小传输开销。接收方可以在合适的时候发送确认，也可以在自己有数据要发送时把确认信息顺便捎带上。但接收方不应过分推迟发送确认，否则会导致发送方不必要的重传，捎带确认实际上并不经常发生。
5.6.2   超时重传时间的选择TCP 发送方在规定的时间内没有收到确认就要重传已发送的报文段。但重传时间的选择是 TCP 最复杂的问题之一。互联网环境复杂，IP 数据报所选择的路由变化很大，导致运输层的往返时间 (RTT) 的变化也很大。
TCP 超时重传时间设置不能太短，否则会引起很多报文段的不必要的重传，使网络负荷增大。不能过长，会使网络的空闲时间增大，降低了传输效率。
加权平均往返时间 RTTS 加权平均往返时间 RTTS 又称为平滑的往返时间。新的 RTTS    (1  )  (旧的 RTTS)  +   (新的 RTT 样本)       (5-4)
超时重传时间 RTORTO (Retransmission Time-Out) 应略大于加权平均往返时间 RTTS 。RFC 6298 建议 RTO：	其中：RTTD 是 RTT 偏差的加权平均值。RFC 6298 建议 RTTD ：	其中： 是个小于 1 的系数，其推荐值是 1/4，即 0.25。RTO = RTTS + 4  RTTD 					 (5-5)新的 RTTD = (1   )  (旧的 RTTD)  +    RTTS  新的 RTT 样本   (5-6)
往返时间 (RTT) 的测量相当复杂超时重传报文段后，如何判定此确认报文段是对原来的报文段的确认，还是对重传报文段的确认？ 往返时间 RTT发送一个报文段重传报文段收到 ACK时间往返时间 RTT是对哪一个报文段的确认？超时
Karn 算法在计算平均往返时间 RTT 时，只要报文段重传了，就不采用其往返时间样本。新问题：当报文段的时延突然增大很多时，在原来得出的重传时间内，不会收到确认报文段，于是就重传报文段。但根据 Karn 算法，不考虑重传的报文段的往返时间样本。这样，超时重传时间就无法更新，造成很多不必要的重传。
修正的 Karn 算法报文段每重传一次，就把 RTO 增大一些：系数  的典型值 = 2 。当不再发生报文段的重传时，才根据报文段的往返时延更新平均往返时延 RTT 和超时重传时间 RTO 的数值。新的 RTO     (旧的 RTO) 
5.6.3   选择确认 SACK问题：若收到的报文段无差错，只是未按序号，中间还缺少一些序号的数据，那么能否设法只传送缺少的数据而不重传已经正确到达接收方的数据？解决：选择确认 SACK  (Selective ACK) ……连续的字节流………第一个字节块第二个字节块1                1000              1501         3000              3501                   4500假设最大报文段长度 MSS = 5000 字节，起始序号 = 1。接收方收到了和前面的字节流不连续的两个字节块，缺少序号 1001 ~ 1500 、3001 ~ 3500 、4501~5000 的字节。确认报文：ACK = 1，确认号 = 1001，窗口 = 6000
RFC 2018 对 SACK 的规定如果要使用选择确认，在建立 TCP 连接时，要在 TCP 首部的选项中加上允许 SACK 选项，且双方必须事先商定好。如果使用选择确认，原来首部中的确认号的用法仍然不变（累积确认）。只是在 TCP 首部中都增加了 SACK 选项，以便报告收到的不连续的字节块的边界。允许 SACK 选项
SACK确认号 = 1001……连续的字节流………第一个字节块第二个字节块1                1000              1501         3000              3501                   4500左边界 = 第一个字节的序号，右边界 = 最后一个字节序号 + 1。
5.7.1                       利用滑动窗口实现流量控制5.7.2                                       TCP 的传输效率5.7TCP 的流量控制
5.7.1   利用滑动窗口实现流量控制流量控制 (flow control) ：让发送方的发送速率不要太快，使接收方来得及接收。利用滑动窗口机制可以很方便地在 TCP 连接上实现对发送方的流量控制。 
利用可变窗口进行流量控制举例AB允许 A 发送序号 201 至 500  共 300 字节允许 A 发送序号 501 至 600 共 100 字节不允许 A 再发送（到序号 600 为止的数据都收到了）A 向 B 发送数据，MSS = 100 字节。在连接建立时，B 告诉 A：“我的接收窗口 rwnd = 400（字节）”。
可能发生死锁AB允许 A 发送序号 201 至 500  共 300 字节允许 A 发送序号 501 至 600 共 100 字节不允许 A 再发送（到序号 600 为止的数据都收到了）A 向 B 发送数据，MSS = 100 字节。在连接建立时，B 告诉 A：“我的接收窗口 rwnd = 400（字节）”。允许 A 发送序号 601 至 1000  共 400 字节
持续计时器持续计时器  (persistence timer)：只要 TCP 连接的一方收到对方的零窗口通知，就启动该持续计时器。若持续计时器设置的时间到期，就发送一个零窗口探测报文段（仅携带 1 字节的数据），对方在确认这个探测报文段时给出当前窗口值。若窗口仍然是零，收到这个报文段的一方就重新设置持续计时器。若窗口不是零，则死锁的僵局就可以打破了。 
5.7.2   TCP 的传输效率控制TCP发送报文段的时机：三种机制TCP 维持一个变量，它等于最大报文段长度 MSS。只要缓存中存放的数据达到 MSS 字节时，就组装成一个 TCP 报文段发送出去。由发送方的应用进程指明要求发送报文段，即 TCP 支持的推送 (push) 操作。发送方的一个计时器期限到了，这时就把当前已有的缓存数据装入报文段（但长度不能超过 MSS）发送出去。如何控制 TCP 发送报文段的时机仍然是一个较为复杂的问题。
糊涂窗口综合症糊涂窗口综合症：每次仅发送一个字节或很少几个字节的数据时，有效数据传输效率变得很低的现象。1 字节数据1 字节20 字节1 字节20 字节20 字节TCP 报文段首部IP 数据报首部TCP 报文段IP 数据报此时，有效数据传输效率 = 1/41 = 2.44%
发送方糊涂窗口综合症发送方 TCP 每次接收到一字节的数据后就发送。发送一个字节需要形成 41 字节长的 IP 数据报。效率很低。解决方法：使用 Nagle 算法。
接收方糊涂窗口综合症原因：接收方应用进程消耗数据太慢，例如：每次只读取一个字节。AB允许 A 发送序号 601 至 601  共 1 字节不允许 A 再发送（到序号 600 为止的数据都收到了）应用进程读取 1 字节。接收缓存大小 = 1 字节A 发送了序号 601 至 601 字节，不能再发送了应用进程读取 1 字节。接收缓存大小 = 1 字节允许 A 发送序号 602 至 602  共 1 字节A 发送了序号 602 至 602 字节，不能再发送了
接收方糊涂窗口综合症解决方法：让接收方等待一段时间，使得或者接收缓存已有足够空间容纳一个最长的报文段，或者等到接收缓存已有一半空闲的空间。只要出现这两种情况之一，接收方就发出确认报文，并向发送方通知当前的窗口大小。
5.8.1                                 拥塞控制的一般原理5.8.2                                TCP 的拥塞控制方法5.8.3                                 主动队列管理 AQM5.8TCP 的拥塞控制
5.8.1   拥塞控制的一般原理在某段时间，若对网络中某资源的需求超过了该资源所能提供的可用部分，网络的性能就要明显变坏，整个网络的吞吐量将随输入负荷的增大而下降。这种现象称为拥塞 (congestion)。最坏结果：系统崩溃。
拥塞产生的原因由许多因素引起。例如：节点缓存容量太小；链路容量不足；处理机处理速率太慢；拥塞本身会进一步加剧拥塞；出现网络拥塞的条件： ∑ 对资源需求  > 可用资源                      (5-7)
增加资源能解决拥塞吗？不能，而且还可能使网络的性能更坏。例如：增大缓存，但未提高输出链路的容量和处理机的速度，排队等待时间将会大大增加，引起大量超时重传，解决不了网络拥塞；提高处理机处理的速率会将瓶颈转移到其他地方；拥塞引起的重传并不会缓解网络的拥塞，反而会加剧网络的拥塞。
拥塞控制与流量控制的区别
拥塞控制所起的作用提供的负载吞吐量0
拥塞控制的一般原理拥塞控制的前提：网络能够承受现有的网络负荷。实践证明，拥塞控制是很难设计的，因为它是一个动态问题。分组的丢失是网络发生拥塞的征兆，而不是原因。在许多情况下，甚至正是拥塞控制本身成为引起网络性能恶化、甚至发生死锁的原因。
开环控制和闭环控制
闭环控制措施
闭环控制措施主要指标有：由于缺少缓存空间而被丢弃的分组的百分数；平均队列长度；超时重传的分组数；平均分组时延；分组时延的标准差，等等。这些指标的上升都标志着拥塞的增长。
闭环控制措施将拥塞发生的信息传送到产生分组的源站。在路由器转发的分组中保留一个比特或字段，用该比特或字段的值表示网络没有拥塞或产生了拥塞。周期性地发出探测分组等。
闭环控制措施过于频繁，会使系统产生不稳定的振荡。过于迟缓，不具有任何实用价值。选择正确的时间常数是相当困难的。
5.8.2  TCP 的拥塞控制方法TCP 采用基于滑动窗口的方法进行拥塞控制，属于闭环控制方法。TCP 发送方维持一个拥塞窗口 cwnd (Congestion Window)拥塞窗口的大小取决于网络的拥塞程度，并且是动态变化的。发送端利用拥塞窗口根据网络的拥塞情况调整发送的数据量。发送窗口大小不仅取决于接收方窗口，还取决于网络的拥塞状况。真正的发送窗口值：真正的发送窗口值 = Min (接收方通知的窗口值，拥塞窗口值)
控制拥塞窗口变化的原则只要网络没有出现拥塞，拥塞窗口就可以再增大一些，以便把更多的分组发送出去，提高网络的利用率。但只要网络出现拥塞或有可能出现拥塞，就必须把拥塞窗口减小一些，以减少注入到网络中的分组数，缓解网络出现的拥塞。
发送方判断拥塞的方法：隐式反馈因传输出差错而丢弃分组的概率很小（远小于1 %）。因此，发送方在超时重传计时器启动时，就判断网络出现了拥塞。
TCP 拥塞控制算法四种拥塞控制算法（ RFC 5681） ：慢开始 (slow-start)拥塞避免 (congestion avoidance)快重传 (fast retransmit)快恢复 (fast recovery)
1. 慢开始 (Slow start)目的：探测网络的负载能力或拥塞程度。算法：由小到大逐渐增大注入到网络中的数据字节，即：由小到大逐渐增大拥塞窗口数值。2 个控制变量：
拥塞窗口 cwnd 增大：在每收到一个对新的报文段的确认，就把拥塞窗口增加最多一个发送方的最大报文段 SMSS  (Sender Maximum Segment Size) 的数值。      其中 N 是原先未被确认的、但现在被刚收到的确认报文段所确认的字节数。拥塞窗口 cwnd 每次的增加量 = min (N, SMSS)          (5-8)1. 慢开始 (Slow start)
1. 慢开始 (Slow start)（假设发送方设置 cwnd = 1 个 SMSS）
发送方每收到一个对新报文段的确认（重传的不算在内）就使 cwnd 加 1。 发送方接收方发送 M1 确认 M1发送 M2~M3 确认 M2~M3 发送 M4~M7 确认 M4~M7 cwnd = 1 cwnd = 2 cwnd = 4 发送 M8~M15…cwnd = 8 往返时延 RTT (轮次 1)往返时延 RTT (轮次 2)往返时延 RTT (轮次 3)
发送 M1 确认 M1发送 M2~M3 确认 M2~M3 发送 M4~M7 确认 M4~M7 cwnd = 1 cwnd = 2 cwnd = 4 发送 M8~M15…往返时延 RTT (轮次 1)往返时延 RTT (轮次 2)往返时延 RTT (轮次 3)窗口大小按指数增加，不慢！每经过一个传输轮次，拥塞窗口就加倍。cwnd = 8 发送方每收到一个对新报文段的确认（重传的不算在内）就使 cwnd 加 1。 发送方接收方
传输轮次（transmission round）一个传输轮次所经历的时间其实就是往返时间 RTT。传输轮次强调：把拥塞窗口 cwnd 所允许发送的报文段都连续发送出去，并收到了对已发送的最后一个字节的确认。例如：拥塞窗口 cwnd = 4，这时的往返时间 RTT 就是发送方连续发送 4 个报文段，并收到这 4 个报文段的确认，总共经历的时间。 
慢开始门限 ssthresh防止拥塞窗口 cwnd 增长过大引起网络拥塞。用法：当 cwnd < ssthresh 时，使用慢开始算法。当 cwnd > ssthresh 时，停止使用慢开始算法，改用拥塞避免算法。当 cwnd = ssthresh 时，既可使用慢开始算法，也可使用拥塞避免算法。
2. 拥塞避免目的：让拥塞窗口 cwnd 缓慢地增大，避免出现拥塞。拥塞窗口 cwnd 增大：每经过一个往返时间 RTT（不管在此期间收到了多少确认），发送方的拥塞窗口 cwnd = cwnd + 1。具有加法增大 AI (Additive Increase) 特点：使拥塞窗口 cwnd 按线性规律缓慢增长。注意：拥塞避免并非完全避免拥塞，而是让拥塞窗口增长得缓慢些，使网络不容易出现拥塞。
发送方接收方发送 M1 确认 M1发送 M2~M3 确认 M2~M3 发送 M4~M6 确认 M4~M6 cwnd = 1 cwnd = 2 cwnd = 3 发送 M7~M10cwnd = 4 …往返时延 RTT (轮次 1)往返时延 RTT (轮次 1)往返时延 RTT (轮次 1)每经过一个往返时间 RTT，发送方就把拥塞窗口 cwnd 加 1。 
当网络出现拥塞时无论在慢开始阶段还是在拥塞避免阶段，只要发送方判断网络出现拥塞（重传定时器超时）：ssthresh = max (cwnd/2，2)cwnd = 1执行慢开始算法目的：迅速减少主机发送到网络中的分组数，使得发生拥塞的路由器有足够时间把队列中积压的分组处理完毕。 
慢开始和拥塞避免算法的实现举例当 TCP 连接进行初始化时，将拥塞窗口置为 1（窗口单位不使用字节而使用报文段）。将慢开始门限的初始值设置为 16 个报文段，即 ssthresh = 16。慢开始慢开始
开始执行慢开始算法时，拥塞窗口 cwnd=1，发送第一个报文段。慢开始和拥塞避免算法的实现举例
发送方每收到一个对新报文段的确认 ACK，就把拥塞窗口值加 1，因此拥塞窗口 cwnd 随着往返时延 RTT 按指数规律增长。慢开始和拥塞避免算法的实现举例
发送方每收到一个对新报文段的确认 ACK，就把拥塞窗口值加 1，因此拥塞窗口 cwnd 随着往返时延 RTT 按指数规律增长。慢开始和拥塞避免算法的实现举例
发送方每收到一个对新报文段的确认 ACK，就把拥塞窗口值加 1，因此拥塞窗口 cwnd 随着往返时延 RTT 按指数规律增长。慢开始和拥塞避免算法的实现举例
当拥塞窗口 cwnd 增长到慢开始门限值 ssthresh 时，改为执行拥塞避免算法，拥塞窗口按线性规律增长。慢开始和拥塞避免算法的实现举例
当拥塞窗口 cwnd = 24 时，网络出现了超时，发送方判断为网络拥塞。调整门限值 ssthresh = cwnd / 2 = 12，同时设置拥塞窗口 cwnd = 1，进入慢开始阶段。慢开始和拥塞避免算法的实现举例
当拥塞窗口 cwnd = 24 时，网络出现了超时，发送方判断为网络拥塞。调整门限值 ssthresh = cwnd / 2 = 12，同时设置拥塞窗口 cwnd = 1，进入慢开始阶段。慢开始和拥塞避免算法的实现举例
按照慢开始算法，发送方每收到一个对新报文段的确认 ACK，就把拥塞窗口值加 1。当拥塞窗口 cwnd = ssthresh = 12 时，改为执行拥塞避免算法，拥塞窗口按线性规律增大。慢开始和拥塞避免算法的实现举例
当拥塞窗口 cwnd = 16 时，发送方连续收到 3 个对同一个报文段的重复确认（记为 3-ACK）。发送方改为执行快重传和快恢复算法。慢开始和拥塞避免算法的实现举例
快重传 FR (Fast Retransmission) 算法目的：让发送方尽早知道发生了个别报文段的丢失。发送方只要连续收到三个重复的确认，就立即进行重传（即“快重传”），这样就不会出现超时。使用快重传可以使整个网络的吞吐量提高约 20%。快重传算法要求接收方立即发送确认，即使收到了失序的报文段，也要立即发出对已收到的报文段的重复确认。注意：快重传并非取消重传计时器，而是在某些情况下可以更早地（更快地）重传丢失的报文段。 
快重传举例发送方接收方
快恢复 FR (Fast Recovery)算法当发送端收到连续三个重复的确认时，不执行慢开始算法，而是执行快恢复算法 FR (Fast Recovery) 算法：慢开始门限 ssthresh = 当前拥塞窗口 cwnd / 2 ；乘法减小 MD (Multiplicative Decrease) 拥塞窗口。     新拥塞窗口 cwnd = 慢开始门限 ssthresh ；执行拥塞避免算法，使拥塞窗口缓慢地线性增大（加法增大 AI）。 二者合在一起就是所谓的 AIMD 算法，使 TCP 性能有明显改进。
当拥塞窗口 cwnd = 16 时，发送方连续收到 3 个对同一个报文段的重复确认（记为 3-ACK）。发送方改为执行快重传和快恢复算法。慢开始和拥塞避免算法的实现举例
执行快重传和快恢复算法：发送方调整门限值 ssthresh = cwnd / 2 = 8，设置拥塞窗口 cwnd = ssthresh = 8，开始执行拥塞避免算法。慢开始和拥塞避免算法的实现举例
TCP 拥塞控制流程图
发送窗口的上限值当 rwnd < cwnd 时，是接收方的接收能力限制发送窗口的最大值。当 cwnd < rwnd 时，是网络拥塞限制发送窗口的最大值。 发送窗口的上限值 = Min [rwnd, cwnd]                 (5-9)
5.8.3   主动队列管理 AQMTCP 拥塞控制和网络层采取的策略有密切联系。例如：若路由器对某些分组的处理时间特别长，就可能引起发送方 TCP 超时，对这些报文段进行重传。重传会使 TCP 连接的发送端认为在网络中发生了拥塞，但实际上网络并没有发生拥塞。对 TCP 拥塞控制影响最大的就是路由器的分组丢弃策略。
“先进先出”FIFO 处理规则先进先出FIFO (First In First Out) 处理规则：尾部丢弃策略 (tail-drop policy)：当队列已满时，以后到达的所有分组（如果能够继续排队，这些分组都将排在队列的尾部）将都被丢弃。路由器的尾部丢弃往往会导致一连串分组的丢失，这就使发送方出现超时重传，使 TCP 进入拥塞控制的慢开始状态，结果使 TCP 连接的发送方突然把数据的发送速率降低到很小的数值。
先进先出（FIFO）处理规则与尾部丢弃策略在最简单的情况下，路由器队列通常采用先进先出 (FIFO) 处理规则与尾部丢弃策略 (tail-drop policy)。当队列已满时，以后到达的所有分组将都被丢弃。最大队列长度
分组丢弃使发送方出现超时重传，使 TCP 连接进入慢开始状态。队列长度时间队列满队列满时，TCP 重传定时器超时，重新开始慢启动，减少数据率。分组离开队列，之后执行慢启动增大数据传输率。队列又满时，TCP 重传定时器超时，重新再次开始慢启动，减少数据率。先进先出（FIFO）处理规则与尾部丢弃策略
严重问题：全局同步若路由器进行了尾部丢弃，所有到达的分组都被丢弃，不论它们属于哪个 TCP 连接。最大队列长度
分组丢弃使发送方出现超时重传，使多个 TCP 连接同时进入慢开始状态，发生全局同步 (global syncronization)。队列长度时间队列满队列满时，TCP 重传定时器超时，重新开始慢启动，减少数据率。分组离开队列，之后执行慢启动增大数据传输率。队列又满时，TCP 重传定时器超时，重新再次开始慢启动，减少数据率。严重问题：全局同步
主动队列管理 AQM1998 年提出了主动队列管理 AQM (Active Queue Management)。主动：不要等到路由器的队列长度已经达到最大值时才不得不丢弃后面到达的分组，而是在队列长度达到某个值得警惕的数值时（即当网络拥塞有了某些拥塞征兆时），就主动丢弃到达的分组。AQM 可以有不同实现方法，其中曾流行多年的就是随机早期检测 RED (Random Early Detection)。
随机早期检测 RED路由器队列维持两个参数：队列长度最小门限 THmin 队列长度最大门限 THmax 。RED 对每一个到达的分组都先计算平均队列长度 LAV 。若平均队列长度小于最小门限 THmin，则将新到达的分组放入队列进行排队。若平均队列长度超过最大门限 THmax ，则将新到达的分组丢弃。若平均队列长度介于在最小门限 THmin 和最大门限 THax 之间，则按照某一概率 p 将新到达的分组丢弃。
随机早期检测 REDRED 路由器到达队列维持两个参数：Thmin， Thmax，分成为三个区域： RED 对每一个到达的分组都先计算平均队列长度 LAV 。
随机早期检测 RED当 LAV    Thmin 时，丢弃概率 p = 0。当 LAV    Thmax 时，丢弃概率 p = 1。当 Thmin ≤ LAV ≤ Thmax时，丢弃概率 p： 0  p   1 。困难：丢弃概率 p 的选择，因为 p 并不是个常数。例如，按线性规律变化，从 0 变到 pmax。最小门限 THmin最大门限 THmax平均队列长度 Lav分组丢弃概率 p1.00pmax排队丢弃或排队。以概率p丢弃丢弃
多年的实践证明，RED 的使用效果并不太理想。2015 年公布的 RFC 7567 已经把 RFC 2309 列为“陈旧的”，并且不再推荐使用 RED。但对路由器进行主动队列管理 AQM 仍是必要的。AQM 实际上就是对路由器中的分组排队进行智能管理，而不是简单地把队列的尾部丢弃。现在已经有几种不同的算法来代替旧的 RED，但都还在实验阶段。随机早期检测 RED
5.9.1                                      TCP 的连接建立5.9.2                                      TCP 的连接释放5.9.3                                   TCP 的有限状态机5.9TCP 的运输连接管理
运输连接的三个阶段TCP 是面向连接的协议。TCP 连接有三个阶段：连接建立数据传送连接释放TCP 的连接管理就是使 TCP 连接的建立和释放都能正常地进行。
TCP 连接建立过程中要解决的三个问题要使每一方能够确知对方的存在。要允许双方协商一些参数（如最大窗口值、是否使用窗口扩大选项和时间戳选项以及服务质量等）。能够对运输实体资源（如缓存大小、连接表中的项目等）进行分配。TCP 连接的建立采用客户服务器方式。主动发起连接建立的应用进程叫做客户 (client)。被动等待连接建立的应用进程叫做服务器 (server)。
5.9.1  TCP 的连接建立TCP 建立连接的过程叫做握手。采用三报文握手：在客户和服务器之间交换三个 TCP 报文段，以防止已失效的连接请求报文段突然又传送到了，因而产生 TCP 连接建立错误。
TCP 的连接建立：采用三报文握手CLOSEDCLOSEDAB客户服务器
TCP 的连接建立：采用三报文握手CLOSEDCLOSEDAB客户服务器B 的 TCP 服务器进程先创建传输控制块 TCB，准备接受客户进程的连接请求。
TCP 的连接建立：采用三报文握手CLOSEDCLOSEDAB客户服务器A 的 TCP 向 B 主动发出连接请求报文段，其首部中的同步位 SYN = 1，并选择序号 seq = x，表明传送数据时的第一个数据字节的序号是 x。注意：TCP规定，SYN 报文段（即SYN = 1的报文段）不能携带数据，但要消耗掉一个序号。
TCP 的连接建立：采用三报文握手CLOSEDCLOSEDAB客户服务器B 的 TCP 收到连接请求报文段后，如同意，则发回确认。B 在确认报文段中应使 SYN = 1，使 ACK = 1，其确认号 ack = x + 1，自己选择的序号 seq = y。这个报文段也不能携带数据，但同样要消耗掉一个序号。
TCP 的连接建立：采用三报文握手CLOSEDCLOSEDAB客户服务器A 收到此报文段后向 B 给出确认，其 ACK = 1，确认号 ack = y + 1。A 的 TCP 通知上层应用进程，连接已经建立。 TCP 标准规定：ACK 报文段可以携带数据。但如果不携带数据，则不消耗序号。下一个数据报文段的序号仍是 seq = x + 1。
TCP 的连接建立：采用三报文握手CLOSEDCLOSEDAB客户服务器B 的 TCP 收到主机 A 的确认后，也通知其上层应用进程：TCP 连接已经建立。双方可以开始数据传送。
采用三报文握手建立 TCP 连接的各个状态 CLOSEDCLOSEDAB客户服务器（同步已发送）（同步收到）（已建立连接）（已建立连接）
5.9.2  TCP 的连接释放TCP 连接释放过程比较复杂。数据传输结束后，通信的双方都可释放连接。TCP 连接释放过程是四报文握手。
TCP 的连接释放采用四报文握手数据传送AB客户服务器ESTAB-LISHEDESTAB-LISHEDA 的应用进程先向其 TCP 发出连接释放报文段，并停止再发送数据，主动关闭 TCP 连接。A 把连接释放报文段首部的 FIN = 1，其序号seq = u，等待 B 的确认。TCP规定：FIN 报文段即使不携带数据，也消耗掉一个序号。
TCP 的连接释放采用四报文握手数据传送AB客户服务器ESTAB-LISHEDESTAB-LISHEDB 发出确认，ACK=1，确认号 ack = u+1，这个报文段的序号 seq = v。TCP 服务器进程通知高层应用进程。从 A 到 B 这个方向的连接就释放了，TCP 连接处于半关闭 (half-close) 状态。B 若发送数据，A 仍要接收。
TCP 的连接释放采用四报文握手数据传送AB客户服务器ESTAB-LISHEDESTAB-LISHED若 B 已经没有要向 A 发送的数据，其应用进程就通知 TCP 释放连接。 FIN=1，ACK=1，确认号 ack = u+1。
TCP 的连接释放采用四报文握手数据传送AB客户服务器ESTAB-LISHEDESTAB-LISHED A 收到连接释放报文段后，必须发出确认。 ACK=1，确认号 ack=w+1，自己的序号 seq = u + 1
TCP 的连接释放采用四报文握手ACK = 1, seq = u + 1, ack = w  1FIN = 1, ACK = 1, seq = w, ack= u  1FIN-WAIT-1CLOSE-WAITFIN-WAIT-2LAST-ACK被动关闭数据传送AB客户服务器数据传送CLOSEDESTAB-LISHEDESTAB-LISHED请注意：此时 TCP 连接还没有释放掉。必须经过时间等待计时器 (TIME-WAIT timer) 设置的时间 2MSL 后，A 才释放 TCP 连接。（终止等待1）（终止等待2）（关闭等待）（最后确认）（时间等待）（关闭）（关闭）
第一，保证发送的最后一个 ACK 报文段能够到达 B。第二，防止“已失效的连接请求报文段”出现在本连接中。必须等待 2MSL 的时间
用来防止在 TCP 连接出现长时期空闲。通常设置为 2 小时 。若服务器过了 2 小时还没有收到客户的信息，它就发送探测报文段。若发送了 10 个探测报文段（每一个相隔 75 秒）还没有响应，就假定客户出了故障，因而就终止该连接。 保活计时器
5.9.3  TCP 的有限状态机
结束
第 6 章     应 用 层主讲人：熊曾刚 教授
计算机网络体系结构OSI 的七层协议体系结构TCP/IP 的四层协议体系结构(a)(b)(c)五层协议的体系结构
6.1                                             域名系统 DNS6.2                                              文件传送协议6.3                                 远程终端协议 TELNET6.4                                             万维网 WWW6.5                                                     电子邮件6.6                             动态主机配置协议 DHCP6.7                            简单网络管理协议 SNMP6.8                              应用进程跨越网络的通信6.9                                                    P2P 应用
应用层协议精确定义不同主机中的多个应用进程之间的通信规则。包括：应用进程交换的报文类型，如请求报文和响应报文。各种报文类型的语法，如报文中的各个字段及其详细描述。字段的语义，即包含在字段中的信息的含义。进程何时、如何发送报文，以及对报文进行响应的规则。
应用层协议
6.1.1                                         域名系统概述6.1.2                                  互联网的域名结构6.1.3                                            域名服务器6.1域名系统 DNS
6.1.1  域名系统概述域名系统 DNS (Domain Name System) ：互联网使用的命名系统。用来把人们使用的机器名字（域名）转换为 IP 地址。为互联网的各种网络应用提供了核心服务。
6.1.1  域名系统概述域名采用层次树状结构的命名方法：www.myschool.edu。DNS 是一个联机分布式数据库系统，采用客户服务器方式。域名到 IP 地址的解析是由若干个域名服务器程序共同完成。域名服务器程序在专设的结点上运行，运行该程序的机器称为域名服务器。 
域名解析过程要点客户服务器域名服务器解析程序域名服务器域名服务器本地域名服务器www.myschool.eduresolverDNS 使用 UDP 通信
6.1.2   互联网的域名结构命名方法：层次树状结构方法。任何一个连接在互联网上的主机或路由器，都有一个唯一的层次结构的名字，即域名 (domain name)。域 (domain)：名字空间中一个可被管理的划分。可以划分为子域，而子域还可继续划分为子域的子域，这样就形成了顶级域、二级域、三级域，等等。
6.1.2   互联网的域名结构域名结构：层次结构。由标号 (label) 序列组成，各标号之间用点（.）隔开，各标号分别代表不同级别的域名。mail.cctv.com 注意：域名只是个逻辑概念，并不代表计算机所在的物理地点。
全球顶级域名 TLD (Top Level Domain)在国家顶级域名下注册的二级域名均由该国家自行确定。我国把二级域名划分为“类别域名”和“行政区域名”两大类。
互联网的域名空间结构根（根没有名字）域名树的树叶就是计算机的名字，它不能再继续往下划分子域了。
互联网的域名空间结构
6.1.3  域名服务器实现域名系统使用分布在各地的域名服务器（DNS 服务器）。一个服务器所负责管辖的（或有权限的）范围叫做区 (zone)。各单位根据具体情况来划分自己管辖范围的区。但在一个区中的所有节点必须是能够连通的。每一个区设置相应的权限域名服务器，用来保存该区中的所有主机的域名到 IP 地址的映射。DNS 服务器的管辖范围不是以“域”为单位，而是以“区”为单位。 
区的不同划分方法举例域 abc.com 区abc.comabcxuvwty(a) 区 = 域comeduorg根
树状结构的 DNS 域名服务器每个域名服务器都只对域名体系中的一部分进行管辖。
域名服务器类型根据所起的作用，分为四种类型：根域名服务器 顶级域名服务器 权限域名服务器 本地域名服务器 
1. 根域名服务器最高层次，最为重要。所有根域名服务器都知道所有的顶级域名服务器的域名和 IP 地址。不管是哪一个本地域名服务器，若要对互联网上任何一个域名进行解析，只要自己无法解析，就首先求助于根域名服务器。若所有的根域名服务器都瘫痪了，整个互联网中的 DNS 系统就无法工作了。
根域名服务器共有 13 套装置根域名服务器共有 13 套装置，构成 13 组根域名服务器。根域名服务器总共只有 13 个不同 IP 地址的域名，但并非仅由13台机器所组成。
截至 2020年9月3日，全球共有 1098 个根域名服务器在运行，其中在我国的共有28个。根域名服务器共有 13 套装置根域名服务器采用任播 (anycast) 技术，当DNS 客户向某个根域名服务器发出查询报文时，路由器能找到离这个 DNS 客户最近的一个根域名服务器。根域名服务器分布在全世界。为了提供更可靠的服务，在每一个地点的根域名服务器往往由多台机器组成。
根域名服务器共有 13 套装置注意：根域名服务器并不直接把域名转换成 IP 地址（根域名服务器也没有存放这种信息），而是告诉本地域名服务器下一步应当找哪一个顶级域名服务器进行查询。
2. 顶级域名服务器顶级域名服务器（即 TLD 服务器）负责管理在该顶级域名服务器注册的所有二级域名。当收到 DNS 查询请求时，就给出相应的回答（可能是最后的结果，也可能是下一步应当找的域名服务器的 IP 地址）。 
3. 权限域名服务器负责一个区（zone）的域名服务器。当一个权限域名服务器还不能给出最后的查询回答时，就会告诉发出查询请求的 DNS 客户，下一步应当找哪一个权限域名服务器。 
4. 本地域名服务器非常重要。当一个主机发出 DNS 查询请求时，该查询请求报文就发送给本地域名服务器。每一个互联网服务提供者 ISP 或一个大学，都可以拥有一个本地域名服务器。当所要查询的主机也属于同一个本地 ISP 时，该本地域名服务器立即就能将所查询的主机名转换为它的 IP 地址，而不需要再去询问其他的域名服务器。本地域名服务器有时也称为默认域名服务器。
提高域名服务器的可靠性DNS 域名服务器都把数据复制到几个域名服务器来保存，其中的一个是主域名服务器，其他的是辅助域名服务器。当主域名服务器出故障时，辅助域名服务器可以保证 DNS 的查询工作不会中断。主域名服务器定期把数据复制到辅助域名服务器中，而更改数据只能在主域名服务器中进行，保证了数据的一致性。
域名的解析过程
迭代查询顶级域名服务器dns.com权限域名服务dns.abc.com本地域名服务器dns.xyz.com根域名服务器m.xyz.com 递归查询查询 y.abc.com 的 IP 地址
递归查询（比较少用） 顶级域名服务器dns.com权限域名服务dns.abc.com本地域名服务器dns.xyz.com根域名服务器m.xyz.com 递归查询查询 y.abc.com 的 IP 地址
高速缓存也称为高速缓存域名服务器。存放最近用过的名字以及从何处获得名字映射信息的记录。作用：大大减轻根域名服务器的负荷，使 DNS 查询请求和回答报文的数量大为减少。 域名服务器应为每项内容设置计时器，并处理超过合理时间的项。当权限域名服务器回答一个查询请求时，在响应中指明绑定有效存在的时间值。增加此时间值可减少网络开销，而减少此时间值可提高域名转换的准确性。 
6.2.1                                               FTP 概述6.2.2                              FTP 的基本工作原理6.2.3                         简单文件传送协议 TFTP6.2文件传送协议
6.2.1  FTP 概述文件传送协议 FTP (File Transfer Protocol) 是互联网上使用得最广泛的文件传送协议。提供交互式的访问，允许客户指明文件的类型与格式，并允许文件具有存取权限。屏蔽了各计算机系统的细节，因而适合于在异构网络中任意计算机之间传送文件。是文件共享协议的一个大类。 
文件共享协议文件传送协议：FTP， TFTP 等。复制整个文件。对文件副本进行访问。若要存取一个文件，就必须先获得一个本地文件副本。若要修改文件，只能对文件副本进行修改，然后再将修改后的文件副本传回到原节点。联机访问 (on-line access) 协议：NFS 等。允许同时对一个文件进行存取。远地共享文件访问，如同对本地文件的访问一样。透明存取，不需要对该应用程序作明显的改动。由操作系统负责。
6.2.2  FTP 的基本工作原理网络环境下复制文件的复杂性：计算机存储数据的格式不同。文件的目录结构和文件命名的规定不同。对于相同的文件存取功能，操作系统使用的命令不同。访问控制方法不同。 
FTP 特点只提供文件传送的一些基本服务，它使用 TCP 可靠的运输服务。主要功能：减少或消除在不同操作系统下处理文件的不兼容性。使用客户服务器方式。一个 FTP 服务器进程可同时为多个客户进程提供服务。FTP 的服务器进程由两大部分组成：一个主进程，负责接受新的请求；若干个从属进程，负责处理单个请求。
FTP 主进程的工作步骤打开熟知端口（端口号为 21），使客户进程能够连接上。等待客户进程发出连接请求。启动从属进程来处理客户进程发来的请求。从属进程对客户进程的请求处理完毕后即终止，但从属进程在运行期间根据需要还可能创建其他一些子进程。回到等待状态，继续接受其他客户进程发来的请求。主进程与从属进程的处理是并发地进行。 
FTP 客户和服务器之间的两个从属进程和两个 TCP 连接
FTP 使用两个不同的端口号2120
NFS 采用的思路FTP 并非对所有的数据传输都是最佳的：仅能访问副本。NFS 允许应用进程打开一个远地文件，并能在该文件的某一个特定的位置上开始读写数据。NFS 可使用户只复制一个大文件中的一个很小的片段，而不需要复制整个大文件。NFS 在网络上传送的只是少量的修改数据。 
6.2.3  简单文件传送协议 TFTPTFTP (Trivial File Transfer Protocol) 是一个很小且易于实现的文件传送协议。使用客户服务器方式和使用 UDP 数据报，因此 TFTP 需要有自己的差错改正措施。只支持文件传输，不支持交互。没有庞大的命令集，没有列目录的功能，也不能对用户进行身份鉴别。优点：（1）可用于 UDP 环境；（2）代码所占的内存较小。 
TFTP 的主要特点每次传送的数据报文中有 512 字节的数据，但最后一次可不足 512 字节。数据报文按序编号，从 1 开始。支持 ASCII 码或二进制传送。可对文件进行读或写。使用很简单的首部。 
TFTP 的工作很像停止等待协议发送完一个文件块后就等待对方的确认，确认时应指明所确认的块编号。发完数据后在规定时间内收不到确认就要重发数据 PDU。发送确认 PDU 的一方若在规定时间内未收到下一个文件块，需重发确认 PDU，保证文件的传送不致因某一个数据报的丢失而告失败。 
TFTP 的工作过程开始工作时，TFTP 客户进程发送一个读请求或写请求报文给 TFTP 服务器进程，其 UDP 熟知端口号码为 69。TFTP 服务器进程选择一个新的端口和 TFTP 客户进程进行通信。若文件长度恰好为 512 字节的整数倍，则在文件传送完毕后，还必须在最后发送一个只含首部而无数据的数据报文。若文件长度不是 512 字节的整数倍，则最后传送数据报文的数据字段一定不满 512 字节，作为文件结束的标志。
是一个简单的远程终端协议，是互联网的正式标准。允许用户在其所在地通过 TCP 连接注册（即登录）到远地的另一个主机上（使用主机名或 IP 地址）。能将用户的击键传到远地主机，同时也能将远地主机的输出通过 TCP 连接返回到用户屏幕。服务是透明的。又称为终端仿真协议。 6.3  远程终端协议 TELNET
TELNET 使用客户 - 服务器方式在本地系统运行 TELNET 客户进程，而在远地主机则运行 TELNET 服务器进程。服务器中的主进程等待新的请求，产生从属进程来处理每一个连接。 
TELNET 使用网络虚拟终端 NVT 格式  使用客户端的格式TELNET 的选项协商 (Option Negotiation) 使客户和服务器可商定使用更多的终端功能，协商的双方是平等的。
NVT （Network Virtual Terminal ）格式  两个字符集：数据，控制客户端把用户的击键和命令转换成 NVT 格式，并送交服务器。服务器端把收到的数据和命令，从 NVT 格式转换成远地系统所需的格式。向客户返回数据时，服务器把远地系统的格式转换为 NVT 格式，本地客户再从 NVT 格式转换到本地系统所需的格式。 
6.4万维网 WWW6.4.1                                               万维网概述6.4.2                                 统一资源定位符 URL6.4.3                              超文本传送协议 HTTP6.4.4                                           万维网的文档6.4.5                              万维网的信息检索系统6.4.6                                               博客和微博6.4.7                                                  社交网站
6.4.1  万维网概述万维网 WWW (World Wide Web) 并非某种特殊的计算机网络。万维网是一个大规模的、联机式的信息储藏所。万维网用链接的方法能非常方便地从互联网上的一个站点访问另一个站点，从而主动地按需获取丰富的信息。这种访问方式称为“链接”。
万维网站点 A万维网站点 C万维网站点 E万维网站点 D万维网站点 B6.4.1  万维网概述万维网 WWW (World Wide Web) 是一个大规模的、联机式的信息储藏所，并非某种特殊的计算机网络。访问方法：链接。提供分布式服务。
万维网是分布式超媒体 (hypermedia) 系统是超文本 (hypertext) 系统的扩充。超文本：由多个信息源链接成。是万维网的基础。超媒体与超文本的区别：文档内容不同。超文本文档仅包含文本信息。超媒体文档还包含其他信息，如图形、图像、声音、动画，甚至活动视频图像等。分布式系统信息分布在整个互联网上。每台主机上的文档都独立进行管理。
    万维网的工作方式以客户服务器方式工作。客户程序：浏览器。服务器程序：在万维网文档所驻留的主机上运行。这个计算机也称为万维网服务器。客户程序向服务器程序发出请求，服务器程序向客户程序送回客户所要的万维网文档。在一个客户程序主窗口上显示出的万维网文档称为页面 (page)。
万维网必须解决的问题（1/2）(1) 怎样标志分布在整个互联网上的万维网文档？ 使用统一资源定位符 URL (Uniform Resource Locator) 。使每一个文档在整个互联网的范围内具有唯一的标识符 URL。(2) 用什么协议来实现万维网上的各种链接？ 使用超文本传送协议 HTTP (HyperText Transfer Protocol)。HTTP 是一个应用层协议，使用 TCP 连接进行可靠的传送。 
万维网必须解决的问题（2/2）(3) 怎样使不同作者创作的不同风格的万维网文档都能在互联网上的各种主机上显示出来，同时使用户清楚地知道在什么地方存在着链接？使用超文本标记语言 HTML (HyperText Markup Language) 。(4) 怎样使用户能够很方便地找到所需的信息？ 使用各种的搜索工具（即搜索引擎）。 
6.4.2  统一资源定位符 URL是对互联网上资源的位置和访问方法的一种简洁表示。给资源的位置提供一种抽象的识别方法，并用这种方法给资源定位。实际上就是在互联网上的资源的地址。显然，互联网上的所有资源，都有一个唯一确定的URL。资源：指在互联网上可以被访问的任何对象，包括文件目录、文件、文档、图像、声音等，以及与互联网相连的任何形式的数据。URL 相当于一个文件名在网络范围的扩展。因此，URL 是与互联网相连的机器上的任何可访问对象的一个指针。
1. URL 的格式由以冒号（:）隔开的两大部分组成，对字符大写或小写没有要求。一般形式：<协议>://<主机>:<端口>/<路径> 
1. URL 的格式由以冒号（:）隔开的两大部分组成，对字符大写或小写没有要求。一般形式：<协议>://<主机>:<端口>/<路径> 
1. URL 的格式由以冒号（:）隔开的两大部分组成，对字符大写或小写没有要求。一般形式：<协议>://<主机>:<端口>/<路径> 
1. URL 的格式由以冒号（:）隔开的两大部分组成，对字符大写或小写没有要求。一般形式：<协议>://<主机>:<端口>/<路径> 
1. URL 的格式由以冒号（:）隔开的两大部分组成，对字符大写或小写没有要求。一般形式：<协议>://<主机>:<端口>/<路径> 
2. 使用 HTTP 的 URLhttp://<主机>:<端口>/<路径> 
6.4.3  超文本传送协议 HTTPHTTP 是面向事务的 (transaction-oriented) 应用层协议。使用 TCP 连接进行可靠的传送。定义了浏览器与万维网服务器通信的格式和规则。是万维网上能够可靠地交换文件（包括文本、声音、图像等各种多媒体文件）的重要基础。HTTP 不仅传送完成超文本跳转所必需的信息，而且也传送任何可从互联网上得到的信息，如文本、超文本、声音和图像等。
1.  HTTP 的操作过程互联网服务器www.tsinghua.edu.cn链接到 URL 的超链HTTP 使用此 TCP 连接浏览器 程序服务器程序监听TCP 端口80HTTP客户清华大学院系设置
1.  HTTP 的操作过程互联网服务器www.tsinghua.edu.cn链接到 URL 的超链HTTP 使用此 TCP 连接浏览器 程序服务器程序监听TCP 端口80HTTP客户清华大学院系设置HTTP 规定：在 HTTP 客户与 HTTP 服务器之间的每次交互，都由一个 ASCII 码串构成的请求和一个类似的通用互联网扩充，即“类MIME (MIME-like)”的响应组成。HTTP 报文通常都使用 TCP 连接传送。
在浏览器的地址窗口中键入所要找的页面的 URL。在某一个页面中用鼠标点击一个可选部分，这时浏览器会自动在互联网上找到所要链接的页面。用户浏览页面的两种方法
HTTP 使用了面向连接的 TCP 作为运输层协议，保证了数据的可靠传输。HTTP 协议本身也是无连接的。HTTP 是无状态的 (stateless)，简化了服务器的设计，使服务器更容易支持大量并发的 HTTP 请求。 HTTP 的主要特点
RTTRTT万维网服务器万维网客户发起 TCP 连接HTTP 请求报文传输文档的时间整个文档收到时间时间HTTP 响应报文请求一个万维网文档所需的时间所需的时间 >=    RTT（三报文握手建立 TCP 连接） + RTT（请求和接收文档）+ 文档的传输时间= 2 RTT +文档的传输时间
每请求一个文档就要有两倍 RTT 的开销。客户和服务器每一次建立新的 TCP 连接都要分配缓存和变量。这种非持续连接使服务器的负担很重。协议 HTTP/1.0 的主要缺点假设一个主页page.html 上有 10 个链接的图片：page1.jpg, page2.jpg, page3.jpg,…万维网服务器万维网客户所需的时间 >=    22 RTT + 11 个文档的传输时间
持续连接（persistent connection）：服务器在发送响应后仍然在一段时间内保持这条连接（不释放），使同一个客户（浏览器）和该服务器可以继续在这条连接上传送后续的 HTTP 请求报文和响应报文。只要文档都在同一个服务器上，就可以继续使用该 TCP 连接。两种工作方式：非流水线方式 (without pipelining)流水线方式 (with pipelining)。协议 HTTP/1.1 使用持续连接
客户在收到前一个响应之后才能发出下一个请求。缺点：TCP 连接空闲状态。持续连接：非流水线方式 万维网服务器万维网客户所需的时间 >=    2 RTT + page.html 传输时间+ 10 RTT+ 10 个文档的传输时间+ 空闲时间
客户在收到响应报文之前就能够接着发送新的请求报文。连续的多个请求报文到达服务器后，服务器就可连续发回响应报文。下载效率提高。持续连接：流水线方式 万维网服务器万维网客户所需的时间 >=    1 RTT + 11 个文档的传输时间
是协议 HTTP/1.1 的升级版本。服务器可以并行发回响应（使用同一个 TCP 连接）。允许客户复用 TCP 连接进行多个请求。把所有的报文都划分为许多较小的二进制编码的帧，并采用了新的压缩算法，不发送重复的首部字段，大大减小了首部的开销，提高了传输效率。向后兼容。协议 HTTP/2
2. 代理服务器代理服务器 (proxy server) 又称为万维网高速缓存 (Web cache)，它代表浏览器发出 HTTP 请求。使用高速缓存可减少访问互联网服务器的时延。
不使用高速缓存的情况校园网源点服务器2 Mbit/s互联网浏览器R1R2
校园网浏览器使用高速缓存的情况源点服务器2 Mbit/s互联网R1R2(1) 浏览器访问互联网的服务器时，先与校园网的高速缓存建立 TCP 连接，并向高速缓存发出 HTTP 请求报文。校园网的高速缓存（代理服务器）
校园网浏览器源点服务器使用高速缓存的情况2 Mbit/s互联网R1R2校园网的高速缓存（代理服务器）(2) 若高速缓存已经存放了所请求的对象，则将此对象放入 HTTP 响应报文中返回给浏览器。
校园网浏览器源点服务器2 Mbit/s互联网R1R2校园网的高速缓存（代理服务器）使用高速缓存的情况(3) 若未存放，高速缓存就代表浏览器与互联网上的源点服务器建立 TCP 连接，并发送 HTTP 请求报文。
校园网浏览器源点服务器2 Mbit/s互联网R1R2校园网的高速缓存（代理服务器）使用高速缓存的情况(4) 源点服务器将所请求的对象放在 HTTP 响应报文中返回给校园网的高速缓存。
校园网浏览器源点服务器2 Mbit/s互联网R1R2校园网的高速缓存（代理服务器）使用高速缓存的情况(5) 高速缓存收到对象后，先复制到本地存储器中（留待以后用），然后将该对象放在 HTTP 响应报文中，通过已建立的 TCP 连接，返回给请求该对象的浏览器。
3. HTTP 的报文结构两类报文：请求报文：从客户向服务器的请求。响应报文：从服务器到客户的回答。由于 HTTP 是面向正文的 (text-oriented)，因此报文中每一个字段的值都是一些 ASCII 码串，每个字段的长度都是不确定的。三个组成部分：开始行：用于区分是请求报文还是响应报文。首部行：说明浏览器、服务器或报文主体的一些信息。可以有多行，也可以不使用。实体主体：请求报文中一般不用，响应报文中也可能没有该字段。
HTTP 的报文结构（请求报文）方   法URL版   本首部字段名首部行:值首部字段名值:…实体主体（通常不用）空格回车换行:CRLFCRLFCRLFCRLF在请求报文中，开始行是请求行。
方   法URL版   本首部字段名:值首部字段名值:…实体主体（通常不用）空格回车换行:CRLFCRLFCRLFCRLF方法：对所请求的对象进行的操作，实际上就是一些命令。请求报文的类型是由它所采用的方法决定的。 HTTP 的报文结构（请求报文）请求行首部行
HTTP 请求报文的一些方法
方   法URL版   本首部字段名:值首部字段名值:…实体主体（通常不用）空格回车换行:CRLFCRLFCRLFCRLFURL：所请求的资源的 URL。HTTP 的报文结构（请求报文）请求行首部行
方   法URL版   本首部字段名:值首部字段名值:…实体主体（通常不用）空格回车换行:CRLFCRLFCRLFCRLF版本：HTTP 的版本。HTTP 的报文结构（请求报文）请求行首部行
HTTP 请求报文举例GET /dir/index.htm HTTP/1.1Host: www.xyz.edu.cnConnection: closeUser-Agent: Mozilla/5.0Accept-Language: cnCRLF使用了相对 URL请求行首部行首部行开始。给出主机的域名告诉服务器发送完请求的文档后释放连接表明用户代理使用火狐浏览器 Firefox表示用户希望优先得到中文版本的文档请求报文的最后一行为空行没有实体主体
HTTP 的报文结构（响应报文）版   本状态码短   语首部字段名首部行:值首部字段名值:…实体主体（有些响应报文不用）空格回车换行:CRLFCRLFCRLFCRLF在响应报文中，开始行是状态行。版本：HTTP 的版本。状态码：服务器操作完成的状态。短语：解释状态码。
1xx 表示通知信息，如请求收到了或正在进行处理。2xx 表示成功，如接受或知道了。3xx 表示重定向，表示要完成请求还必须采取进一步的行动。4xx 表示客户的差错，如请求中有错误的语法或不能完成。5xx 表示服务器的差错，如服务器失效无法完成请求。状态码：都是三位数字，分为5大类响应报文中常见到的三种状态行：HTTP/1.1 202 Accepted		接受HTTP/1.1 400 Bad Request		错误的请求Http/1.1 404 Not Found		找不到
4. 在服务器上存放用户的信息万维网使用 Cookie 跟踪在 HTTP 服务器和客户之间传递的状态信息。cookie file后台数据库服务器用户 A
6.4.4  万维网的文档在一个客户程序主窗口上显示出的万维网文档称为页面 (page)。页面制作的标准语言：HTML。分为：静态万维网文档。内容不会改变。简单。动态万维网文档。文档的内容由应用程序动态创建。活动万维网文档。由浏览器端改变文档的内容。
超文本标记语言 HTML (HyperText Markup Language) 是一种制作万维网页面的标准语言，它消除了不同计算机之间信息交流的障碍，是万维网的重要基础 [RFC 2854]。最新 HTML 5.0 增加了<audio>和<video>两个标签，实现对多媒体中的音频、视频使用的支持，增加了能够在移动设备上支持多媒体功能。注意：HTML 不是应用层的协议，它只是万维网浏览器使用的一种语言。1. 超文本标记语言 HTML
1. 超文本标记语言 HTMLHTML 定义了许多用于排版的命令（即标签）。HTML 把各种标签嵌入到万维网的页面中，构成了所谓的 HTML 文档。HTML 文档是一种可以用任何文本编辑器创建的 ASCII 码文件。HTML 文档的后缀：.html 或 .htm。 
HTML 文档中标签的用法<HTML>                                          <HEAD>                                               <TITLE>一个 HTML 的例子</TITLE></HEAD><BODY>      <H1>HTML 很容易掌握</H1>      <P>这是第一个段落。</P>      <P>这是第二个段落。</P></BODY></HTML>
HTML 文档中标签的用法<HTML>                                          <HEAD>                                               <TITLE>一个 HTML 的例子</TITLE></HEAD><BODY>      <H1>HTML 很容易掌握</H1>      <P>这是第一个段落。</P>      <P>这是第二个段落。</P></BODY></HTML>
HTML 文档中标签的用法<HTML>                                          <HEAD>                                               <TITLE>一个 HTML 的例子</TITLE></HEAD><BODY>      <H1>HTML 很容易掌握</H1>      <P>这是第一个段落。</P>      <P>这是第二个段落。</P></BODY></HTML>
HTML 文档中标签的用法<HTML>                                          <HEAD>                                               <TITLE>一个 HTML 的例子</TITLE></HEAD><BODY>      <H1>HTML 很容易掌握</H1>      <P>这是第一个段落。</P>      <P>这是第二个段落。</P></BODY></HTML>
HTML 文档中标签的用法<HTML>                                          <HEAD>                                               <TITLE>一个 HTML 的例子</TITLE></HEAD><BODY>      <H1>HTML 很容易掌握</H1>      <P>这是第一个段落。</P>      <P>这是第二个段落。</P></BODY></HTML>
HTML 文档中标签的用法<HTML>                                          <HEAD>                                               <TITLE>一个 HTML 的例子</TITLE></HEAD><BODY>      <H1>HTML 很容易掌握</H1>      <P>这是第一个段落。</P>      <P>这是第二个段落。</P></BODY></HTML>
HTML 文档中标签的用法<HTML>                                          <HEAD>                                               <TITLE>一个 HTML 的例子</TITLE></HEAD><BODY>      <H1>HTML 很容易掌握</H1>      <P>这是第一个段落。</P>      <P>这是第二个段落。</P></BODY></HTML>
HTML 文档中标签的用法<HTML>                                          <HEAD>                                               <TITLE>一个 HTML 的例子</TITLE></HEAD><BODY>      <H1>HTML 很容易掌握</H1>      <P>这是第一个段落。</P>      <P>这是第二个段落。</P></BODY></HTML>
<img>：图像标签。允许在万维网页面中插入图像。一个页面本身带有的图像称为内含图像 (inline image)。HTML 标准没有规定该图像的格式。大多数浏览器都支持 GIF 和 JPEG 文件。HTML 文档中标签的用法
<a>：链接标签。每个链接都有一个起点和终点。起点：说明在万维网页面中的什么地方可引出一个链接。可以是一个字或几个字，或是一幅图，或是一段文字。例如： 	<a href=“http://www.tsinghua.edu.cn”>清华大学主页</a>终点：可以是其他网站上的页面。这种链接方式叫做远程链接。这时必须指明链接到的网站的 URL。可以指向本计算机中的某一个文件或本文件中的某处，这种链接方式叫做本地链接。这时必须指明链接的路径。HTML 文档中标签的用法
可扩展标记语言 XML (Extensible Markup Language) 和 HTML 很相似。设计宗旨是：传输数据，而不是显示数据。特点和优点：可用来标记数据、定义数据类型；允许用户对自己的标记语言进行自定义，并且是无限制的；简单，与平台无关；将用户界面与结构化数据分隔开来；XML
可扩展超文本标记语言 XHTML (Extensible HTML) 与 HTML 4.01 几乎相同，是更严格的 HTML 版本。作为一种 XML 应用被重新定义的 HTML，将逐渐取代 HTML。XHTML
层叠样式表 CSS (Cascading Style Sheets) 是一种样式表语言，用于为 HTML 文档定义布局。CSS 与 HTML 的区别：HTML 用于结构化内容，而 CSS 则用于格式化结构化的内容。例如：精确规定在浏览器上显示的字体、颜色、边距、高度、宽度、背景图像等。CSS
2. 动态万维网文档静态文档：该文档创作完毕后就存放在万维网服务器中，在被用户浏览的过程中，内容不会改变。 动态文档：文档的内容是在浏览器访问万维网服务器时才由应用程序动态创建。动态文档和静态文档之间的主要差别体现在服务器端：文档内容的生成方法不同。从浏览器的角度看，这两种文档并没有区别。 
(1) 增加一个应用程序：处理浏览器发来的数据，并创建动态文档。(2) 增加一个机制：使万维网服务器把浏览器发来的数据传送给这个应用程序，然后万维网服务器能够解释这个应用程序的输出，并向浏览器返回 HTML 文档。万维网服务器功能的扩充
扩充了功能的万维网服务器万维网服务器浏览器 程序万维网客户服务器 程序HTTP数据库
通用网关接口 CGI (Common Gateway Interface) ：定义动态文档应如何创建，输入数据应如何提供给应用程序，以及输出结果应如何使用的一种标准。通用：CGI 标准所定义的规则对其他任何语言都是通用的。网关：CGI 程序的作用像网关。接口：有一些已定义好的变量和调用等可供其他 CGI 程序使用。 CGI
正式名字：CGI 脚本 (script)。脚本：指的是一个程序，它被另一个程序（解释程序）而不是计算机的处理机来解释或执行。脚本语言 (script language)：如 Perl, JavaScript，Tcl/Tk 等。也可用一些常用的编程语言写出，如 C，C++等。脚本运行起来要比一般的编译程序要慢。脚本不一定是一个独立的程序，可以是一个动态装入的库，甚至是服务器的一个子程序。CGI 网关程序
3. 活动万维网文档活动文档 (active document) 技术：把屏幕连续更新的工作转移给浏览器端。每当浏览器请求一个活动文档时，服务器就返回一段程序副本在浏览器端运行。活动文档程序可与用户直接交互，并可连续地改变屏幕的显示。由于活动文档技术不需要服务器的连续更新传送，对网络带宽的要求也不会太高。 
活动文档在客户端创建万维网服务器浏览器 程序万维网客户服务器 程序HTTP 此程序在客户端创建出活动文档程序事先被编译成二进制代码，存放为文件程序
Java 语言是一项用于创建和运行活动文档的技术。在 Java 技术中使用小应用程序 (applet) 来描述活动文档程序。用户从万维网服务器下载嵌入了 applet 的 HTML 文档后，可在浏览器的屏幕上点击某个图像，就可看到动画效果，或在下拉式菜单中点击某个项目，就可看到计算结果。Java 技术是活动文档技术的一部分。 用 Java 语言创建活动文档
6.4.5  万维网的信息检索系统使用户能够很方便地找到所需的信息。在万维网中用来进行搜索的程序叫做搜索引擎 (search engine)。
1.  全文检索搜索和分类目录搜索
(b) 分类检索举例(a) 全文检索举例
全文检索搜索引擎：Google（谷歌）(www.google.com) 必应 (cn.bing.com)百度 (www.baidu.com)。分类目录搜索引擎：雅虎 (www.yahoo.com)雅虎中国 (cn.yahoo.com)新浪 (www.sina.com)搜狐 (www.sohu.com)网易 (www.163.com) 一些著名的搜索引擎
垂直搜索引擎 (Vertical Search Engine) ：针对某一特定领域、特定人群或某一特定需求提供搜索服务。也是提供关键字来进行搜索，但被放到一个行业知识的上下文中，返回的结果更倾向于信息、消息、条目等。目前热门的垂直搜索行业有：购物、旅游、汽车、求职、房产、交友等。垂直搜索引擎
元搜索引擎 (Meta Search Engine) ：把用户提交的检索请求发送到多个独立的搜索引擎上去搜索，并把检索结果集中统一处理，以统一的格式提供给用户，因此是搜索引擎之上的搜索引擎。主要精力放在提高搜索速度、智能化处理搜索结果、个性化搜索功能的设置和用户检索界面的友好性上。其查全率和查准率都比较高。元搜索引擎
2.  Google 搜索技术的特点核心技术：网页排名（PageRank）对搜索结果按重要性排序。对链接的数目进行加权统计。来自重要网站的链接，其权重较大。进行超文本匹配分析，确定哪些网页与正在执行的特定搜索相关。在综合考虑整体重要性以及与特定查询的相关性之后，Google  就把最相关、最可靠的搜索结果放在首位。
6.4.6  博客和微博
6.4.7  社交网站社交网站 SNS (Social Networking Site) ：为一群拥有相同兴趣与活动的人创建在线社区。功能丰富：如电子邮件、即时传信（在线聊天）、博客撰写、共享相册、上传视频、网页游戏、创建社团、刊登广告等。热门：脸书 (Facebook，又名面书、脸谱、脸谱网) (Facebook.com)。YouTube.com推特 Twitter (twitter.com) 。微信 (weixin.qq.com)。抖音
6.5电子邮件6.5.1                                           电子邮件概述6.5.2                          简单邮件传送协议 SMTP6.5.3                                 电子邮件的信息格式6.5.4                   邮件读取协议 POP3 和 IMAP6.5.5                              基于万维网的电子邮件6.5.6                       通用互联网邮件扩充 MIME
6.5.1  电子邮件概述电子邮件 (e-mail)：指使用电子设备交换的邮件及其方法。优点：使用方便，传递迅速，费用低廉，可以传送多种类型的信息（包括：文字信息，声音和图像等）。重要标准：简单邮件发送协议：SMTP互联网文本报文格式通用互联网邮件扩充 MIME邮件读取协议：POP3 和 IMAP
电子邮件系统的组成：三个主要构件发送邮件TCP连接SMTP客户SMTP服务器SMTP客户用户发件人读取邮件TCP连接POP3客户SMTP服务器POP3服务器用户收件人发送邮件TCP 连接用户代理，邮件服务器，以及邮件发送和读取协议。
用户代理 UA (User Agent)SMTPPOP3发送邮件发送邮件 SMTP读取邮件TCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人用户与电子邮件系统的接口。又被称为电子邮件客户端软件。基本功能：撰写、显示、处理、通信。
邮件服务器 (Mail Server)SMTPPOP3发送邮件发送邮件 SMTP读取邮件TCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人又被称为邮件传输代理。功能：发送和接收邮件，同时还要向发信人报告邮件传送的情况。按照客户服务器方式工作。
邮件发送和读取协议发送邮件 SMTPTCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人邮件发送和读取使用不同的协议。简单邮件发送协议 SMTP：用于在用户代理向邮件服务器 或 邮件服务器之间发送邮件。邮局协议 POP3：用于用户代理从邮件服务器读取邮件。
应当注意发送邮件 SMTPTCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人邮件服务器必须能够同时充当客户和服务器。SMTP 和 POP3（或 IMAP）都使用 TCP 连接可靠地传送邮件。
发送和接收电子邮件的重要步骤邮件缓存   接收方邮件服务器用户代理SMTPSMTPPOP3   发送方邮件服务器用户邮箱接收方(发送邮件)（发送邮件）(读取邮件)互联网SMTPPOP3发送邮件发送邮件 SMTP读取邮件TCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人
发送和接收电子邮件的重要步骤发送方邮件缓存   接收方邮件服务器用户代理SMTPSMTPPOP3   发送方邮件服务器用户代理用户邮箱接收方(发送邮件)（发送邮件）(读取邮件)互联网SMTPPOP3发送邮件发送邮件 SMTP读取邮件TCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人
发送和接收电子邮件的重要步骤发送方邮件缓存   接收方邮件服务器用户代理SMTPSMTPPOP3   发送方邮件服务器用户代理用户邮箱接收方(发送邮件)（发送邮件）(读取邮件)互联网SMTPPOP3发送邮件发送邮件 SMTP读取邮件TCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人
发送和接收电子邮件的重要步骤发送方邮件缓存   接收方邮件服务器用户代理SMTPSMTPPOP3   发送方邮件服务器用户代理用户邮箱接收方(发送邮件)（发送邮件）(读取邮件)互联网SMTPPOP3发送邮件发送邮件 SMTP读取邮件TCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人注意：邮件不会在互联网中的某个中间邮件服务器落地。
发送和接收电子邮件的重要步骤发送方邮件缓存   接收方邮件服务器用户代理SMTPSMTPPOP3   发送方邮件服务器用户代理用户邮箱接收方(发送邮件)（发送邮件）(读取邮件)互联网SMTPPOP3发送邮件发送邮件 SMTP读取邮件TCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人
两种不同的通信方式发送方邮件缓存   接收方邮件服务器用户代理SMTPSMTPPOP3   发送方邮件服务器用户代理用户邮箱接收方(发送邮件)（发送邮件）(读取邮件)互联网SMTPPOP3发送邮件发送邮件 SMTP读取邮件TCP连接TCP连接发送方邮件服务器SMTP客户POP3客户发件方用户代理接收方邮件服务器SMTP服务器POP3服务器SMTP服务器SMTP客户接收方用户代理TCP 连接用户发件人用户收件人“推”(push)“拉”(pull)
电子邮件的组成电子邮件由信封 (envelope) 和内容 (content) 两部分组成。电子邮件的传输程序根据邮件信封上的信息来传送邮件。用户在从自己的邮箱中读取邮件时才能见到邮件的内容。
电子邮件地址的格式在邮件的信封上，最重要的就是收件人的地址。 TCP/IP 体系的电子邮件系统规定电子邮件地址的格式如下：例如：	xiexiren@tsinghua.org.cn收件人邮箱名@邮箱所在主机的域名          (6-1)
6.5.2  简单邮件传送协议 SMTPSMTP客户SMTP服务器SMTP客户用户发件人读取邮件TCP连接POP3客户SMTP服务器POP3服务器发送方邮件服务器发件方用户代理POP3接收方邮件服务器接收方用户代理用户收件人SMTP 规定了在两个相互通信的 SMTP 进程之间交换信息的方法。SMTP 使用客户服务器方式。SMTP 基于 TCP 实现客户与服务器的通信。
6.5.2  简单邮件传送协议 SMTPSMTP 是一个基于文本的 （即 ASCII 码） 的协议。 SMTP 客户与服务器之间采用命令-响应方式进行交互。SMTP客户SMTP服务器
6.5.2  简单邮件传送协议 SMTPSMTP服务器TCP熟知端口 25SMTP 基于 TCP 实现客户与服务器之间的通信。SMTP客户互联网TCP短暂端口
SMTP 通信的三个阶段连接建立：连接是在发送主机的 SMTP 客户和接收主机的 SMTP 服务器之间建立的。SMTP 不使用中间的邮件服务器。   邮件传送连接释放：邮件发送完毕后，SMTP 应释放 TCP 连接。 
连接建立SMTP 服务器TCP 端口 25SMTP 客户SMTP 通信的三个阶段SMTP 客户首先使用熟知端口 25 与接收方的 SMTP 服务器建立 TCP 连接。注意：SMTP 不使用中间的邮件服务器。 
连接建立SMTP 服务器TCP 端口 25SMTP 客户SMTP 通信的三个阶段SMTP 服务器发出服务就绪。
连接建立SMTP 服务器TCP 端口 25SMTP 客户SMTP 通信的三个阶段SMTP 客户向服务器发送问候 (HELO命令），附上发送方的主机名。
连接建立SMTP 服务器TCP 端口 25SMTP 客户SMTP 通信的三个阶段SMTP 服务器若有能力接收邮件，则回答：“250 OK”，表示已准备好接收。
邮件传送SMTP 服务器SMTP 客户信封首部主体空行SMTP 通信的三个阶段TCP 端口 25
连接释放SMTP 服务器SMTP 客户SMTP 通信的三个阶段TCP 端口 25
6.5.3  电子邮件的信息格式首部 (header)主体 (body)空行MAIL FROM: one@abc.eduRCPT TO: two@xyz.com信封内容一个电子邮件分为信封和内容两大部分。RFC 5322 只规定了邮件内容中的首部 (header) 格式。邮件的主体 (body) 部分则让用户自由撰写。
邮件内容的首部首部 (header)主体 (body)空行MAIL FROM: one@abc.eduRCPT TO: two@xyz.com信封内容From: LionKing@abc.eduTo: TigerWang@xyz.comDate: 2018-08-18Subject: GreetingsCc: Manager@zoo.com纯文本信息 （ASCII编码）。无特定结构和含义。
6.5.4  邮件读取协议 POP3 和 IMAP两个常用的邮件读取协议：POP3：邮局协议 (Post Office Protocol) 第3个版本 IMAP：网际报文存取协议 (Internet Message Access Protocol)
SMTP客户SMTP服务器SMTP客户用户发件人POP3客户SMTP服务器POP3服务器发送方邮件服务器发件方用户代理接收方邮件服务器接收方用户代理用户收件人POP3 使用客户服务器方式。POP3 基于 TCP 实现客户与服务器的通信。POP3 协议
POP3客户SMTP服务器POP3服务器你是谁？（用户名和口令）POP3接收方邮件服务器接收方用户代理POP3 支持用户鉴别。POP3 服务器删除被用户读取了的邮件。POP3 协议TCP 连接
IMAP客户SMTP服务器IMAP服务器IMAP接收方邮件服务器接收方用户代理IMAP 使用客户服务器方式。IMAP 基于 TCP 实现客户与服务器的通信。IMAP 是一个联机协议。IMAP 协议TCP 连接
IMAP 的特点连接后只下载邮件首部（部分下载）。用户直接在 IMAP 服务器上创建和管理文件夹。用户可以搜索邮件内容。用户可以在不同的地方使用不同的计算机随时上网阅读和处理自己的邮件。允许收信人只读取邮件中的某一个部分。缺点：要想查阅邮件，必须先联网。
IMAP 与 POP3 比较
IMAP 与 POP3 比较邮件服务器邮件服务器互联网互联网整个邮件所有邮件邮件首部使用 POP3读取邮件使用 IMAP读取邮件
必须注意邮件读取协议 POP 或 IMAP 与邮件传送协议 SMTP 完全不同。发信人的用户代理向源邮件服务器发送邮件，以及源邮件服务器向目的邮件服务器发送邮件，都是使用 SMTP 协议。而 POP 协议或 IMAP 协议则是用户从目的邮件服务器上读取邮件所使用的协议。 
6.5.5  基于万维网的电子邮件用户代理 (UA) 的缺点：必须在计算机中安装用户代理软件。收发邮件不方便。万维网电子邮件优点：不需要在计算机中再安装用户代理软件。计算机能联网，就能非常方便地收发电子邮件。界面非常友好。
万维网电子邮件HTTP服务器SMTP客户用户发件人SMTP服务器HTTP服务器HTTP客户用户收件人发送、接收电子邮件时使用 HTTP 协议。两个邮件服务器之间传送邮件时使用 SMTP。HTTP客户ABC 网站XYZ 网站
万维网电子邮件HTTP服务器SMTP客户用户发件人SMTP服务器HTTP服务器HTTP客户用户收件人使用 HTTP POST 方法提交要发送的邮件。使用 HTTP GET 方法读取邮件。HTTP客户ABC 网站XYZ 网站POST提交GET下载
6.5.6  通用互联网邮件扩充 MIMESMTP 缺点：不能传送可执行文件或其他的二进制对象。限于传送 7 位的 ASCII 码，无法传送非 ASCII 编码的信息。服务器会拒绝超过一定长度的邮件。某些 SMTP 的实现并没有完全按照 [RFC 821] 的 SMTP 标准。 
1.  MIME 概述通用互联网邮件扩充 MIME 并没有改动 SMTP 或取代它。意图：继续使用目前的 [RFC 822] 格式，但增加了邮件主体的结构，并定义了传送非 ASCII 码的编码规则。 
MIME 和 SMTP 的关系
5 个新的邮件首部字段。定义了许多邮件内容的格式，对多媒体电子邮件的表示方法进行了标准化。定义了传送编码，可对任何内容格式进行转换，而不会被邮件系统改变。MIME 主要包括三个部分
MIME 增加 5 个新的邮件首部邮件首部邮件主体MIME首部MIME-Version：MIME 的版本。若无此行，则为英文文本。Content-Description：这是可读字符串，此邮件的说明。Content-Id：邮件的唯一标识符。 Content-Transfer-Encoding：传送时邮件主体使用的编码方法。Content-Type：邮件内容类型 / 子类型。 
2.  内容传送编码(Content-Transfer-Encoding) 
适用于所传送的数据中只有少量的非 ASCII 码的情况。Quoted-printable 编码001111010011100101000100(=)(9)(D) … 01001100   10011101      00111001  … 1001110111001111 10110101 11001101 10110011=CF=B5=CD=B332位96位原来 1 个字节，现在需要 3 个字节，开销 = 200%
适合任意长度的二进制数据。编码表如下：Base64 编码用两个连在一起的二个等号“==”和一个等号“=”分别表示最后一组的代码只有 8 位或 16 位。
Base64 编码原始字节原来为 3 个字节，编码后为 4 个字节，开销 = 25%4 个 6 位组Base64 编码ASCII 编码
Base64 编码原始字节4 个 6 位组Base64 编码ASCII 编码
3.  内容类型MIME 标准规定：MIME 标准原先定义了 7 个基本内容类型和 15 种子类型。 MIME 允许发件人和收件人自己定义专用的内容类型。但为避免可能出现名字冲突，标准要求为专用内容类型选择的名字要以字符串 X-开始。Content-Type 说明必须含有两个标识符：内容类型 (type) 和子类型 (subtype)，中间用“/”分开。 
MIME Content-Type 说明中的类型及子类型Multipart 很有用，使邮件增加了相当大的灵活性。
MIME 举例From: lionking@abc.edu To: tigerwang@xyz.com Subject: picture of my new home MIME-Version: 1.0 Content-Transfer-Encoding: base64 Content-Type: image/jpeg base64 encoded data ..... ......................... ......base64 encoded data 内容类型/子类型编码方法MIME 版本编码后的数据
在协议软件中，给协议参数赋值的动作叫做协议配置。一个协议软件在使用之前必须是已正确配置的。具体的配置信息取决于协议栈。连接到互联网的计算机的协议软件需要正确配置的参数包括：IP 地址子网掩码默认路由器的 IP 地址域名服务器的 IP 地址6.6  动态主机配置协议 DHCP
动态主机配置协议 DHCP动态主机配置协议 DHCP (Dynamic Host Configuration Protocol) 提供了即插即用连网 (plug-and-play networking) 的机制，允许一台计算机加入网络和获取 IP 地址，而不用手工配置。DHCP 给运行服务器软件、且位置固定的计算机指派一个永久地址，给运行客户端软件的计算机分配一个临时地址。
DHCP 使用客户服务器方式需要 IP 地址的主机在启动时就向 DHCP 服务器广播发送发现报文（DHCPDISCOVER），这时该主机就成为 DHCP 客户。本地网络上所有主机都能收到此广播报文，但只有 DHCP 服务器才回答此广播报文。DHCP 服务器先在其数据库中查找该计算机的配置信息。若找到，则返回找到的信息。若找不到，则从服务器的 IP 地址池 (address pool) 中取一个地址分配给该计算机。DHCP服务器的回答报文叫做提供报文（DHCPOFFER）。 
DHCP 工作方式DHCP 使用客户服务器方式，采用请求/应答方式工作。DHCP 基于 UDP 工作，DHCP 服务器运行在 67 号端口， DHCP客户运行在 68 号端口。
DHCP 工作方式主机 A00:a0:24:71:e4:44DHCP 服务器广播需要 IP 地址的主机向 DHCP 服务器广播发送发现报文 (DHCPDISCOVER) 。
主机 A10.12.18.11200:a0:24:71:e4:44DHCP 服务器单播DHCP 服务器回答提供报文 (DHCPOFFER) （单播），提供 IP 地址等配置信息。DHCP 工作方式
DHCP 中继代理 (relay agent) 问题：每个网络上都需要有 DHCP 服务器吗？答案：不需要，因为会使 DHCP 服务器的数量太多。问题：若没有 DHCP 服务器，如何自动获得地址？解决：每一个网络至少有一个 DHCP 中继代理，它配置了 DHCP 服务器的 IP 地址信息。
DHCP 中继代理以单播方式转发发现报文 主机DHCP服务器其他网络DHCP中继代理DHCP 中继代理收到主机广播发送的发现报文后，就以单播方式向 DHCP 服务器转发此报文，并等待其回答。收到 DHCP 服务器回答的提供报文后，DHCP 中继代理再将其发回给主机。
租用期 (lease period) DHCP 服务器分配给 DHCP 客户的 IP 地址的临时的，因此 DHCP 客户只能在一段有限的时间内使用这个分配到的 IP 地址。DHCP 协议称这段时间为租用期。 租用期的数值应由 DHCP 服务器自己决定。DHCP 客户也可在自己发送的报文中（例如，发现报文）提出对租用期的要求。 
DHCP 协议的工作过程
DHCP 协议的工作过程❷：DHCP 客户从 UDP 端口 68 发送 DHCP 发现报文 DHCPDISCOVER。
DHCP 协议的工作过程❸：凡收到 DHCP 发现报文的 DHCP 服务器都发出 DHCP 提供报文 DHCPOFFER，因此 DHCP 客户可能收到多个 DHCP 提供报文 。
DHCP 协议的工作过程❹：DHCP 客户从几个 DHCP 服务器中选择其中的一个，并向所选择的 DHCP 服务器发送 DHCP 请求报文 DHCPREQUEST。
DHCP 协议的工作过程❺：被选择的 DHCP 服务器发送确认报文 DHCPACK，DHCP 客户可开始使用得到的临时 IP 地址了，进入已绑定状态。 
DHCP 协议的工作过程DHCP 客户现在要根据服务器提供的租用期 T 设置两个计时器 T1 和 T2，它们的超时时间分别是 0.5T 和 0.875T。当超时时间到时，就要请求更新租用期。
DHCP 协议的工作过程❻：租用期过了一半（T1 时间到），DHCP 发送请求报文 DHCPREQUEST，要求更新租用期。 
DHCP 协议的工作过程
DHCP 协议的工作过程
DHCP 协议的工作过程
DHCP 协议的工作过程
6.7简单网络管理协议 SNMP6.7.1                                 网络管理的基本概念6.7.2                                    管理信息结构 SMI6.7.3                                       管理信息库 MIB6.7.4                  SNMP 的协议数据单元和报文
6.7.1  网络管理的基本概念网络管理包括对硬件、软件和人力的使用、综合与协调，以便对网络资源进行监视、测试、配置、分析、评价和控制，这样就能以合理的价格满足网络的一些需求，如实时运行性能，服务质量等。网络管理常简称为网管。
网络管理的五大功能故障管理：故障检测、隔离和纠正。配置管理：初始化网络、并配置网络。计费管理：记录网络资源的使用。性能管理：估价系统资源的运行状况及通信效率等。网络安全管理：对授权机制、访问控制、加密和加密关键字的管理。
网络管理的一般模型管理站网络管理员       被管设备—— 管理程序（运行 SNMP 客户程序）—— 代理程序（运行 SNMP 服务器程序）AAAM 被管设备 被管设备 被管设备MAA 被管设备网管协议互联网A
网络管理模型中的主要构件管理站也常称为网络运行中心 NOC (Network Operations Center)，是网络管理系统的核心。管理程序是管理站中的关键构件，在运行时就成为管理进程。管理站（硬件）或管理程序（软件）都可称为管理者(manager)。Manager 不是指人，而是指机器或软件。网络管理员 (administrator) 指的是负责网络管理的人员。大型网络往往实行多级管理，因而有多个管理者，而一个管理者一般只管理本地网络的设备。
被管对象 (Managed Object)网络的每一个被管设备（包括设备中的软件）中可能有多个被管对象。被管设备有时可称为网络元素或网元。在被管设备中也会有一些不能被管的对象。 
代理 (agent)在每一个被管设备中都要运行一个程序，以便和管理站中的管理程序进行通信。这些运行着的程序叫做网络管理代理程序，或简称为代理。代理程序在管理程序的命令和控制下在被管设备上采取本地的行动。
网络管理协议网络管理协议简称为网管协议。网络管理协议是管理程序和代理程序之间进行通信的规则。网络管理员利用网络管理协议，通过管理站对网络中的被管设备进行管理。 注意：网管协议本身不管理网络。
简单网络管理协议 SNMP简单网络管理协议 SNMP (Simple Network Management Protocol) 中的管理程序和代理程序按客户服务器方式工作。管理程序运行 SNMP 客户程序，向某个代理程序发出请求 (或命令)。代理程序运行 SNMP 服务器程序，返回响应 (或执行某个动作)。在网管系统中，往往是一个（或少数几个）客户程序与很多的服务器程序进行交互。
网络管理的基本原理
SNMP 的基本功能最重要的指导思想：尽可能简单。基本功能：监视网络性能检测分析网络差错配置网络设备等。
SNMP 的管理站和委托代理整个系统必须有一个管理站。若网络元素使用的不是 SNMP 而是另一种网络管理协议，SNMP 协议就无法控制该网络元素。这时可使用委托代理 (proxy agent)。委托代理能提供协议转换和过滤操作等功能，对被管对象进行管理。管理站委托代理被管设备被管设备被管设备SNMP专用协议
SNMP 网络管理组成SNMP 的网络管理由三个部分组成：SNMP 本身管理信息结构 SMI (Structure of Management Information)管理信息库 MIB (Management Information Base)。 
简单网络管理协议 SNMPSNMP 定义了管理站和代理之间所交换的分组格式。所交换的分组包含各代理中的对象（变量）名及其状态（值）。SNMP 负责读取和改变这些数值。 
管理信息结构 SMISMI 定义了命名对象和定义对象类型（包括范围和长度）的通用规则，以及把对象和对象的值进行编码的规则，以确保网络管理数据的语法和语义的无二义性。但从 SMI 的名称并不能看出它的功能。SMI 并不定义一个实体应管理的对象数目，也不定义被管对象名以及对象名及其值之间的关联。 
管理信息库 MIBMIB 在被管理的实体中创建了命名对象，并规定了其类型。管理程序使用 MIB 中的信息，对网络进行管理。
6.7.2   管理信息结构 SMISMI 的功能：被管对象应怎样命名；用来存储被管对象的数据类型有哪些种；在网络上传送的管理数据应如何编码。 
SMI 规定：所有被管对象必须在命名树上
SMI 规定：所有被管对象必须在命名树上
SMI 规定：所有被管对象必须在命名树上
SMI 使用 ASN.1SMI 标准指明：所有的 MIB 变量必须使用抽象语法记法 1 (ASN.1) 来定义。SMI 既是 ASN.1 的子集，又是 ASN.1 的超集。 ASN.1 的记法很严格，使得数据的含义不存在任何可能的二义性。
SMI 数据类型SMI 把数据类型分为两大类：简单类型结构化类型。 
ASN.1 部分数据类型
基本编码规则 BERISO 在制订 ASN.1 语言的同时也为它定义了一种标准的编码方案，即基本编码规则 BER (Basic Encoding Rule)。BER 指明了每种数据类型中每个数据的值的表示。SMI 使用 ASN.1 制定的 BER 进行数据的编码。发送端用 BER 编码，可将用 ASN.1 所表述的报文转换成唯一的比特序列。接收端用 BER 进行解码，得到该比特序列所表示的 ASN.1 报文。 
用 TLV 方法进行编码标记 T         长度 L                   值 V数据元素定义数据的值定义 V 字段的长度定义数据的类型
TLV 中的 T 字段定义数据的类型
TLV 中的 T 字段定义数据的类型
TLV 中的 L 字段定义 V 字段的长度指出 V 字段长度 = 2 字节00000010100000100000000100000110单字节的 L 字段指出 V 字段长度 = 262 字节多字节的 L 字段指出后续字节数 = 2后续字节数 = 2
TLV 中的 V 字段定义数据的值
TLV 中的 V 字段定义数据的值例如，INTEGER 15，其 T 字段是 02， INTEGER 类型要用 4 字节编码。最后得出 TLV 编码为 02 04 00 00 00 0F。T02L04V00 00 00 0F
TLV 中的 V 字段定义数据的值例如，IPAddress = 192.1.2.3，其 T 字段是 40，V 字段需要 4 字节表示，因此得出 TLV 编码是 40 04 C0 01 02 03。 T40L04VC0 01 02 03
TLV 中的 V 字段可嵌套其他数据元素的 TLV 字段
6.7.3  管理信息库 MIB被管对象必须维持可供管理程序读写的若干控制和状态信息。这些信息总称为管理信息库 MIB (Management Information Base) 。管理程序使用 MIB 中这些信息的值对网络进行管理（如读取或重新设置这些值）。只有在 MIB 中的对象才是 SNMP 所能够管理的。
SMI 规定：所有被管对象必须在命名树上
节点 mib-2 所包含的信息类别举例
MIB 变量的例子
6.7.4  SNMP 的协议数据单元和报文SNMP 的操作只有两种基本的管理功能：“读”操作，用 get 报文来检测各被管对象的状况；“写”操作，用 set 报文来改变各被管对象的状况。SNMP 的这些功能通过探询操作来实现。
SNMP 的探询操作SNMP 管理进程定时向被管理设备周期性地发送探询信息。好处：可使系统相对简单。能限制通过网络所产生的管理信息的通信量。缺点：不够灵活，而且所能管理的设备数目不能太多。开销也较大。
陷阱 (trap)SNMP 允许不经过询问就能发送某些信息。这种信息称为陷阱，表示它能够捕捉“事件”。当被管对象的代理检测到有事件发生时，就检查其门限值。代理只向管理进程报告达到某些门限值的事件（即过滤）。过滤的好处：仅在严重事件发生时才发送陷阱；陷阱信息很简单且所需字节数很少。 
SNMP 是有效的网络管理协议使用探询（至少是周期性地）以维持对网络资源的实时监视。同时也采用陷阱机制报告特殊事件，使得 SNMP 成为一种有效的网络管理协议。 
SNMP 使用无连接的 UDP运行代理程序的服务器端用 UDP 熟知端口 161 接收 get 或 set 报文，发送响应报文。与熟知端口通信的客户端使用临时端口。运行管理程序的客户端则使用 UDP 熟知端口 162 来接收来自各代理的 trap 报文。 
SNMPv1 定义的协议数据单元 (PDU) 类型    PDU 编号 (T字段)           PDU 名称	                             用途  0  (A0)       	               GetRequest            用来查询一个或一组变量的值  1  (A1)       	               GetNextRequest    允许在 MIB 树上读取下一个变量，此操作可反复进行   2  (A2)       	               Reponse        	      代理向管理者或管理者向管理者发送响应  3  (A3)       	               SetRequest          	对一个或多个变量值进行设置  5  (A5)       	               GetBulkRequest	管理者从代理读取大数据块的值  6  (A6)      	               InformRequest	      管理者从另一管理者读取代理的变量  7  (A7)      	               SNMPv2Trap	      代理向管理者报告异常事件  8  (A8)      	               Report	      管理者之间报告某些差错        
SNMP 的报文格式安全参数
Get-request 报文 ASN.1 定义Get-request-PDU :: [0]                      --[0] 表示上下文类，编号为 0  IMPLICIT SEQUENCE {                      --类型是 SEQUENCE    request-id      integer32,                --变量 request-id 的类型是 integer32    error-status   INTEGER {0..18},     --变量 error-status 取值为 0 ~ 18 的整数    error-index    INTEGER {0..max-bindings}, --变量 error-index 取值为 0 ~ max-bindings的整数    variable-bindings  VarBindList }   --变量 variable-binding 的类型是 VarBindList
Get-request 报文的 BER 编码L09TOBJECT IDENTIFIERrequest-iderror-statuserror-indexvariable-bindingsrequest-ID1.  3.  6.  1.  2.  1.  7.  1.  0GetRequest-PDU TA0  L1DGetRequest-PDUL01L0FTINTEGERL01V05 AE 56 02V00TSEQUENCE OF TINTEGERV00V01 03 06 01 02 01 01 01 00L04TINTEGERTSEQUENCEL0DVarBindname     valueTNULLL00
Get-request 报文的十六进制编码A0 1D                          -- GetRequest-PDU，上下文类型，长度1D16 = 2902 04 05 AE 56 02      -- INTEGER类型，长度0416，request-id = 05 AE 56 02 02 01 00                      -- INTEGER类型，长度0116，error status = 001602 01 00                      -- INTEGER类型，长度0116，error index = 001630 0F                           -- SEQUENCE OF类型，长度0F16 = 1530 0D                   	    -- SEQUENCE类型，长度0D16 = 1306 09 01 03 06 01 02 01 07 01 00    -- OBJECT IDENTIFIER类型，长度0916，udpInDatagrams05 00                       	    -- NULL类型，长度0016
6.8应用进程跨越网络的通信6.8.1                           系统调用和应用编程接口6.8.2                                  几种常用的系统调用
6.8.1  系统调用和应用编程接口大多数操作系统使用系统调用 (system call ) 的机制在应用程序和操作系统之间传递控制权。对程序员来说，每一个系统调用和一般程序设计中的函数调用非常相似，只是系统调用是将控制权传递给了操作系统。 
多个应用进程使用系统调用的机制 应用程序 1应用程序 2应用程序 n…由应用程序调用的系统函数包括 TCP/IP 协议软件的操作系统内核
应用编程接口 API系统调用接口实际上就是应用进程的控制权和操作系统的控制权进行转换的一个接口。使用系统调用之前要编写一些程序，特别是需要设置系统调用中的许多参数，因此这种系统调用接口又称为应用编程接口 API (Application Programming Interface) 。
几种应用编程接口 APIBerkeley UNIX 操作系统定义了一种 API，它又称为套接字接口 (socket interface)。微软公司在其操作系统中采用了套接字接口  API，形成了一个稍有不同的 API，并称之为  Windows Socket。AT&T 为其 UNIX 系统 V 定义了一种 API，简写为 TLI (Transport Layer Interface)。 
应用进程通过套接字接入到网络应用进程TCP由应用程序控制互联网由操作系统控制客户服务器套接字TCP应用进程套接字
套接字的作用当应用进程需要使用网络进行通信时就发出系统调用，请求操作系统为其创建套接字，以便把网络通信所需要的系统资源分配给该应用进程。操作系统为这些资源的总和用一个套接字描述符的号码来表示。应用进程所进行的网络操作都必须使用这个套接字描述符。通信完毕后，应用进程通过一个关闭套接字的系统调用通知操作系统回收与该套接字描述符相关的所有资源。
调用 socket 创建套接字套接字描述符表（每一个进程一个描述符）0：1：2：3：4：操作系统套接字的数据结构协议族：PF_INET服务：SOCK_STREAM本地 IP 地址：远地 IP 地址：本地端口：远地端口：
6.8.2  几种常用的系统调用当应用进程需要使用网络进行通信时，就发出系统调用。使用 TCP/IP 应用编程接口 API，就可以编写基于互联网的网络应用程序了。调用 API 时，用户可以使用 TCP 服务，也可以使用 UDP 等其他服务。
6.8.2  几种常用的系统调用TCP 提供面向连接的服务。使用 TCP 服务需要经历 3 个阶段：连接建立阶段数据传送阶段和 连接释放阶段
服务器端客户端1. 连接建立阶段socketbindlistenacceptrecvsendclosesocketrecvsendcloseconnect连接建立请求连接建立数据传送连接释放
服务器端客户端1. 连接建立阶段socketbindlistenacceptrecvsendclosesocketrecvsendcloseconnect连接建立请求连接建立数据传送连接释放
服务器端客户端1. 连接建立阶段socketbindlistenacceptrecvsendclosesocketrecvsendcloseconnect连接建立请求连接建立数据传送连接释放
服务器端客户端1. 连接建立阶段socketbindlistenacceptrecvsendclosesocketrecvsendcloseconnect连接建立请求连接建立数据传送连接释放
并发方式工作的服务器调用 accept 要完成的动作较多。这是因为一个服务器必须能够同时处理多个连接。这样的服务器常称为并发方式 (concurrent) 工作的服务器。
服务器端客户端1. 连接建立阶段socketbindlistenacceptrecvsendclosesocketrecvsendcloseconnect连接建立请求连接建立数据传送连接释放
服务器端客户端2. 传送阶段socketbindlistenacceptrecvsendclosesocketrecvsendcloseconnect连接建立请求连接建立数据传送连接释放
服务器端客户端3. 连接释放阶段socketbindlistenacceptrecvsendclosesocketrecvsendcloseconnect连接建立请求连接建立数据传送连接释放
6.9P2P 应用6.9.1         具有集中目录服务器的 P2P 工作方式6.9.2      具有全分布式结构的 P2P 文件共享程序6.9.3                                 P2P 文件分发的分析6.9.4                          在 P2P 对等方中搜索对象
P2P 工作方式概述在 P2P 工作方式下，所有的音频/视频文件都是在普通的互联网用户之间传输。
6.9.1 具有集中目录服务器的 P2P 工作方式Napster 最早使用 P2P 技术，提供免费下载 MP3 音乐。Napster 将所有音乐文件的索引信息都集中存放在 Napster 目录服务器中。使用者只要查找目录服务器，就可知道应从何处下载所要的 MP3 文件。用户要及时向 Napster 的目录服务器报告自己存有的音乐文件。Napster 的文件传输是分散的，文件的定位则是集中的。
Napster 的工作过程Napster 集中式目录服务器XCBA谁有文件 MP3#？请求文件 MP3#A有，B有，C有。
Napster 的工作过程XCBA谁有文件 MP3#？请求文件 MP3#A有，B有，C有。Napster 集中式目录服务器
Napster 的工作过程XCBA谁有文件 MP3#？请求文件 MP3#A有，B有，C有。Napster 集中式目录服务器
Napster 的工作过程XCBA谁有文件 MP3#？请求文件 MP3#A有，B有，C有。Napster 集中式目录服务器
集中式目录服务器的缺点可靠性差。会成为性能的瓶颈。
6.9.2 具有全分布式结构的 P2P 文件共享程序Gnutella 是第二代 P2P 文件共享程序，采用全分布方法定位内容的 P2P 文件共享应用程序。 Gnutella 与 Napster 最大的区别：不使用集中式的目录服务器，而是使用洪泛法在大量 Gnutella 用户之间进行查询。为了不使查询的通信量过大，Gnutella 设计了一种有限范围的洪泛查询，减少了倾注到互联网的查询流量，但也影响到查询定位的准确性。第三代 P2P 文件共享程序采用分散定位和分散传输技术。例如 KaZaA，电骡 eMule，比特洪流 BT (Bit Torrent) 等。
使用 P2P 的比特洪流 BT 主要特点BitTorrent 所有对等方集合称为一个洪流 (torrent)。下载文件的数据单元为长度固定的文件块 (chunk)。基础设施结点，叫做追踪器 (tracker)。A 和对等方建立了 TCP 连接。所有与 A 建立了 TCP 连接的对等方为相邻对等方(neighboring peers)。交换文件块追踪器A获得对等方列表
相邻关系是逻辑的，对等方的数目是动态变化的
对等方之间互相传送文件数据块对等方 A对等方 C对等方 D对等方 B数据块图例：数据块传送
BT 协议问题：哪些文件块是首先需要向其相邻对等方请求的？方法：A 使用最稀有的优先 (rarest first) 的技术，首先向其相邻对等方请求对应的文件块。稀有：如果 A 所缺少的文件块在相邻对等方中的副本很少，那就是“很稀有的”。问题：在很多向 A 请求文件块的相邻对等方中，A 应当向哪些相邻对等方发送所请求的文件块？方法：凡当前以最高数据率向 A 传送文件块的某相邻对等方，A 就优先把所请求的文件块传送给该相邻对等方。
6.9.3  P2P 文件分发的分析一些概念：从互联网传送数据到主机，叫做下载 (download)，从主机向互联网传送，则称为上传 (upload) 或上载。
6.9.3  P2P 文件分发的分析有 N 台主机从服务器下载一个大文件，其长度为 F bit。假定主机与互联网连接的链路的上传速率和下载速率分别为 ui 和 di ，单位都是 bit/s。互联网服务器文件FusuNu5u4u3u2u1dNd1d5d4d3d2
客户-服务器方式下分发的最短时间分析从服务器端考虑，所有主机分发完毕的最短时间 Tcs 不可能小于 NF/us ；下载速率最慢的主机的下载速率为 dmin，则 Tcs 不可能小于 F/dmin  。由此可得出所有主机都下载完文件 F 的最少时间是：Tcs=max（ NF/us，F/dmin ）
P2P 方式下分发的最短时间分析初始服务器文件分发的最少时间不可能小于 F/us ；下载文件分发的最少时间不可能小于 F/dmin ；上载文件分发的最少时间不可能小于 NF/uT ，其中是 uT  是上传速率之和。所有主机都下载完文件 F 的最少时间的下限是：Tp2p >= max（ F/us ， F/dmin， NF/uT  ）
时间比较设所有的对等方的上传速率都是 u，并且 F/u = 1 小时。设服务器的上传速率 us = 10u。当 N = 30 时，P2P 方式：最少时间的下限是 0.75 小时 < 1 小时（不管 N 多大）。客户服务器方式：最少时间是 3 小时。
6.9.4  在 P2P 对等方中搜索对象Napster 在一个集中式目录服务器中构建查找数据库，简单，但性能上有瓶颈。Gnutella 是一种采用全分布方法定位内容的 P2P 文件共享应用程序，它解决了集中式目录服务器所造成的瓶颈问题。但 Gnutella 是在非结构化的覆盖网络中采用查询洪泛的方法进行查找，因此查找的效率较低。
6.9.4  在 P2P 对等方中搜索对象现在广泛使用的索引和查找技术叫做分布式散列表 DHT (Distributed Hash Table)。DHT 也可译为分布式哈希表，由大量对等方共同维护。广泛使用的 Chord 算法是美国麻省理工大学于 2001 年提出的。
分布式散列表 DHT 利用散列函数，把资源名 K 及其存放的结点 IP 地址 N 都分别映射为资源名标识符 KID 和结点标识符 NID。Chord 把结点按标识符数值从小到大沿顺时针排列成一个环形覆盖网络。每个资源由 Chord 环上与其标识符值最接近的下一个结点提供服务。基于 DHT 的 Chord 环
基于 DHT 的 Chord 环
通过指针表加速 Chord 表查找为了加速查找，在 Chord 环上可以增加一些指针表(finger table)，又称为路由表或查找器表。对于结点 N4，其指针表的第 2 列第 i  行根据（N4 + 2i – 1）计算得出其后继结点。
结束
第 7 章  网 络 安 全主讲人：熊曾刚 教授
7.1 			        网络安全问题概述7.2 				   两类密码体制7.3 				                 鉴别7.4  				          密钥分配7.5  		              互联网使用的安全协议7.6  		    系统安全：防火墙与入侵检测7.7  		                 一些未来的发展方向7.8 			     一些未来的发展方向
7.1网络安全问题概述7.1.1                     计算机网络面临的安全性威胁7.1.2                                     安全的计算机网络7.1.3                                            数据加密模型
计算机网络上的通信面临以下两大类威胁：被动攻击和主动攻击。截获拒绝服务主  动  攻  击目的站源站源站源站源站目的站目的站目的站篡改恶意程序被动攻击7.1.1  计算机网络面临的安全性威胁两大类威胁：被动攻击和主动攻击。
指攻击者从网络上窃听他人的通信内容。通常把这类攻击称为截获。攻击者只是观察和分析某一个协议数据单元 PDU，以便了解所交换的数据的某种性质，但不干扰信息流。这种被动攻击又称为流量分析 (traffic analysis)。被动攻击
主要有：篡改：故意篡改网络上传送的报文。这种攻击方式有时也称为更改报文流。恶意程序 (rogue program)：种类繁多，主要包括：计算机病毒、计算机蠕虫、特洛伊木马、逻辑炸弹、后门入侵、流氓软件等。拒绝服务 DoS (Denial of Service)：指攻击者向互联网上的某个服务器不停地发送大量分组，使该服务器无法提供正常服务，甚至完全瘫痪。主动攻击
若从互联网上的成百上千的网站集中攻击一个网站，则称为分布式拒绝服务 DDoS (Distributed Denial of Service)。有时也把这种攻击称为网络带宽攻击或连通性攻击。分布式拒绝服务 DDoS
对于主动攻击，可以采取适当措施加以检测。对于被动攻击，通常是检测不出来的。计算机网络通信安全的目标：防止分析出报文内容和流量分析。防止恶意程序。检测更改报文流和拒绝服务。对付被动攻击：加密技术。对付主动攻击：加密技术 + 鉴别技术。计算机网络通信安全的目标
网络的安全性是不可判定的。一个安全的计算机网络应达到四个目标：保密性端点鉴别信息的完整性运行的安全性7.1.2  安全的计算机网络只有信息的发送方和接收方才能懂得所发送信息的内容。是网络安全通信的最基本的内容，也是对付被动攻击必须具备的功能。需要使用各种密码技术。
网络的安全性是不可判定的。一个安全的计算机网络应达到四个目标：保密性端点鉴别信息的完整性运行的安全性7.1.2  安全的计算机网络鉴别信息的发送方和接收方的真实身份。 在对付主动攻击中是非常重要的。
网络的安全性是不可判定的。一个安全的计算机网络应达到四个目标：保密性端点鉴别信息的完整性运行的安全性7.1.2  安全的计算机网络信息的内容未被篡改过。在应对主动攻击中是必不可少的。信息的完整性与端点鉴别往往是不可分割的。鉴别同时包含了端点鉴别和报文完整性。
网络的安全性是不可判定的。一个安全的计算机网络应达到四个目标：保密性端点鉴别信息的完整性运行的安全性7.1.2  安全的计算机网络系统能正常运行并提供服务。访问控制 (access control) 对计算机系统的安全性是非常重要的。必须对访问网络的权限加以控制，并规定每个用户的访问权限。
用户 A 向 B 发送明文 X，通过加密算法 E 运算后，就得出密文 Y。明文 X 截获密文 Y明文 X密文 Y截取者篡改ABE 运算加密算法D 运算解密算法互联网加密密钥 KE解密密钥 KD密钥源安全信道7.1.3  数据加密模型
加密和解密用的密钥 K (key) 是一串秘密的字符串（即比特串）。明文通过加密算法 E  和加密密钥 K  变成密文Y：接收端利用解密算法 D 运算和解密密钥 K  解出明文 X。解密算法是加密算法的逆运算。加密密钥和解密密钥可以一样，也可以不一样。密钥通常由密钥中心提供。当密钥需要向远地传送时，一定要通过另一个安全信道。密钥
密码编码学 (cryptography) ：密码体制的设计学。密码分析学 (cryptanalysis) ：在未知密钥的情况下从密文推演出明文或密钥的技术。密码编码学与密码分析学合起来即为密码学 (cryptology)。一些重要概念
如果不论截取者获得了多少密文，但在密文中都没有足够的信息来唯一地确定出对应的明文，则这一密码体制称为无条件安全的，或称为理论上是不可破的。如果密码体制中的密码不能被可使用的计算资源破译，则这一密码体制称为在计算上是安全的。 一些重要概念
7.2.1  			       对称密钥密码体制7.2.2  				  公钥密码体制7.2两类密码体制
7.2.1   对称密钥密码体制 加密密钥与解密密钥都使用相同密钥的密码体制。明文 X 密文 Y加密密钥 K明文 X密文 YABE 运算加密算法D 运算解密算法互联网解密密钥 K
数据加密标准 DESDES 属于对称密钥密码体制，是一种分组密码。在加密前，先对整个明文进行分组。每一个组长为 64 位。然后对每一个 64 位 二进制数据进行加密处理，产生一组 64 位密文  数据。最后将各组密文串接起来，即得出整个的密文。使用的密钥为 64 位（实际密钥长度为 56 位，有 8 位用于奇偶校验)。 
仅取决于对密钥的保密，其算法是公开的。严重问题：DES 密钥长度较短。现在已经设计出搜索 DES 密钥的专用芯片。56 位 DES 已不再认为是安全的了。 DES 的保密性
使用两个 56 位的密钥。把一个 64 位明文用一个密钥加密，再用另一个密钥解密，然后再使用第一个密钥加密，即三重 DES
2002 年成为美国政府加密标准。现在是 ISO/IEC 18033-3 标准。高级加密标准 AES（Advanced Encryption Standard）是一种分组密码，分组长度为 128 位。有三种加密标准，其密钥分别为 128 位、192 位和 256 位。加密步骤复杂，运算速度比 3DES 快得多，安全性也大大加强。高级加密标准 AES
7.2.2  公钥密码体制又称为公开密钥密码体制。使用不同的加密密钥与解密密钥。这种加密体制又称为非对称密钥密码体制。公钥密码体制产生的主要原因：对称密钥密码体制的密钥分配问题。对数字签名的需求。典型：RSA 体制，一种基于数论中的大数分解问题的体制。
公钥密码体制明文 X 密文 YB 的公钥 PKB明文 X密文 YABE 运算加密算法D 运算解密算法解密B 的私钥 SKB加密互联网
加密密钥与解密密钥 加密密钥 PK（public key，即公钥）：公开。解密密钥 SK（secret key，即私钥或秘钥）：需要保密。加密算法 E 和解密算法 D ：公开。虽然私钥 SK 是由公钥 PK 决定的，但却不能根据 PK 计算出 SK。 
公钥算法的特点 (1) 密钥对产生器产生出接收者 B 的一对密钥：	加密密钥 PKB  和 解密密钥 SKB 。加密密钥 PKB 就是接收者 B 的公钥，向公众公开。解密密钥 SKB 就是接收者 B 的私钥，对其他任何人都保密。(2) 发送者 A 用 B 的公钥 PKB 对明文 X 加密（E 运算），然后发送给 B。接收者 B 用自己的私钥 SKB 解密（D 运算），即可恢复出明文：
公钥算法的特点 (3) 从已知的 PKB 实际上不可能推导出 SKB，即从 PKB 到 SKB 是“计算上不可能的”。(4) 加密密钥是公开的，但不能用来解密，即：(5) 加密和解密运算可以对调，即加密和解密是互逆的：
公开密钥与对称密钥的区别使用对称密钥：在通信信道上可以进行一对一的双向保密通信。这种保密通信仅限于持有此密钥的双方。使用公开密钥：在通信信道上可以是多对一的单向保密通信。例如：很多顾客都向同一个网站发送各自的信用卡信息。
注意 公钥加密算法的开销较大，不会使传统密码体制被弃用。任何加密方法的安全性取决于密钥的长度，以及攻破密文所需的计算量。
7.3.1  				         报文鉴别7.3.2 				         实体鉴别7.3鉴别
鉴别 (authentication) 是网络安全中一个很重要的问题。鉴别包括：7.3.1  报文鉴别 
7.3.1  报文鉴别 
1. 用数字签名进行鉴别（原理）明文 X 密文 YA 的公钥 PKA明文 X密文 YABD 运算加密算法E 运算解密算法互联网核实签名A 的私钥 SKA签名鉴别发送者：A 用其私钥 SKA 对报文 X 进行 D 运算得到的密文。B 为了核实签名，用 A 的公钥 PKA 进行 E 运算，还原出明文 X。
1. 用数字签名进行鉴别（原理）明文 X 密文 YA 的公钥 PKA明文 X密文 YABD 运算加密算法E 运算解密算法互联网核实签名A 的私钥 SKA签名鉴别报文：由于无法得到并使用 A 的私钥 SKA 对报文 X 进行 D 运算，B 对收到的报文进行核实签名的 E 运算将会得出不可读的明文，可以发现报文已被篡改过。
1. 用数字签名进行鉴别（原理）明文 X 密文 YA 的公钥 PKA明文 X密文 YABD 运算加密算法E 运算解密算法互联网核实签名A 的私钥 SKA签名
1. 用数字签名进行鉴别（原理）明文 X 密文 YA 的公钥 PKA明文 X密文 YABD 运算加密算法E 运算解密算法互联网核实签名A 的私钥 SKA签名数字签名的三个功能：实体鉴别：证明来源。报文鉴别：防篡改，保证完整性。不可否认：防抵赖。关键：没有其他人能够持有 A 的私钥 SKA。
可保证机密性的数字签名核实签名解密 加密 签名 E 运算D 运算明文 X明文 X ABA 的私钥 SKA互联网E 运算B 的私钥 SKBD 运算加密与解密签名与核实签名B 的公钥 PKBA 的公钥 PKA密文先后进行两次 D 运算和两次 E 运算，运算量太大，花费非常多的 CPU 时间。目前普遍使用开销小得多的对称密钥加密。要实现数字签名必须使用公钥密码，但一定要设法减小公钥密码算法的开销。
散列函数（又称为杂凑函数，哈希函数）在计算机领域中广泛使用。符合密码学要求的散列函数又常称为密码散列函数 (cryptographic hash function)。密码散列函数 H(X) 应具有以下四个特点：结果的长度应较短和固定。应具有很好的抗碰撞性，避免不同的输入产生相同的输出。应是单向函数(one-way function)，不能逆向变换。其他特性：输出的每一个比特都与输入的每一个比特有关；仅改动输入的一个比特，输出也会相差极大；包括许多非线性运算等。2. 密码散列函数
密码散列函数是单向的
MD5：Message Digest 5，报文摘要的第 5 个版本。SHA-1：Secure Hash Algorithm，安全散列算法。SHA-1 比 MD5 更安全，但计算起来却比 MD5 要慢些。1995 年发布的新版本 SHA-1 [RFC 3174] 在安全性方面有了很大的改进。实用的单向密码散列函数
MD5 算法MD5 的设计者 Rivest 曾提出一个猜想：基本思想：用足够复杂的方法，使报文摘要代码中的每一位都与原来报文中的每一位有关。根据给定的 MD5 报文摘要代码，要找出一个与原来报文有相同报文摘要的另一报文，其难度在计算上几乎是不可能的。
MD5 算法计算步骤附加：把任意长的报文按模 264 计算其余数（64位），追加在报文的后面。填充：在报文和余数之间填充 1～512 位，使得填充后的总长度是 512 的整数倍。填充的首位是 1，后面都是 0。报文1000…00余数报文长度带填充位的长度，模 512 余 448总长度，512 的整数倍
MD5 算法计算步骤分组：把追加和填充后的报文分割为多个 512 位的数据块，每个 512 位的报文数据再分成 4 个 128 位的数据块。计算：将 4 个 128 位的数据块依次送到不同的散列函数进行 4 轮计算。每一轮又都按 32 位的小数据块进行复杂的运算。一直到最后计算出 MD5 报文摘要代码（128 位）。在2004年，中国学者王小云发表了轰动世界的密码学论文，证明可以用系统的方法找出一对报文，这对报文具有相同的 MD5 报文，而这仅需 15 分钟，或不到 1 小时。MD5 的安全性就产生了动摇。随后，又有许多学者开发了对 MD5 实际的攻击。MD5 最终被安全散列算法 SHA 标准所取代。
安全散列算法 SHA-1安全散列算法 SHA (Secure Hash Algorithm)：由美国标准与技术协会 NIST 提出的一个散列算法系列。和 MD5 相似，但其散列值的长度为 160 位。SHA-1 也是先把输入报文划分为许多 512 位长的数据块，然后经过复杂运算后得出散列值。但 SHA-1 后来也被证明其实际安全性并未达到设计要求，并且也曾被王小云教授的研究团队攻破。谷歌也宣布了攻破 SHA-1 的消息。许多组织都已纷纷宣布停用 SHA-1。
安全散列算法 SHA-1SHA-1 已被 SHA-2、SHA-3 所替代。SHA-2 的多种变型：SHA-224，SHA-256，SHA-384，SHA-512。SHA-3 的多种变型：SHA3-224，SHA3-256，SHA3-384，SHA3-512。SHA-3 采用了与 SHA-2 完全不同的散列函数。目前，密码学家尚无法把一个任意已知的报文 X，篡改为具有同样 MD5 或 SHA-1 散列值的另一报文 Y。
3. 用报文鉴别码实现报文鉴别散列函数问题：可以防篡改，但不能防伪造，不能真正实现报文鉴别。XH’(X) = H(X)，是 A 发送过来的。H’(X) ≠ H(X)，不是 A 发送过来的。H’(M) = H(M)，是 A 发送过来的。A 发送报文C 伪造报文
解决方法：采用报文鉴别码 MAC。3. 用报文鉴别码实现报文鉴别把双方共享的密钥 K 与报文 X 进行拼接，然后进行散列运算。散列运算得出的结果为固定长度的 H(X + K)，称为报文鉴别码 MAC (Message Authentication Code)。
用报文鉴别码 MAC 鉴别报文这样的报文鉴别码称为数字签名或数字指纹。只要入侵者不掌握密钥 K，就无法伪造 A 发送的报文（因为无法伪造 A 的 MAC）。鉴别过程并没有执行加密算法，消耗的计算资源少。
HMAC 与 MAC 不同
使用已签名的报文鉴别码 MAC 对报文鉴别没有对报文进行加密，而是对很短的散列 H(X) 进行 D 运算。入侵者没有 A 的私钥，因此不可能伪造出 A 发出的报文。问题：如何分发共享密钥 K？ 解决：采用公钥系统。A报文 XH (X)D 运算MACA的私钥报文 XMACB固定长度散列报文 XMAC发送 H (X)已签名的非固定长度的报文鉴别码H(X)散列运算A的公钥散列运算不安全的互联网已签名的非固定长度的报文鉴别码E 运算拼接扩展的报文=?比较固定长度散列固定长度散列
使用已签名的报文鉴别码 MAC 对报文鉴别没有对报文进行加密，而是对很短的散列 H(X) 进行 D 运算。入侵者没有 A 的私钥，因此不可能伪造出 A 发出的报文。问题：如何分发共享密钥 K？ 解决：采用公钥系统。A报文 XH (X)D 运算MACA的私钥报文 XMACB固定长度散列报文 XMAC发送 H (X)已签名的非固定长度的报文鉴别码H(X)散列运算A的公钥散列运算不安全的互联网已签名的非固定长度的报文鉴别码E 运算拼接扩展的报文=?比较固定长度散列固定长度散列所得到的扩展报文：不可伪造，不可否认。可简称为：“A 用自己的私钥进行签名，B 用 A 的公钥进行鉴别”。
7.4.2  实体鉴别 实体鉴别与报文鉴别不同。报文鉴别：对每一个收到的报文都要鉴别报文的发送者。实体鉴别：在系统接入的全部持续时间内，对和自己通信的对方实体只需验证一次。
最简单的实体鉴别过程 使用共享的对称密钥 KAB 实现实体鉴别。ABA, 口令KAB存在明显漏洞：不能抵抗重放攻击。重放攻击 (replay attack)：入侵者 C 不需要破译报文，而是直接把由 A 加密的报文发送给 B，使 B 误认为 C 就是 A。B 就会向伪装成 A 的 C 发送许多本来应当发给 A 的报文。
使用不重数进行鉴别不重数 (nonce) ：是一个不重复使用的大随机数，即“一次一数”。由于不重数不能重复使用，所以 C 在进行重放攻击时无法重复使用所截获的不重数。AB时间
使用公钥体制进行不重数鉴别在使用公钥密码体制时，可以对不重数进行签名鉴别。使用公钥核实签名。AB时间
假冒攻击C 冒充是 A，发送报文给 B，说：“我是 A”。B 选择一个不重数 RB，发送给 A，但被 C 截获了。C 用自己的私钥 SKC 冒充是 A 的私钥，对 RB 加密，并发送给 B。B 向 A 发送报文，要求对方把解密用的公钥发送过来，但这报文也被 C 截获了。C 把自己的公钥 PKC 冒充是 A 的公钥发送给 B。B 用收到的公钥 PKC 对收到的加密的 RB 进行解密，其结果当然正确。于是 B 相信通信的对方是 A，接着就向 A 发送许多敏感数据，但都被 C 截获了。
中间人攻击 可见，公钥的分配以及认证公钥的真实性是一个非常重要的问题。AB中间人 C时间
7.4.1  			           对称密钥的分配7.4.2  				      公钥的分配7.4密钥分配
安全性：完全基于密钥的安全保护上。密钥管理包括：密钥的产生、分配、注入、验证和使用。密钥分配是密钥管理中最大的问题。密钥必须通过最安全的通路进行分配。网外分配方式：派非常可靠的信使携带密钥分配给互相通信的用户。网内分配方式：密钥自动分配。7.4  密钥分配
7.4.1  对称密钥的分配常用方式：设立密钥分配中心 KDC (Key Distribution Center)。KDC 任务：给需要进行秘密通信的用户临时分配一个会话密钥（仅使用一次）。用户 A 和 B 都是 KDC 的登记用户，并已经在 KDC 的服务器上安装了各自和 KDC 进行通信的主密钥（master key）KA 和 KB。主密钥可简称为密钥。
KDC 对会话密钥 KAB 的分配A密钥分配中心KDC……用户专用主密钥时间B用户  主密钥  A        KA  B               KB   注意：在网络上传送密钥时，都是经过加密的。解密用的密钥都不在网上传送。
KDC 对会话密钥 KAB  的分配为防止重放攻击，KDC 还可在报文中加入时间戳。会话密钥 KAB 是一次性的，因此保密性较高。KDC 分配给用户的密钥 KA 和 KB，应定期更换，以减少攻击者破译密钥的机会。
目前最出名的是 Kerberos V5。既是鉴别协议，同时也是 KDC，是互联网建议标准。使用比 DES 更加安全的高级加密标准 AES 进行加密。使用两个服务器：鉴别服务器 AS (Authentication Server)票据授予服务器 TGS (Ticket-Granting Server)。只用于客户与服务器之间的鉴别，不用于人对人的鉴别。对称密钥分配协议：Kerberos
ABKerberos Kerberos 工作原理
ABKerberos Kerberos 工作原理A 并不保存密钥 KA 。A 需键入正确口令，利用适当的算法生成密钥 KA 。这个口令随即被销毁。
ABKerberos Kerberos 工作原理
Kerberos 要求“松散的”同步Kerberos 要求所有使用 Kerberos 的主机必须在时钟上进行松散的同步。松散的同步：要求所有主机的时钟误差不能太大，例如，不能超过 5 分钟的数量级。这个要求是为了防止重放攻击。
7.4.2  公钥的分配在公钥密码体制中，如果每个用户都具有其他用户的公钥，就可实现安全通信。但不能随意公布用户的公钥，因为：无法防止假冒和欺骗。使用者也无法确定公钥的真正拥有者。方法：借助可信任的第三方机构。
可信任的第三方机构。负责签发数字证书。一般由政府出资建立。认证中心 CA (Certification Authority)
有时也简称为证书。是对公钥与其对应的实体 (人或机器) 进行绑定的一个证明，因此它常称为公钥证书。每个证书中写有公钥及其拥有者的标识信息（例如：人名、地址、电子邮件地址或 IP 地址等）。更重要的是：证书中有 CA 使用自己私钥的数字签名。把 CA 的数字签名和未签名的 B 的证书放在一起，就最后构成了已签名的 B 的数字证书。证书被 CA 进行了数字签名，是不可伪造的。数字证书 (digital certificate)
任何用户都可从可信任的地方（如代表政府的报纸）获得认证中心 CA 的公钥，以验证证书的真伪。数字证书是公开的，不需要加密。数字证书 (digital certificate)
核实：A 拿到 B 的数字证书后，使用数字证书上给出的 CA 的公钥，对数字证书中 CA 的数字签名进行 E 运算，得出一个数值。再对 B 的数字证书 (CA 数字签名除外的部分)  进行散列运算，又得出一个数值。比较这两个数值。若一致，则数字证书是真的。已签名的 B 的数字证书的产生过程
数字证书的格式必须标准化。ITU-T 制定了 X.509 协议标准，描述证书的结构。IETF 采用 X.509 V3 作为互联网的建议标准。X.509 又称为互联网公钥基础结构 PKI (Public Key Infrastructure)。X.509 数字证书
X.509 提出：把多级认证中心链接起来的，构成一个树状的认证系统。末端是用户。最高一级的认证中心都称为根认证中心 (Root CA)，是公认可信的认证中心（或无条件信任的），且其公钥是公开的。认证系统可以有不止一个根 CA。从根 CA 向下的所有链接都称为信任链。
与信任链对应的是证书链。最顶层的根证书的数字签名是自签名的（即自己的私钥给自己签名）。证书链根证书验证签发者(b)中间 CA2 签名用户名：EE 的公钥中间 CA2 签发根 CA 签名中间 CA2中间 CA2 的公钥根 CA 签发根 CA 签名根 CA根 CA 的公钥用户 E 的证书中间 CA2 的证书验证签发者
证书不是永久有效，它可以过期，也可以被吊销。每一个 CA 应当有一个公布于众的、用本 CA 的私钥签名的证书撤销名单，并定期更新。有很多原因导致证书被吊销，例如：用户私钥被盗或遗失。用户不再被该 CA 认证。CA 签署用户证书的私钥被泄漏。证书撤销与更新
7.5互联网使用的安全协议7.5.1  			           网络层安全协议7.5.2  			           运输层安全协议7.5.3 			           应用层安全协议
7.6.1  网络层安全协议IP 几乎不具备任何安全性，不能保证：数据机密性数据完整性数据来源认证由于其在设计和实现上存在安全漏洞，使各种攻击有机可乘。例如：攻击者很容易构造一个包含虚假地址的 IP 数据报。IPsec 提供了标准、健壮且包含广泛的机制保证 IP 层安全。
1.  IPsec 协议族概述IPsec：IP security，IP 安全。IPsec 不是一个单一协议，而是能够在 IP 层提供互联网通信安全的协议族。IPsec 是个框架：允许通信双方选择合适的算法和参数（例如，密钥长度）。为保证互操作性，IPsec 还包含了所有 IPsec 都必须实现的一套加密算法。
IPsec 由三部分组成IP 安全数据报格式：两个协议鉴别首部 AH (Authentication Header) 协议封装安全有效载荷 ESP (Encapsulation Security Payload) 协议加密算法：三个协议互联网密钥交换 IKE (Internet Key Exchange) 协议
IPsec 由三部分组成AH 协议提供源点鉴别和数据完整性，但不能保密。ESP 协议提供源点鉴别、数据完整性和保密。IPsec 支持 IPv4 和 IPv6。使用 ESP 或 AH 协议的 IP 数据报称为 IP 安全数据报（或 IPsec数据报）。AH 协议的功能都已包含在 ESP 协议中。使用 ESP 协议就可以不使用 AH 协议。
IP 安全数据报有两种工作方式添加的首部添加的尾部添加的首部添加的尾部新IP 首部运输方式 (transport mode)隧道方式 (tunnel mode)在整个运输层报文段的前后分别添加若干控制信息，再加上 IP 首部。适合于主机到主机之间的安全传送。 需要使用 IPsec 的主机都运行 IPsec 协议。在原始的 IP 数据报的前后分别添加若干控制信息，再加上新的 IP 首部。需要在 IPsec 数据报所经过的所有路由器上都运行 IPsec 协议。隧道方式常用来实现虚拟专用网 VPN。
IP 安全数据报的 IP 首部是不加密的无论使用哪种方式，最后得出的 IP 安全数据报的 IP 首部都是不加密的。安全数据报：指数据报的数据部分是经过加密的，并能够被鉴别的。通常把数据报的数据部分称为数据报的有效载荷 (payload)。
在发送 IP 安全数据报之前，在源实体和目的实体之间必须创建一条网络层的逻辑连接。此逻辑连接叫做安全关联 SA (Security Association) 。2. 安全关联IPsec 把传统互联网无连接的网络层转换为具有逻辑连接的网络层。 
安全关联的特点安全关联是从源点到终点的单向连接，它能够提供安全服务。在安全关联 SA 上传送的就是 IP 安全数据报。如要进行双向安全通信，则两个方向都需要建立安全关联。若 n 个员工进行双向安全通信，一共需要创建 (2 + 2n ) 条安全关联 SA。
路由器 R1 到 R2 的安全关联 SA假定公司总部的主机 H1 要和分公司的主机 H2 通过互联网进行安全通信。公司总部与分公司之间的安全关联 SA 是在路由器 R1 和 R2 之间建立的。公司总部互联网R1H1R2H2分公司H3装有 IPsec装有 IPsecSA： R1 → R2IP 安全数据报从 R1 到 R2
主机 H1 到 H3 之间的通信假定公司总部的主机 H1 要和内部的主机 H3 进行通信。由于都在公司内部，不需要加密，因此不需要建立安全关联。公司总部互联网R1H1R2H2分公司H3
路由器 R1 到主机 H2 的安全关联 SA若公司总部的主机 H1 要和某外地业务员的主机 H2 进行安全通信，需要在公司总部的路由器 R1 和外地业务员的主机 H2 建立安全关联 SA。公司总部互联网SA：R1 → H2R1IP 安全数据报H1H2业务员从 R1 到 H2
安全关联 SA 包括的状态信息一个 32 位的连接标识符，称为安全参数索引 SPI (Security Parameter Index)。安全关联 SA 的源点和终点的 IP 地址（例如路由器 R1 和 R2 的 IP 地址）。所使用的加密类型（例如，DES 或 AES）。加密使用的密钥。完整性检查的类型（例如，使用报文摘要 MD5 或 SHA-1 的报文鉴别码 MAC）。鉴别使用的密钥。
3.  IP 安全数据报的格式隧道方式下的 IP 安全数据报的格式   安全参数索引 SPI  序号  32 位  32 位ESP 的有效载荷4原始的 IP 数据报的有效载荷原始的IP 首部  填充00…00    填充长度   下一个首部  8 位  8 位协议 = 4 
注意：对于路由器 R1 到 R2 的安全关联 SA，在“原始的 IP 首部”中，用主机 H1 和 H2 的 IP 地址分别作为源地址和目的地址，而在 IP 安全数据报的“新的 IP 首部”中，用路由器 R1 和 R2 的 IP 地址分别作为源地址和目的地址。3.  IP 安全数据报的格式
4.  IPsec 的其他构件安全关联数据库 SAD (Security Association Database)  存放 SA。安全策略数据库 SPD (Security Policy Database) 指明什么样的数据报需要进行 IPsec 处理。互联网密钥交换 IKE (Internet Key Exchange) 为 IP 安全数据报创建安全关联 SA。
互联网密钥交换 IKE非常复杂。互联网的正式标准 [RFC 7296]。IKEv2 以另外三个协议为基础：Oakley：密钥生成协议 [RFC 2412]。安全密钥交换机制 SKEME (Secure Key Exchange Mechanism)：用于密钥交换的协议。它利用公钥加密来实现密钥交换协议中的实体鉴别。互联网安全关联和密钥管理协议 ISAKMP (Internet Secure Association and Key Management Mechanism)：用于实现 IKE 中定义的密钥交换，使 IKE 的交换能够以标准化、格式化的报文创建安全关联 SA。
7.6.2  运输层安全协议现在广泛使用以下两个协议： 安全套接字层 SSL (Secure Socket Layer)运输层安全 TLS (Transport Layer Security)  
1. 协议 TLS 的要点安全套接层 SSL 由 Netscape 于 1994 年开发，广泛应用于基于万维网的各种网络应用（但不限于万维网应用）。SSL 作用在端系统应用层的 HTTP 和运输层之间，在 TCP 之上建立起一个安全通道，为通过 TCP 传输的应用层数据提供安全保障。1999 年，IETF 在 SSL 3.0 基础上设计了 TLS 1.0，为所有基于 TCP 的网络应用提供安全数据传输服务。2018 年 8 月，IETF 发布了经历了 28 个草案后才通过的最新版本TLS 1.3 [RFC 8446，建议标准]（不向后兼容）。2020 年，旧版本 TLS 1.0/1.1 均被废弃。
协议 TLS 的位置在发送方，TLS 接收应用层的数据，对数据进行加密，然后把加密后的数据送往 TCP 套接字。在接收方，TSL 从 TCP 套接字读取数据，解密后把数据交给应用层。 互联网网络接口层TCPSSL/TLS网络接口层TCPSSL/TLS
TLS 与应用层协议独立无关TLS 提供了一个简单的带有套接字的应用程序接口 API，与 TCP 的API 相似。应用层使用 TLS 最多的就是 HTTP。TLS 可用于任何应用层协议。应用程序 HTTP 调用 TLS 对整个网页进行加密时，网页上会提示用户，在网址栏原来显示 http 的地方，现在变成了 https。s 代表 security，表明现在使用的是提供安全服务的 HTTP 协议（TCP 的 HTTPS 端口号是 443，而不是平时使用的端口号 80）。
协议 TLS 具有双向鉴别的功能常用单向鉴别：客户端（浏览器）需要鉴别服务器，确信即将访问的网站服务器是安全和可信的。两个前提：服务器需要有一个有效的 CA 证书来证明自己。CA 证书是运输层安全协议 TLS 的基石。浏览器应具有一些手段来证明服务器是安全和可信的。建立安全会话两个阶段：握手阶段：使用握手协议会话阶段：使用记录协议
TLS 建立安全会话的工作原理握手阶段：使用握手协议会话阶段：使用记录协议
TLS 的握手阶段：验证服务器，生成会话阶段所需的共享密钥协商加密算法。  浏览器 A 向服务器 B 发送浏览器的 TLS 版本号和一些可选的加密算法。  B 从中选定自己所支持的算法（如 RSA），并告知 A，同时把自己的 CA 数字证书发送给 A。服务器鉴别。 客户 A 用数字证书中 CA 的公钥对数字证书进行验证鉴别。生成主密钥。 客户 A 按照双方确定的密钥交换算法生成主密钥 MS (Master Secret)。  客户 A 用 B 的公钥 PKB 对主密钥 MS 加密，得出加密的主密钥 PKB(MS)，发送给服务器 B。
服务器 B 用自己的私钥把主密钥解密出来 ：SKB(PKB(MS)) = MS 。这样，客户 A 和服务器 B 都有了为后面数据传输使用的共同的主密钥 MS。生成会话密钥  和 。为了使双方的通信更加安全，客户 A 和服务器 B 最好使用不同的密钥。主密钥被分割成 4 个不同的密钥。每一方都拥有这样 4 个密钥（注意：这些都是对称密钥）：客户 A 发送数据时使用的会话密钥 KA 客户 A 发送数据时使用的 MAC 密钥 MA 服务器 B 发送数据时使用的会话密钥 KB 服务器 B 发送数据时使用的 MAC 密钥 MB TLS 的握手阶段：验证服务器，生成会话阶段所需的共享密钥
把长的数据划分为较小的数据块，叫做记录 (record)。对每一个记录进行鉴别运算和加密运算。记录协议对每一个记录按发送顺序赋予序号，第一个记录作为 0。发送下一个记录时序号就加 1，序号最大值不得超过 264 – 1，且不允许序号绕回。序号未写在记录之中，而是在进行散列运算时，把序号包含进去。客户 A 向服务器 B 发送一个明文记录时，对 MAC 密钥 MA 、记录的当前序号和明文记录进行散列运算，鉴别明文记录的完整性（内容和顺序均无误）。使用会话密钥 KA 进行加解密。TLS 的会话阶段：保证传送数据的机密性和完整性这种对记录加密的方法称为带关联数据的鉴别加密 AEAD (Authenticated Encryption with Associated Data) 。
TLS 传送的记录格式类型    版本   长度      明  文  记  录    MAC对这部分用 KA 加密类型字段：指明所传送的记录是握手阶段的报文，还是应用程序传送的报文，或最后要关闭 TLS 连接的报文。长度字段：字节数，用于从 TCP 报文中提取 TLS 记录。明  文  记  录    MAC
2. 协议 TLS 必须包含的措施握手阶段补充的措施：客户 A 和服务器 B相互发送不重数，防止重放攻击。生成预主密钥 PMS (Pre-Master Secret)，为下一步生成主密钥使用。生成主密钥。客户 A 和服务器 B 各自使用同样的（已商定的）算法，使用预主密钥 PMS 、客户的不重数和服务器的不重数，生成主密钥 MS。客户 A 向服务器 B 发送的全部握手阶段报文的 MAC。服务器 B 向客户 A 发送的全部握手阶段报文的 MAC。
2. 协议 TLS 必须包含的措施关闭 TLS 连接：关闭 TLS 连接之前，A 或 B 应当先发送关闭 TLS 的记录，以防止截断攻击 (truncation attack)。截断攻击：在 A 和 B 正在进行会话时，入侵者突然发送 TCP 的 FIN 报文段来关闭 TCP 连接。如果 A 或 B 没有事先发送一个要关闭 TLS 的记录，那么 A 或 B 见到 TCP 的 FIN 报文段时，就知道这是入侵者的截断攻击了。因为入侵者无法伪造关闭 TLS 的记录。
2. 协议 TLS 必须包含的措施TLS 1.3 中使用了更加安全的椭圆曲线密码 ECC（Elliptic Curve Cryptography）与 AES，运算速度比 1.2 版本有很大的提高。TLS 1.3 还添加了 0-RTT 的功能。如果客户之前连接过某服务器，TLS 1.3 通过储存先前会话的秘密信息，不需要经过 1-RTT 的握手过程，仅需 0-RTT 即可开始会话阶段，更加提高了 TLS 的效率。必须要防止可能发生的重放攻击。
7.5.3  应用层安全协议 仅讨论应用层中有关电子邮件的安全协议。发送电子邮件是个即时行为，是单向报文的安全问题。发送方 A 和接收方 B 不会事先建立任何会话。接收方 B 读取邮件后，可能会/不会回复邮件。电子邮件安全协议应当为每种加密操作定义相应的算法，以及密钥管理、鉴别、完整性保护等方法。
PGP (Pretty Good Privacy)PGP (Pretty Good Privacy)  是一个完整的电子邮件安全软件包，包括加密、鉴别、电子签名和压缩等技术。将现有的一些算法如 MD5，RSA，以及 IDEA 等综合在一起。提供电子邮件的安全性、发送方鉴别和报文完整性。并不是互联网的正式标准。PGP 很难被攻破。在目前，可以认为 PGP 是足够安全的。 
发送方 A 的 PGP 处理过程 用 A 的私钥 SKA 对明文邮件 X 进行签名。把签名拼接在明文邮件 X 后面。 A 利用随机数生成一次性密钥 K（共享的对称密钥）。 用 A 生成的一次性密钥 K 对已签名的邮件加密。 用 B 的公钥 PKB 对 A 生成的一次性密钥 K 进行加密。 把已加密的一次性密钥和已加密的签名邮件，拼接在一起发送给 B。
接收方 B 的 PGP 处理过程一次性密钥 K验证邮件的完整性 B 根据邮件的种类，分离出已加密的一次性密钥和已加密的签名报文。 用 B 的私钥 SKB 解出一次性密钥 K 。 用解出的一次性密钥 K 对加密的签名邮件进行解密，分离出明文邮件 X 和 A 的数字签名。 用 B 手中的 A 的公钥 PKA 对 A 的数字签名进行解密，即可接着验证邮件的完整性。
7.6.1 					 防火墙7.6.2 				   入侵检测系统7.6系统安全：防火墙与入侵检测
前述基于密码的安全机制不能有效解决以下安全问题：用户入侵：利用系统漏洞进行未授权登录；授权用户非法获取更高级别权限等。软件入侵：通过网络传播病毒、蠕虫和特洛伊木马。拒绝服务攻击等。解决方法：防火墙：控制进出网络边界的分组。入侵检测：深度分析与检测进入的分组，发现疑似入侵行为。7.6  系统安全：防火墙与入侵检测
7.6.1  防火墙防火墙 (firewall) ：防火墙是一种特殊编程的路由器，安装在一个网点和网络的其余部分之间，目的是实施访问控制策略。访问控制策略由使用防火墙的单位自行制定。一种访问控制技术，通过严格控制进出网络边界的分组，禁止任何不必要的通信，从而减少潜在入侵的发生，尽可能降低这类安全威胁所带来的安全风险。
可信的网络不可信的网络分组过滤路由器分组过滤路由器应用网关外局域网内局域网防火墙互联网防火墙的里面防火墙的外面内联网防火墙在互连网络中的位置一般把防火墙里面的网络称为“可信的网络”(trusted network) ，把防火墙外面的网络称为“不可信的网络”(untrusted network)。
两类防火墙技术：分组过滤路由器具有分组过滤功能的路由器。根据过滤规则对进出内部网络的分组进行过滤（转发或者丢弃）。过滤规则：基于分组的网络层或运输层首部信息，例如：源/目的IP地址、源/目的端口、协议类型（TCP 或 UDP），等等。无状态的：独立地处理每一个分组。有状态的：跟踪每个连接或会话的通信状态，根据状态信息决定是否转发分组。优点：简单高效，对用户透明。缺点：不能对高层数据进行过滤。例如：不能禁止某个用户对某个特定应用进行某个特定的操作，不能支持应用层用户鉴别等。
两类防火墙技术：应用网关也称为代理服务器 (proxy server)对报文进行中继，实现基于应用层数据的过滤和高层用户鉴别。所有进出网络的应用程序报文都必须通过应用网关。应用网关在应用层打开报文，查看请求是否合法。如果合法，应用网关以客户进程的身份将请求报文转发给原始服务器。如果不合法，则丢弃报文。缺点：每种应用都需要一个不同的应用网关在应用层转发和处理报文，处理负担较重。对应用程序不透明，需要在应用程序客户端配置应用网关地址。
7.6.2  入侵检测系统 入侵检测系统 IDS (Intrusion Detection System) 能够在入侵已经开始，但还没有造成危害或在造成更大危害前，及时检测到入侵，以便尽快阻止入侵，把危害降低到最小。IDS 对进入网络的分组执行深度分组检查。当观察到可疑分组时，向网络管理员发出告警或执行阻断操作（由于 IDS 的“误报”率通常较高，多数情况不执行自动阻断）。IDS 能用于检测多种网络攻击，包括：网络映射、端口扫描、DoS 攻击、蠕虫和病毒、系统漏洞攻击等。 
两种入侵检测方法：基于特征的 IDS维护一个所有已知攻击标志性特征的数据库。特征和规则通常由网络安全专家生成，由机构的网络管理员定制并将其加入到数据库中。只能检测已知攻击，对于未知攻击则束手无策。至今为止，大多数部署的 IDS 主要是基于特征的。
两种入侵检测方法：基于异常的 IDS 通过观察正常运行的网络流量，学习正常流量的统计特性和规律。当检测到网络中流量某种统计规律不符合正常情况时，则认为可能发生了入侵行为。但区分正常流和统计异常流是一个非常困难的。
椭圆曲线密码 (Elliptic Curve Cryptography，ECC) ：已在 TLS 1.3 的握手协议中占据非常重要的地位，现已大量用于电子护照、金融系统。移动安全 (Mobile Security) ：例如移动支付安全等。量子密码 (Quantum Cryptography) ： 量子计算机的到来将使得目前许多使用中的密码技术无效，后量子密码学（Post-Quantum Cryptography）的研究方兴未艾。商密九号算法 SM9：一种标识密码(Identity-Based Cryptography) 算法。在互联网应用上有前景。7.7  一些未来的发展方向
结束
